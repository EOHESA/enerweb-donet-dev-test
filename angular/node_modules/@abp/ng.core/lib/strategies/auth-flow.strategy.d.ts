import { Injector } from '@angular/core';
import { Store } from '@ngxs/store';
import { AuthConfig, OAuthService, OAuthStorage } from 'angular-oauth2-oidc';
import { Observable } from 'rxjs';
import { ConfigStateService } from '../services/config-state.service';
import { EnvironmentService } from '../services/environment.service';
export declare const oAuthStorage: Storage;
export declare abstract class AuthFlowStrategy {
    protected injector: Injector;
    abstract readonly isInternalAuth: boolean;
    protected store: Store;
    protected environment: EnvironmentService;
    protected configState: ConfigStateService;
    protected oAuthService: OAuthService;
    protected oAuthConfig: AuthConfig;
    abstract checkIfInternalAuth(): boolean;
    abstract login(): void;
    abstract logout(): Observable<any>;
    abstract destroy(): void;
    private catchError;
    constructor(injector: Injector);
    init(): Promise<any>;
}
export declare class AuthCodeFlowStrategy extends AuthFlowStrategy {
    readonly isInternalAuth = false;
    init(): Promise<void>;
    login(): void;
    checkIfInternalAuth(): boolean;
    logout(): Observable<any>;
    destroy(): void;
}
export declare const AUTH_FLOW_STRATEGY: {
    Code(injector: Injector): AuthCodeFlowStrategy;
};
export declare function clearOAuthStorage(storage?: OAuthStorage): void;
