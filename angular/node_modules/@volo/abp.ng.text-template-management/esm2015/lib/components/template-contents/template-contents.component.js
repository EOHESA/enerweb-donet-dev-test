import{ConfigStateService}from"@abp/ng.core";import{Component,Injector}from"@angular/core";import{AbstractTemplateContentComponent}from"../abstract-template-content/abstract-template-content.component";export class TemplateContentsComponent extends AbstractTemplateContentComponent{constructor(e,n){super(e),this.injector=e,this.configStateService=n,this.languages=[],this.referenceTemplateContent={content:""}}ngOnInit(){this.languages=this.configStateService.getDeep("localization.languages"),this.selectedCultureName=this.languages[0].cultureName,this.referenceTemplateContent.cultureName=this.configStateService.getDeep("localization.currentCulture.cultureName"),super.ngOnInit(),this.getReferenceTemplateContent()}getReferenceTemplateContent(){this.templateContentService.get({templateName:this.route.snapshot.params.name,cultureName:this.referenceTemplateContent.cultureName}).subscribe(e=>{this.referenceTemplateContent=e})}onChangeSelectedCultureName(){this.getData().subscribe()}}TemplateContentsComponent.decorators=[{type:Component,args:[{selector:"abp-template-contents",template:'<div class="row entry-row">\r\n  <div class="col-auto">\r\n    <h1 class="content-header-title">\r\n      {{ \'TextTemplateManagement::Contents\' | abpLocalization }}\r\n    </h1>\r\n  </div>\r\n  <div class="col-lg-auto pl-lg-0">\r\n    <abp-breadcrumb></abp-breadcrumb>\r\n  </div>\r\n</div>\r\n\r\n<div class="card">\r\n  <div class="card-header">\r\n    <label\r\n      >{{ \'TextTemplateManagement::Name\' | abpLocalization }}:\r\n      <strong>{{ templateContent.name }}</strong></label\r\n    >\r\n  </div>\r\n  <div class="card-body">\r\n    <div class="row">\r\n      <div class="col-md-6">\r\n        <div class="form-group">\r\n          <label for="target-culture-name">{{\r\n            \'TextTemplateManagement::BaseCultureName\' | abpLocalization\r\n          }}</label>\r\n          <select\r\n            class="culture-selector custom-select form-control"\r\n            id="target-culture-name"\r\n            name="target-culture-name"\r\n            [(ngModel)]="referenceTemplateContent.cultureName"\r\n            (ngModelChange)="getReferenceTemplateContent()"\r\n            ><option *ngFor="let language of languages" [ngValue]="language.cultureName">{{\r\n              language.displayName\r\n            }}</option>\r\n          </select>\r\n        </div>\r\n        <div class="row">\r\n          <div class="col">\r\n            <div class="form-group">\r\n              <label for="reference-content">{{\r\n                \'TextTemplateManagement::BaseContent\' | abpLocalization\r\n              }}</label\r\n              ><textarea\r\n                id="reference-content"\r\n                name="reference-content"\r\n                rows="10"\r\n                class="form-control"\r\n                readonly\r\n                [value]="referenceTemplateContent.content"\r\n              >\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class="col-md-6">\r\n        <div class="form-group">\r\n          <label for="target-culture-name">{{\r\n            \'TextTemplateManagement::TargetCultureName\' | abpLocalization\r\n          }}</label>\r\n          <select\r\n            class="culture-selector custom-select form-control"\r\n            id="target-culture-name"\r\n            name="target-culture-name"\r\n            [(ngModel)]="selectedCultureName"\r\n            (ngModelChange)="onChangeSelectedCultureName()"\r\n            ><option *ngFor="let language of languages" [ngValue]="language.cultureName">{{\r\n              language.displayName\r\n            }}</option>\r\n          </select>\r\n        </div>\r\n        <form id="template-inline-content-form" [formGroup]="form">\r\n          <div class="row">\r\n            <div class="col">\r\n              <div class="form-group">\r\n                <label for="TemplateContent">{{\r\n                  \'TextTemplateManagement::TemplateContent\' | abpLocalization\r\n                }}</label\r\n                ><span> * </span\r\n                ><textarea\r\n                  id="TemplateContent"\r\n                  name="TemplateContent"\r\n                  rows="10"\r\n                  class="form-control"\r\n                  formControlName="content"\r\n                  [disabled]="busy"\r\n                >\r\n                </textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="row">\r\n      <div class="col col-md-4">\r\n        <a\r\n          routerLink="/text-template-management/text-templates"\r\n          role="button"\r\n          class="btn btn-primary"\r\n        >\r\n          <i class="fa fa-arrow-left mr-1"></i>\r\n          <span>{{ \'TextTemplateManagement::ReturnToTemplates\' | abpLocalization }}</span>\r\n        </a>\r\n      </div>\r\n      <div class="col col-md-8">\r\n        <div class="float-right">\r\n          <button\r\n            id="save-content"\r\n            class="btn btn-primary"\r\n            type="button"\r\n            [disabled]="busy"\r\n            (click)="save()"\r\n          >\r\n            <span>{{ \'TextTemplateManagement::SaveContent\' | abpLocalization }}</span>\r\n          </button>\r\n          <button\r\n            id="restore-to-default"\r\n            class="btn btn-danger ml-1"\r\n            type="button"\r\n            [disabled]="busy"\r\n            (click)="restoreToDefault()"\r\n          >\r\n            <span>{{ \'TextTemplateManagement::RestoreToDefault\' | abpLocalization }}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n'}]}],TemplateContentsComponent.ctorParameters=()=>[{type:Injector},{type:ConfigStateService}];