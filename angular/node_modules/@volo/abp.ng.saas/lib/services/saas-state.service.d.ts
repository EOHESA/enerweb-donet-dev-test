import { Store } from '@ngxs/store';
import { GetTenants, GetTenantById, CreateTenant, UpdateTenant, DeleteTenant, GetEditions, GetEditionById, CreateEdition, UpdateEdition, DeleteEdition } from '../actions/saas.actions';
export declare class SaasStateService {
    private store;
    constructor(store: Store);
    getTenants(): import("../proxy/host").SaasTenantDto[];
    getLatestTenants(): import("../proxy/host").SaasTenantDto[];
    getTenantsTotalCount(): number;
    getEditions(): import("../proxy/host").EditionDto[];
    getEditionsTotalCount(): number;
    getUsageStatistics(): import("@abp/ng.theme.shared").Statistics.Data;
    dispatchGetTenants(...args: ConstructorParameters<typeof GetTenants>): import("rxjs").Observable<any>;
    dispatchGetTenantById(...args: ConstructorParameters<typeof GetTenantById>): import("rxjs").Observable<any>;
    dispatchCreateTenant(...args: ConstructorParameters<typeof CreateTenant>): import("rxjs").Observable<any>;
    dispatchUpdateTenant(...args: ConstructorParameters<typeof UpdateTenant>): import("rxjs").Observable<any>;
    dispatchDeleteTenant(...args: ConstructorParameters<typeof DeleteTenant>): import("rxjs").Observable<any>;
    dispatchGetEditions(...args: ConstructorParameters<typeof GetEditions>): import("rxjs").Observable<any>;
    dispatchGetEditionById(...args: ConstructorParameters<typeof GetEditionById>): import("rxjs").Observable<any>;
    dispatchCreateEdition(...args: ConstructorParameters<typeof CreateEdition>): import("rxjs").Observable<any>;
    dispatchUpdateEdition(...args: ConstructorParameters<typeof UpdateEdition>): import("rxjs").Observable<any>;
    dispatchDeleteEdition(...args: ConstructorParameters<typeof DeleteEdition>): import("rxjs").Observable<any>;
    dispatchGetUsageStatistics(): import("rxjs").Observable<any>;
    dispatchGetLatestTenants(): import("rxjs").Observable<any>;
}
