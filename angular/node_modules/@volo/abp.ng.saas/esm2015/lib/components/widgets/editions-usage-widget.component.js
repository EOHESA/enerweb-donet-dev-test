import{__decorate}from"tslib";import{PermissionService,SubscriptionService}from"@abp/ng.core";import{getRandomBackgroundColor}from"@abp/ng.theme.shared";import{Component,Input,Output}from"@angular/core";import{Select,Store}from"@ngxs/store";import{BehaviorSubject}from"rxjs";import{GetUsageStatistics}from"../../actions";import{SaasState}from"../../states/saas.state";export class EditionsUsageWidgetComponent{constructor(t,i,e){this.store=t,this.subscription=i,this.permissionService=e,this.initialized=new BehaviorSubject(this),this.width=273,this.height=136,this.chartData={},this.draw=()=>{this.permissionService.getGrantedPolicy("Saas.Editions")&&this.store.dispatch(new GetUsageStatistics)},this.listenToData()}initialize(t){this.chart=t}listenToData(){this.subscription.addOne(this.data$,t=>{if(!t||"{}"===JSON.stringify(t))return void(this.chartData={});const i=Object.keys(t);setTimeout(()=>{this.chartData={labels:i,datasets:[{data:i.map(i=>t[i]),backgroundColor:getRandomBackgroundColor(Object.keys(t).length)}]},this.chart.refresh()},0)})}}EditionsUsageWidgetComponent.decorators=[{type:Component,args:[{selector:"abp-editions-usage-widget",template:'<div *abpPermission="\'Saas.Editions\'" class="abp-widget-wrapper">\r\n  <div class="card">\r\n    <div class="card-header">\r\n      <h5 class="card-title">{{ \'Saas::EditionUsageStatistics\' | abpLocalization }}</h5>\r\n    </div>\r\n    <div class="card-body">\r\n      <div class="row">\r\n        <abp-chart\r\n          #chart\r\n          (initialized)="initialize($event)"\r\n          class="w-100"\r\n          type="pie"\r\n          [data]="chartData"\r\n          [width]="width"\r\n          [height]="height"\r\n        ></abp-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n',providers:[SubscriptionService]}]}],EditionsUsageWidgetComponent.ctorParameters=()=>[{type:Store},{type:SubscriptionService},{type:PermissionService}],EditionsUsageWidgetComponent.propDecorators={initialized:[{type:Output}],width:[{type:Input}],height:[{type:Input}]},__decorate([Select(SaasState.getUsageStatistics)],EditionsUsageWidgetComponent.prototype,"data$",void 0);