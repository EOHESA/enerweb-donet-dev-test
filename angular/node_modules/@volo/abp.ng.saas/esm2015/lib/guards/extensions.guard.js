import{ConfigStateService}from"@abp/ng.core";import{ExtensionsService,getObjectExtensionEntitiesFromStore,mapEntitiesToContributors,mergeWithDefaultActions,mergeWithDefaultProps}from"@abp/ng.theme.shared/extensions";import{Injectable,Injector}from"@angular/core";import{map,mapTo,tap}from"rxjs/operators";import{DEFAULT_SAAS_CREATE_FORM_PROPS,DEFAULT_SAAS_EDIT_FORM_PROPS,DEFAULT_SAAS_ENTITY_ACTIONS,DEFAULT_SAAS_ENTITY_PROPS,DEFAULT_SAAS_TOOLBAR_ACTIONS,SAAS_CREATE_FORM_PROP_CONTRIBUTORS,SAAS_EDIT_FORM_PROP_CONTRIBUTORS,SAAS_ENTITY_ACTION_CONTRIBUTORS,SAAS_ENTITY_PROP_CONTRIBUTORS,SAAS_TOOLBAR_ACTION_CONTRIBUTORS}from"../tokens/extensions.token";export class SaasExtensionsGuard{constructor(t){this.injector=t}canActivate(){const t=this.injector.get(ExtensionsService),e=this.injector.get(SAAS_ENTITY_ACTION_CONTRIBUTORS,null)||{},o=this.injector.get(SAAS_TOOLBAR_ACTION_CONTRIBUTORS,null)||{},S=this.injector.get(SAAS_ENTITY_PROP_CONTRIBUTORS,null)||{},r=this.injector.get(SAAS_CREATE_FORM_PROP_CONTRIBUTORS,null)||{},A=this.injector.get(SAAS_EDIT_FORM_PROP_CONTRIBUTORS,null)||{},T=this.injector.get(ConfigStateService);return getObjectExtensionEntitiesFromStore(T,"Saas").pipe(map(t=>({"Saas.EditionsComponent":t.Edition,"Saas.TenantsComponent":t.Tenant})),mapEntitiesToContributors(T,"Saas"),tap(T=>{mergeWithDefaultActions(t.entityActions,DEFAULT_SAAS_ENTITY_ACTIONS,e),mergeWithDefaultActions(t.toolbarActions,DEFAULT_SAAS_TOOLBAR_ACTIONS,o),mergeWithDefaultProps(t.entityProps,DEFAULT_SAAS_ENTITY_PROPS,T.prop,S),mergeWithDefaultProps(t.createFormProps,DEFAULT_SAAS_CREATE_FORM_PROPS,T.createForm,r),mergeWithDefaultProps(t.editFormProps,DEFAULT_SAAS_EDIT_FORM_PROPS,T.editForm,A)}),mapTo(!0))}}SaasExtensionsGuard.decorators=[{type:Injectable}],SaasExtensionsGuard.ctorParameters=()=>[{type:Injector}];