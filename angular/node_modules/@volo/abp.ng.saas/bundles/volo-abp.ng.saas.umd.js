!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@abp/ng.theme.shared/extensions"),require("@angular/core"),require("@ngxs/store"),require("rxjs/operators"),require("@angular/forms"),require("rxjs"),require("@volo/abp.commercial.ng.ui"),require("@abp/ng.feature-management"),require("@ng-bootstrap/ng-bootstrap"),require("@ngx-validate/core"),require("@angular/router")):"function"==typeof define&&define.amd?define("@volo/abp.ng.saas",["exports","@abp/ng.core","@abp/ng.theme.shared","@abp/ng.theme.shared/extensions","@angular/core","@ngxs/store","rxjs/operators","@angular/forms","rxjs","@volo/abp.commercial.ng.ui","@abp/ng.feature-management","@ng-bootstrap/ng-bootstrap","@ngx-validate/core","@angular/router"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self).volo=t.volo||{},t.volo.abp=t.volo.abp||{},t.volo.abp.ng=t.volo.abp.ng||{},t.volo.abp.ng.saas={}),t.i1,t.ng_theme_shared,t.extensions,t.ng.core,t.i1$1,t.rxjs.operators,t.ng.forms,t.rxjs,t.abp_commercial_ng_ui,t.ng_featureManagement,t.ngBootstrap,t.core,t.ng.router)}(this,(function(t,e,n,a,i,r,o,s,c,d,p,l,u,m){"use strict";var h=function(t){this.payload=t};h.type="[Saas] Get Tenant";var g=function(t){this.payload=t};g.type="[Saas] Get Tenant By Id";var f=function(t){this.payload=t};f.type="[Saas] Create Tenant";var v=function(t){this.payload=t};v.type="[Saas] Update Tenant";var S=function(t){this.payload=t};S.type="[Saas] Delete Tenant";var b=function(t){this.payload=t};b.type="[Saas] Get Edition";var y=function(t){this.payload=t};y.type="[Saas] Get Edition By Id";var T=function(t){this.payload=t};T.type="[Saas] Create Edition";var C=function(t){this.payload=t};C.type="[Saas] Update Edition";var E=function(t){this.payload=t};E.type="[Saas] Delete Edition";var N=function(){};N.type="[Saas] Get Usage Statistics";var I=function(){};I.type="[Saas] Get Latest Tenatns";function F(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(a=Object.getOwnPropertySymbols(t);i<a.length;i++)e.indexOf(a[i])<0&&Object.prototype.propertyIsEnumerable.call(t,a[i])&&(n[a[i]]=t[a[i]])}return n}function O(t,e,n,a){var i,r=arguments.length,o=r<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(o=(r<3?i(o):r>3?i(e,n,o):i(e,n))||o);return r>3&&o&&Object.defineProperty(e,n,o),o}Object.create;function w(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var a,i,r=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(a=r.next()).done;)o.push(a.value)}catch(t){i={error:t}}finally{try{a&&!a.done&&(n=r.return)&&n.call(r)}finally{if(i)throw i.error}}return o}function A(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(w(arguments[e]));return t}Object.create;var M=function(t){var e=this;this.restService=t,this.apiName="SaasHost",this.create=function(t){return e.restService.request({method:"POST",url:"/api/saas/editions",body:t},{apiName:e.apiName})},this.delete=function(t){return e.restService.request({method:"DELETE",url:"/api/saas/editions/"+t},{apiName:e.apiName})},this.get=function(t){return e.restService.request({method:"GET",url:"/api/saas/editions/"+t},{apiName:e.apiName})},this.getList=function(t){return e.restService.request({method:"GET",url:"/api/saas/editions",params:{filter:t.filter,sorting:t.sorting,skipCount:t.skipCount,maxResultCount:t.maxResultCount}},{apiName:e.apiName})},this.getUsageStatistics=function(){return e.restService.request({method:"GET",url:"/api/saas/editions/statistics/usage-statistic"},{apiName:e.apiName})},this.update=function(t,n){return e.restService.request({method:"PUT",url:"/api/saas/editions/"+t,body:n},{apiName:e.apiName})}};M.ɵprov=i.ɵɵdefineInjectable({factory:function(){return new M(i.ɵɵinject(e.RestService))},token:M,providedIn:"root"}),M.decorators=[{type:i.Injectable,args:[{providedIn:"root"}]}],M.ctorParameters=function(){return[{type:e.RestService}]};var j=function(t){var e=this;this.restService=t,this.apiName="SaasHost",this.create=function(t){return e.restService.request({method:"POST",url:"/api/saas/tenants",body:t},{apiName:e.apiName})},this.delete=function(t){return e.restService.request({method:"DELETE",url:"/api/saas/tenants/"+t},{apiName:e.apiName})},this.deleteDefaultConnectionString=function(t){return e.restService.request({method:"DELETE",url:"/api/saas/tenants/"+t+"/default-connection-string"},{apiName:e.apiName})},this.get=function(t){return e.restService.request({method:"GET",url:"/api/saas/tenants/"+t},{apiName:e.apiName})},this.getDefaultConnectionString=function(t){return e.restService.request({method:"GET",url:"/api/saas/tenants/"+t+"/default-connection-string",responseType:"text"},{apiName:e.apiName})},this.getList=function(t){return e.restService.request({method:"GET",url:"/api/saas/tenants",params:{filter:t.filter,getEditionNames:t.getEditionNames,sorting:t.sorting,skipCount:t.skipCount,maxResultCount:t.maxResultCount}},{apiName:e.apiName})},this.update=function(t,n){return e.restService.request({method:"PUT",url:"/api/saas/tenants/"+t,body:n},{apiName:e.apiName})},this.updateDefaultConnectionString=function(t,n){return e.restService.request({method:"PUT",url:"/api/saas/tenants/"+t+"/default-connection-string",params:{defaultConnectionString:n}},{apiName:e.apiName})}};j.ɵprov=i.ɵɵdefineInjectable({factory:function(){return new j(i.ɵɵinject(e.RestService))},token:j,providedIn:"root"}),j.decorators=[{type:i.Injectable,args:[{providedIn:"root"}]}],j.ctorParameters=function(){return[{type:e.RestService}]},t.ɵc=function(){function t(t,e){this.tenantService=t,this.editionService=e}return t.getTenants=function(t){return t.tenants.items||[]},t.getLatestTenants=function(t){return t.latestTenants},t.getTenantsTotalCount=function(t){return t.tenants.totalCount||0},t.getEditions=function(t){return t.editions.items||[]},t.getEditionsTotalCount=function(t){return t.editions.totalCount||0},t.getUsageStatistics=function(t){return t.usageStatistics},t.prototype.getTenants=function(t,e){var n=t.patchState,a=e.payload;return this.tenantService.getList(a).pipe(o.tap((function(t){return n({tenants:t})})))},t.prototype.deleteTenant=function(t,e){var n=e.payload;return this.tenantService.delete(n)},t.prototype.createTenant=function(t,e){var n=e.payload;return this.tenantService.create(n)},t.prototype.updateTenant=function(t,e){var n=e.payload,a=n.id,i=F(n,["id"]);return this.tenantService.update(a,i)},t.prototype.getEditions=function(t,e){var n=t.patchState,a=e.payload;return this.editionService.getList(a).pipe(o.tap((function(t){return n({editions:t})})))},t.prototype.deleteEdition=function(t,e){var n=e.payload;return this.editionService.delete(n)},t.prototype.createEdition=function(t,e){var n=e.payload;return this.editionService.create(n)},t.prototype.updateEdition=function(t,e){var n=e.payload,a=n.id,i=F(n,["id"]);return this.editionService.update(a,i)},t.prototype.getUsage=function(t){var e=t.patchState;return this.editionService.getUsageStatistics().pipe(o.tap((function(t){e({usageStatistics:t.data})})))},t.prototype.getLatestTenants=function(t){var e=t.patchState;return this.tenantService.getList({getEditionNames:!0,maxResultCount:6,skipCount:0,sorting:"CreationTime desc"}).pipe(o.tap((function(t){e({latestTenants:t.items})})))},t}(),t.ɵc.decorators=[{type:i.Injectable}],t.ɵc.ctorParameters=function(){return[{type:j},{type:M}]},O([r.Action(h)],t.ɵc.prototype,"getTenants",null),O([r.Action(S)],t.ɵc.prototype,"deleteTenant",null),O([r.Action(f)],t.ɵc.prototype,"createTenant",null),O([r.Action(v)],t.ɵc.prototype,"updateTenant",null),O([r.Action(b)],t.ɵc.prototype,"getEditions",null),O([r.Action(E)],t.ɵc.prototype,"deleteEdition",null),O([r.Action(T)],t.ɵc.prototype,"createEdition",null),O([r.Action(C)],t.ɵc.prototype,"updateEdition",null),O([r.Action(N)],t.ɵc.prototype,"getUsage",null),O([r.Action(I)],t.ɵc.prototype,"getLatestTenants",null),O([r.Selector()],t.ɵc,"getTenants",null),O([r.Selector()],t.ɵc,"getLatestTenants",null),O([r.Selector()],t.ɵc,"getTenantsTotalCount",null),O([r.Selector()],t.ɵc,"getEditions",null),O([r.Selector()],t.ɵc,"getEditionsTotalCount",null),O([r.Selector()],t.ɵc,"getUsageStatistics",null),t.ɵc=O([r.State({name:"SaasState",defaults:{tenants:{},editions:{},latestTenants:[],usageStatistics:{}}})],t.ɵc);var P="Saas.EditionsComponent",D=function(){function t(t,e,n,a,i){var r=this;this.list=t,this.confirmationService=e,this.editionService=n,this.store=a,this.injector=i,this.visibleFeatures=!1,this.modalBusy=!1,this.onVisibleFeaturesChange=function(t){r.visibleFeatures=t}}return t.prototype.ngOnInit=function(){this.hookToQuery()},t.prototype.hookToQuery=function(){var t=this;this.list.hookToQuery((function(e){return t.store.dispatch(new b(e))})).subscribe()},t.prototype.createEditionForm=function(){var t=new a.FormPropData(this.injector,this.selected);this.editionForm=a.generateFormFromProps(t)},t.prototype.onAddEdition=function(){this.selected={},this.createEditionForm(),this.isModalVisible=!0},t.prototype.onEditEdition=function(t){var e=this;this.editionService.get(t).subscribe((function(t){e.selected=t,e.createEditionForm(),e.isModalVisible=!0}))},t.prototype.save=function(){var t=this;this.editionForm.valid&&(this.modalBusy=!0,this.store.dispatch(this.selected.id?new C(Object.assign(Object.assign(Object.assign({},this.selected),this.editionForm.value),{id:this.selected.id})):new T(this.editionForm.value)).pipe(o.finalize((function(){return t.modalBusy=!1}))).subscribe((function(){t.list.get(),t.isModalVisible=!1})))},t.prototype.delete=function(t){var e=this,a=t.id,i=t.displayName;this.confirmationService.warn("Saas::EditionDeletionConfirmationMessage","Saas::AreYouSure",{messageLocalizationParams:[i]}).subscribe((function(t){t===n.Confirmation.Status.confirm&&e.store.dispatch(new E(a)).subscribe((function(){return e.list.get()}))}))},t.prototype.openFeaturesModal=function(t){var e=this;this.providerKey=t,setTimeout((function(){e.visibleFeatures=!0}),0)},t}();D.decorators=[{type:i.Component,args:[{selector:"abp-editions",template:'<ng-container *ngIf="data$ | async as data">\r\n  <div class="row entry-row">\r\n    <div class="col-auto">\r\n      <h1 class="content-header-title">{{ \'Saas::Editions\' | abpLocalization }}</h1>\r\n    </div>\r\n    <div class="col-lg-auto pl-lg-0">\r\n      <abp-breadcrumb></abp-breadcrumb>\r\n    </div>\r\n    <div class="col">\r\n      <abp-page-toolbar [record]="data"></abp-page-toolbar>\r\n    </div>\r\n  </div>\r\n\r\n  <div id="wrapper">\r\n    <div class="card">\r\n      <div class="card-body">\r\n        <div class="row">\r\n          <div class="col">\r\n            <div class="input-group">\r\n              <input\r\n                type="search"\r\n                class="form-control"\r\n                [placeholder]="\'AbpUi::PagerSearch\' | abpLocalization"\r\n                [(ngModel)]="list.filter"\r\n              />\r\n              <div class="input-group-append">\r\n                <button class="btn btn-primary" (click)="list.get()">\r\n                  <i class="fas fa-search"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="card">\r\n      <abp-extensible-table\r\n        [data]="data"\r\n        [recordsTotal]="totalCount$ | async"\r\n        [list]="list"\r\n      ></abp-extensible-table>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<abp-modal [(visible)]="isModalVisible" [busy]="modalBusy" (disappear)="editionForm = null">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ (selected?.id ? \'Saas::Edit\' : \'Saas::NewEdition\') | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <form [formGroup]="editionForm" (ngSubmit)="save()" validateOnSubmit>\r\n      <div class="mt-2">\r\n        <abp-extensible-form [selectedRecord]="selected"></abp-extensible-form>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button #abpClose type="button" class="btn btn-secondary">\r\n      {{ \'Saas::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass="fa fa-check" (click)="save()" [disabled]="editionForm?.invalid">{{\r\n      \'AbpIdentity::Save\' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n\r\n<abp-feature-management\r\n  *abpReplaceableTemplate="{\r\n    inputs: {\r\n      providerName: { value: \'E\' },\r\n      providerKey: { value: providerKey },\r\n      visible: { value: visibleFeatures, twoWay: true }\r\n    },\r\n    outputs: { visibleChange: onVisibleFeaturesChange },\r\n    componentKey: \'FeatureManagement.FeatureManagementComponent\'\r\n  }"\r\n  [(visible)]="visibleFeatures"\r\n  providerName="E"\r\n  [providerKey]="providerKey"\r\n>\r\n</abp-feature-management>\r\n',providers:[e.ListService,{provide:a.EXTENSIONS_IDENTIFIER,useValue:P}]}]}],D.ctorParameters=function(){return[{type:e.ListService},{type:n.ConfirmationService},{type:M},{type:r.Store},{type:i.Injector}]},O([r.Select(t.ɵc.getEditions)],D.prototype,"data$",void 0),O([r.Select(t.ɵc.getEditionsTotalCount)],D.prototype,"totalCount$",void 0);var R=function(){function e(t,e,n,a,i,r){var o=this;this.list=t,this.confirmationService=e,this.tenantService=n,this.fb=a,this.store=i,this.injector=r,this.selectedModalContent={},this.visibleFeatures=!1,this.modalBusy=!1,this.onVisibleFeaturesChange=function(t){o.visibleFeatures=t}}return Object.defineProperty(e.prototype,"useSharedDatabase",{get:function(){return this.defaultConnectionStringForm.get("useSharedDatabase").value},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"connectionString",{get:function(){return this.defaultConnectionStringForm.get("defaultConnectionString").value},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"hasSelectedTenant",{get:function(){return Boolean(this.selected.id)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isDisabledSaveButton",{get:function(){return!!this.selectedModalContent&&(!("saveConnStr"!==this.selectedModalContent.type||!this.defaultConnectionStringForm||!this.defaultConnectionStringForm.invalid)||!("saveTenant"!==this.selectedModalContent.type||!this.tenantForm||!this.tenantForm.invalid))},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){this.hookToQuery()},e.prototype.hookToQuery=function(){var t=this;this.list.hookToQuery((function(e){return t.store.dispatch(new h(e))})).subscribe()},e.prototype.createTenantForm=function(){var e=this;this.store.select(t.ɵc.getEditions).pipe(o.switchMap((function(t){return t.length?c.of(t):e.store.dispatch(new b({maxResultCount:1e3}))}))).subscribe((function(){var t=new a.FormPropData(e.injector,e.selected);e.tenantForm=a.generateFormFromProps(t)}))},e.prototype.createDefaultConnectionStringForm=function(){this.defaultConnectionStringForm=this.fb.group({useSharedDatabase:this._useSharedDatabase,defaultConnectionString:this.defaultConnectionString||""})},e.prototype.openModal=function(t,e,n){this.selectedModalContent={title:t,template:e,type:n},this.isModalVisible=!0},e.prototype.onEditConnectionString=function(t){var e=this;this.tenantService.get(t).pipe(o.tap((function(t){return e.selected=t})),o.switchMap((function(){return e.tenantService.getDefaultConnectionString(t)}))).subscribe((function(t){e._useSharedDatabase=!t,e.defaultConnectionString=t||"",e.createDefaultConnectionStringForm(),e.openModal("Saas::ConnectionStrings",e.connectionStringModalTemplate,"saveConnStr")}))},e.prototype.onAddTenant=function(){this.selected={},this.createTenantForm(),this.openModal("Saas::NewTenant",this.tenantModalTemplate,"saveTenant")},e.prototype.onEditTenant=function(t){var e=this;this.tenantService.get(t).subscribe((function(t){e.selected=t,e.createTenantForm(),e.openModal("Saas::Edit",e.tenantModalTemplate,"saveTenant")}))},e.prototype.save=function(){var t=this.selectedModalContent.type;t&&("saveTenant"===t?this.saveTenant():"saveConnStr"===t&&this.saveConnectionString())},e.prototype.saveConnectionString=function(){var t=this;this.modalBusy||(this.modalBusy=!0,this.useSharedDatabase||!this.useSharedDatabase&&!this.connectionString?this.tenantService.deleteDefaultConnectionString(this.selected.id).pipe(o.take(1),o.finalize((function(){return t.modalBusy=!1}))).subscribe((function(){t.isModalVisible=!1})):this.tenantService.updateDefaultConnectionString(this.selected.id,this.connectionString).pipe(o.take(1),o.finalize((function(){return t.modalBusy=!1}))).subscribe((function(){t.isModalVisible=!1})))},e.prototype.saveTenant=function(){var t=this;this.tenantForm.valid&&!this.modalBusy&&(this.modalBusy=!0,this.store.dispatch(this.selected.id?new v(Object.assign(Object.assign(Object.assign({},this.selected),this.tenantForm.value),{id:this.selected.id})):new f(this.tenantForm.value)).pipe(o.finalize((function(){return t.modalBusy=!1}))).subscribe((function(){t.list.get(),t.isModalVisible=!1})))},e.prototype.delete=function(t,e){var a=this;this.confirmationService.warn("Saas::TenantDeletionConfirmationMessage","Saas::AreYouSure",{messageLocalizationParams:[e]}).subscribe((function(e){e===n.Confirmation.Status.confirm&&a.store.dispatch(new S(t)).subscribe((function(){return a.list.get()}))}))},e.prototype.onSharedDatabaseChange=function(t){t||setTimeout((function(){var t=document.getElementById("defaultConnectionString");t&&t.focus()}),0)},e.prototype.openFeaturesModal=function(t){var e=this;this.providerKey=t,setTimeout((function(){e.visibleFeatures=!0}),0)},e}();R.decorators=[{type:i.Component,args:[{selector:"abp-tenants",template:'<ng-container *ngIf="tenants$ | async as data">\r\n  <div class="row entry-row">\r\n    <div class="col-auto">\r\n      <h1 class="content-header-title">{{ \'Saas::Tenants\' | abpLocalization }}</h1>\r\n    </div>\r\n    <div class="col-lg-auto pl-lg-0">\r\n      <abp-breadcrumb></abp-breadcrumb>\r\n    </div>\r\n    <div class="col">\r\n      <abp-page-toolbar [record]="data"></abp-page-toolbar>\r\n    </div>\r\n  </div>\r\n\r\n  <div id="wrapper">\r\n    <div class="card">\r\n      <div class="card-body">\r\n        <div class="row">\r\n          <div class="col">\r\n            <div class="input-group">\r\n              <input\r\n                type="search"\r\n                class="form-control"\r\n                [placeholder]="\'AbpUi::PagerSearch\' | abpLocalization"\r\n                [(ngModel)]="list.filter"\r\n              />\r\n              <div class="input-group-append">\r\n                <button class="btn btn-primary" (click)="list.get()">\r\n                  <i class="fas fa-search"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="card">\r\n      <abp-extensible-table\r\n        [data]="data"\r\n        [recordsTotal]="totalCount$ | async"\r\n        [list]="list"\r\n      ></abp-extensible-table>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<abp-modal\r\n  [(visible)]="isModalVisible"\r\n  [busy]="modalBusy"\r\n  (disappear)="tenantForm = null; defaultConnectionStringForm = null"\r\n>\r\n  <ng-template #abpHeader>\r\n    <h3>{{ selectedModalContent.title | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <ng-container *ngTemplateOutlet="selectedModalContent?.template"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button #abpClose type="button" class="btn btn-secondary">\r\n      {{ \'Saas::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass="fa fa-check" [disabled]="isDisabledSaveButton" (click)="save()">{{\r\n      \'AbpIdentity::Save\' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n\r\n<ng-template #tenantModalTemplate>\r\n  <form *ngIf="tenantForm" [formGroup]="tenantForm" (ngSubmit)="save()" validateOnSubmit>\r\n    <div class="mt-2">\r\n      <abp-extensible-form [selectedRecord]="selected"></abp-extensible-form>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #connectionStringModalTemplate>\r\n  <form [formGroup]="defaultConnectionStringForm" (ngSubmit)="save()">\r\n    <div class="mt-2">\r\n      <div class="form-group">\r\n        <div class="custom-checkbox custom-control mb-2">\r\n          <input\r\n            id="useSharedDatabase"\r\n            type="checkbox"\r\n            class="custom-control-input"\r\n            formControlName="useSharedDatabase"\r\n            autofocus\r\n            (ngModelChange)="onSharedDatabaseChange($event)"\r\n          />\r\n          <label for="useSharedDatabase" class="custom-control-label">{{\r\n            \'Saas::DisplayName:UseSharedDatabase\' | abpLocalization\r\n          }}</label>\r\n        </div>\r\n      </div>\r\n      <div class="form-group" *ngIf="!useSharedDatabase">\r\n        <label for="defaultConnectionString">{{\r\n          \'Saas::DisplayName:DefaultConnectionString\' | abpLocalization\r\n        }}</label>\r\n        <input\r\n          type="text"\r\n          id="defaultConnectionString"\r\n          class="form-control"\r\n          formControlName="defaultConnectionString"\r\n        />\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<abp-feature-management\r\n  *abpReplaceableTemplate="{\r\n    inputs: {\r\n      providerName: { value: \'T\' },\r\n      providerKey: { value: providerKey },\r\n      visible: { value: visibleFeatures, twoWay: true }\r\n    },\r\n    outputs: { visibleChange: onVisibleFeaturesChange },\r\n    componentKey: \'FeatureManagement.FeatureManagementComponent\'\r\n  }"\r\n  [(visible)]="visibleFeatures"\r\n  providerName="T"\r\n  [providerKey]="providerKey"\r\n>\r\n</abp-feature-management>\r\n',providers:[e.ListService,{provide:a.EXTENSIONS_IDENTIFIER,useValue:"Saas.TenantsComponent"}]}]}],R.ctorParameters=function(){return[{type:e.ListService},{type:n.ConfirmationService},{type:j},{type:s.FormBuilder},{type:r.Store},{type:i.Injector}]},R.propDecorators={tenantModalTemplate:[{type:i.ViewChild,args:["tenantModalTemplate"]}],connectionStringModalTemplate:[{type:i.ViewChild,args:["connectionStringModalTemplate"]}]},O([r.Select(t.ɵc.getTenants)],R.prototype,"tenants$",void 0),O([r.Select(t.ɵc.getTenantsTotalCount)],R.prototype,"totalCount$",void 0),O([r.Select(t.ɵc.getEditions)],R.prototype,"editions$",void 0);var _=function(){function t(t,e,n){var a=this;this.store=t,this.subscription=e,this.permissionService=n,this.initialized=new c.BehaviorSubject(this),this.width=273,this.height=136,this.chartData={},this.draw=function(){a.permissionService.getGrantedPolicy("Saas.Editions")&&a.store.dispatch(new N)},this.listenToData()}return t.prototype.initialize=function(t){this.chart=t},t.prototype.listenToData=function(){var t=this;this.subscription.addOne(this.data$,(function(e){if(e&&"{}"!==JSON.stringify(e)){var a=Object.keys(e);setTimeout((function(){t.chartData={labels:a,datasets:[{data:a.map((function(t){return e[t]})),backgroundColor:n.getRandomBackgroundColor(Object.keys(e).length)}]},t.chart.refresh()}),0)}else t.chartData={}}))},t}();_.decorators=[{type:i.Component,args:[{selector:"abp-editions-usage-widget",template:'<div *abpPermission="\'Saas.Editions\'" class="abp-widget-wrapper">\r\n  <div class="card">\r\n    <div class="card-header">\r\n      <h5 class="card-title">{{ \'Saas::EditionUsageStatistics\' | abpLocalization }}</h5>\r\n    </div>\r\n    <div class="card-body">\r\n      <div class="row">\r\n        <abp-chart\r\n          #chart\r\n          (initialized)="initialize($event)"\r\n          class="w-100"\r\n          type="pie"\r\n          [data]="chartData"\r\n          [width]="width"\r\n          [height]="height"\r\n        ></abp-chart>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n',providers:[e.SubscriptionService]}]}],_.ctorParameters=function(){return[{type:r.Store},{type:e.SubscriptionService},{type:e.PermissionService}]},_.propDecorators={initialized:[{type:i.Output}],width:[{type:i.Input}],height:[{type:i.Input}]},O([r.Select(t.ɵc.getUsageStatistics)],_.prototype,"data$",void 0);var x=function(t,e){var n=this;this.store=t,this.permissionService=e,this.minHeight=136,this.trackByFn=function(t,e){return e.id},this.draw=function(){n.permissionService.getGrantedPolicy("Saas.Tenants")&&n.store.dispatch(new I)}};x.decorators=[{type:i.Component,args:[{selector:"abp-latest-tenants-widget",template:'<div\r\n  *abpPermission="\'Saas.Tenants\'"\r\n  class="abp-widget-wrapper"\r\n  data-widget-name="SaasLatestTenantsWidget"\r\n  data-refresh-url="SaasWidgets/LatestTenants"\r\n>\r\n  <div class="card">\r\n    <div class="card-header">\r\n      <h5 class="card-title">Latest tenants</h5>\r\n    </div>\r\n    <div class="card-body">\r\n      <div [style.min-height.px]="minHeight">\r\n        <table class="table table-hover table-sm">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>{{ \'Saas::Name\' | abpLocalization }}</th>\r\n              <th>{{ \'Saas::EditionName\' | abpLocalization }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor="let data of datas$ | async; trackBy: trackByFn; let i = index">\r\n              <th>{{ i + 1 }}</th>\r\n              <td>{{ data.name }}</td>\r\n              <td>{{ data.editionName }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n'}]}],x.ctorParameters=function(){return[{type:r.Store},{type:e.PermissionService}]},x.propDecorators={minHeight:[{type:i.Input}]},O([r.Select(t.ɵc.getLatestTenants)],x.prototype,"datas$",void 0);var L,B,U,k,V,q=a.EntityAction.createMany([{text:"Saas::Edit",action:function(t){t.getInjected(D).onEditEdition(t.record.id)},permission:"Saas.Editions.Update"},{text:"Saas::Features",action:function(t){t.getInjected(D).openFeaturesModal(t.record.id)},permission:"Saas.Editions.ManageFeatures"},{text:"Saas::ChangeHistory",action:function(t){t.getInjected(d.SHOW_ENTITY_HISTORY)(t.record.id,"Volo.Saas.Edition")},permission:"Saas.Editions.ViewChangeHistory",visible:function(t){return Boolean(t.getInjected(d.SHOW_ENTITY_HISTORY,null))}},{text:"Saas::Delete",action:function(t){t.getInjected(D).delete(t.record)},permission:"Saas.Editions.Delete"}]),G=a.EntityProp.createMany([{type:"string",name:"displayName",displayName:"Saas::EditionName",sortable:!0}]),z=a.FormProp.createMany([{type:"string",name:"displayName",displayName:"Saas::EditionName",validators:function(){return[s.Validators.required,s.Validators.maxLength(256)]}}]),H=z,W=a.ToolbarAction.createMany([{text:"Saas::NewEdition",action:function(t){t.getInjected(D).onAddEdition()},permission:"Saas.Editions.Create",icon:"fa fa-plus"}]),$=a.EntityAction.createMany([{text:"Saas::Edit",action:function(t){t.getInjected(R).onEditTenant(t.record.id)},permission:"Saas.Tenants.Update"},{text:"Saas::ConnectionStrings",action:function(t){t.getInjected(R).onEditConnectionString(t.record.id)},permission:"Saas.Tenants.ManageConnectionStrings"},{text:"Saas::Features",action:function(t){t.getInjected(R).openFeaturesModal(t.record.id)},permission:"Saas.Tenants.ManageFeatures"},{text:"Saas::ChangeHistory",action:function(t){t.getInjected(d.SHOW_ENTITY_HISTORY)(t.record.id,"Volo.Saas.Tenant")},permission:"Saas.Tenants.ViewChangeHistory",visible:function(t){return Boolean(t.getInjected(d.SHOW_ENTITY_HISTORY,null))}},{text:"Saas::Delete",action:function(t){t.getInjected(R).delete(t.record.id,t.record.name)},permission:"Saas.Tenants.Delete"}]),Y=a.EntityProp.createMany([{type:"string",name:"name",displayName:"Saas::TenantName",sortable:!0,columnWidth:370},{type:"string",name:"editionName",displayName:"Saas::EditionName",columnWidth:370}]),K=a.FormProp.createMany([{type:"string",name:"name",id:"name",displayName:"Saas::TenantName",validators:function(){return[s.Validators.required,s.Validators.maxLength(256)]}},{type:"string",name:"editionId",displayName:"Saas::Edition",id:"edition",options:function(t){return t.getInjected(R).editions$.pipe(o.map((function(t){return A([{key:"",value:""}],t.map((function(t){return{key:t.displayName,value:t.id}})))})))}},{type:"email",name:"adminEmailAddress",displayName:"Saas::DisplayName:AdminEmailAddress",id:"admin-email-address",validators:function(){return[s.Validators.required,s.Validators.maxLength(256),s.Validators.email]}},{type:"password",name:"adminPassword",displayName:"Saas::DisplayName:AdminPassword",id:"admin-password",autocomplete:"new-password",validators:function(t){return A([s.Validators.required],n.getPasswordValidators({get:t.getInjected}))}}]),Q=K.slice(0,2),X=a.ToolbarAction.createMany([{text:"Saas::ManageHostFeatures",action:function(t){t.getInjected(R).openFeaturesModal(null)},permission:"Saas.Tenants.ManageFeatures",icon:"fa fa-cog"},{text:"Saas::NewTenant",action:function(t){t.getInjected(R).onAddTenant()},permission:"Saas.Tenants.Create",icon:"fa fa-plus"}]),J=((L={})["Saas.EditionsComponent"]=q,L["Saas.TenantsComponent"]=$,L),Z=((B={})["Saas.EditionsComponent"]=W,B["Saas.TenantsComponent"]=X,B),tt=((U={})["Saas.EditionsComponent"]=G,U["Saas.TenantsComponent"]=Y,U),et=((k={})["Saas.EditionsComponent"]=z,k["Saas.TenantsComponent"]=K,k),nt=((V={})["Saas.EditionsComponent"]=H,V["Saas.TenantsComponent"]=Q,V),at=new i.InjectionToken("SAAS_ENTITY_ACTION_CONTRIBUTORS"),it=new i.InjectionToken("SAAS_TOOLBAR_ACTION_CONTRIBUTORS"),rt=new i.InjectionToken("SAAS_ENTITY_PROP_CONTRIBUTORS"),ot=new i.InjectionToken("SAAS_CREATE_FORM_PROP_CONTRIBUTORS"),st=new i.InjectionToken("SAAS_EDIT_FORM_PROP_CONTRIBUTORS"),ct=function(){function t(t){this.injector=t}return t.prototype.canActivate=function(){var t=this.injector.get(a.ExtensionsService),n=this.injector.get(at,null)||{},i=this.injector.get(it,null)||{},r=this.injector.get(rt,null)||{},s=this.injector.get(ot,null)||{},c=this.injector.get(st,null)||{},d=this.injector.get(e.ConfigStateService);return a.getObjectExtensionEntitiesFromStore(d,"Saas").pipe(o.map((function(t){var e;return(e={})["Saas.EditionsComponent"]=t.Edition,e["Saas.TenantsComponent"]=t.Tenant,e})),a.mapEntitiesToContributors(d,"Saas"),o.tap((function(e){a.mergeWithDefaultActions(t.entityActions,J,n),a.mergeWithDefaultActions(t.toolbarActions,Z,i),a.mergeWithDefaultProps(t.entityProps,tt,e.prop,r),a.mergeWithDefaultProps(t.createFormProps,et,e.createForm,s),a.mergeWithDefaultProps(t.editFormProps,nt,e.editForm,c)})),o.mapTo(!0))},t}();ct.decorators=[{type:i.Injectable}],ct.ctorParameters=function(){return[{type:i.Injector}]};var dt={requiredPolicy:"Saas.Tenants",replaceableComponent:{key:"Saas.TenantsComponent",defaultComponent:R}},pt={requiredPolicy:"Saas.Editions",replaceableComponent:{key:"Saas.EditionsComponent",defaultComponent:D}},lt=[{path:"",redirectTo:"tenants",pathMatch:"full"},{path:"",component:e.DynamicLayoutComponent,canActivate:[e.AuthGuard,e.PermissionGuard,ct],children:[{path:"tenants",component:e.ReplaceableRouteContainerComponent,data:dt},{path:"editions",component:e.ReplaceableRouteContainerComponent,data:pt}]}],ut=function(){};ut.decorators=[{type:i.NgModule,args:[{imports:[m.RouterModule.forChild(lt)],exports:[m.RouterModule]}]}];var mt=function(){function t(){}return t.forChild=function(e){return void 0===e&&(e={}),{ngModule:t,providers:[{provide:at,useValue:e.entityActionContributors},{provide:it,useValue:e.toolbarActionContributors},{provide:rt,useValue:e.entityPropContributors},{provide:ot,useValue:e.createFormPropContributors},{provide:st,useValue:e.editFormPropContributors},ct]}},t.forLazy=function(n){return void 0===n&&(n={}),new e.LazyModuleFactory(t.forChild(n))},t}();mt.decorators=[{type:i.NgModule,args:[{declarations:[R,D,_,x],exports:[R,D,_,x],imports:[ut,r.NgxsModule.forFeature([t.ɵc]),u.NgxValidateCoreModule,e.CoreModule,d.CommercialUiModule,n.ThemeSharedModule,l.NgbDropdownModule,p.FeatureManagementModule]}]}];var ht=function(){function e(t){this.store=t}return e.prototype.getTenants=function(){return this.store.selectSnapshot(t.ɵc.getTenants)},e.prototype.getLatestTenants=function(){return this.store.selectSnapshot(t.ɵc.getLatestTenants)},e.prototype.getTenantsTotalCount=function(){return this.store.selectSnapshot(t.ɵc.getTenantsTotalCount)},e.prototype.getEditions=function(){return this.store.selectSnapshot(t.ɵc.getEditions)},e.prototype.getEditionsTotalCount=function(){return this.store.selectSnapshot(t.ɵc.getEditionsTotalCount)},e.prototype.getUsageStatistics=function(){return this.store.selectSnapshot(t.ɵc.getUsageStatistics)},e.prototype.dispatchGetTenants=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(h.bind.apply(h,A([void 0],t))))},e.prototype.dispatchGetTenantById=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(g.bind.apply(g,A([void 0],t))))},e.prototype.dispatchCreateTenant=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(f.bind.apply(f,A([void 0],t))))},e.prototype.dispatchUpdateTenant=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(v.bind.apply(v,A([void 0],t))))},e.prototype.dispatchDeleteTenant=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(S.bind.apply(S,A([void 0],t))))},e.prototype.dispatchGetEditions=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(b.bind.apply(b,A([void 0],t))))},e.prototype.dispatchGetEditionById=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(y.bind.apply(y,A([void 0],t))))},e.prototype.dispatchCreateEdition=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(T.bind.apply(T,A([void 0],t))))},e.prototype.dispatchUpdateEdition=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(C.bind.apply(C,A([void 0],t))))},e.prototype.dispatchDeleteEdition=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.store.dispatch(new(E.bind.apply(E,A([void 0],t))))},e.prototype.dispatchGetUsageStatistics=function(){return this.store.dispatch(new N)},e.prototype.dispatchGetLatestTenants=function(){return this.store.dispatch(new I)},e}();ht.ɵprov=i.ɵɵdefineInjectable({factory:function(){return new ht(i.ɵɵinject(r.Store))},token:ht,providedIn:"root"}),ht.decorators=[{type:i.Injectable,args:[{providedIn:"root"}]}],ht.ctorParameters=function(){return[{type:r.Store}]},t.CreateEdition=T,t.CreateTenant=f,t.DEFAULT_SAAS_CREATE_FORM_PROPS=et,t.DEFAULT_SAAS_EDIT_FORM_PROPS=nt,t.DEFAULT_SAAS_ENTITY_ACTIONS=J,t.DEFAULT_SAAS_ENTITY_PROPS=tt,t.DEFAULT_SAAS_TOOLBAR_ACTIONS=Z,t.DeleteEdition=E,t.DeleteTenant=S,t.EditionService=M,t.EditionsComponent=D,t.EditionsUsageWidgetComponent=_,t.GetEditionById=y,t.GetEditions=b,t.GetLatestTenants=I,t.GetTenantById=g,t.GetTenants=h,t.GetUsageStatistics=N,t.LatestTenantsWidgetComponent=x,t.SAAS_CREATE_FORM_PROP_CONTRIBUTORS=ot,t.SAAS_EDIT_FORM_PROP_CONTRIBUTORS=st,t.SAAS_ENTITY_ACTION_CONTRIBUTORS=at,t.SAAS_ENTITY_PROP_CONTRIBUTORS=rt,t.SAAS_TOOLBAR_ACTION_CONTRIBUTORS=it,t.SaasExtensionsGuard=ct,t.SaasModule=mt,t.SaasState=t.ɵc,t.SaasStateService=ht,t.TenantService=j,t.TenantsComponent=R,t.UpdateEdition=C,t.UpdateTenant=v,t.ɵ0=P,t.ɵa=R,t.ɵba=rt,t.ɵbb=ot,t.ɵbc=st,t.ɵd=j,t.ɵe=M,t.ɵf=h,t.ɵg=f,t.ɵh=v,t.ɵi=S,t.ɵj=b,t.ɵk=T,t.ɵl=C,t.ɵm=E,t.ɵn=N,t.ɵo=I,t.ɵt=D,t.ɵu=_,t.ɵv=x,t.ɵw=ut,t.ɵx=ct,t.ɵy=at,t.ɵz=it,Object.defineProperty(t,"__esModule",{value:!0})}));