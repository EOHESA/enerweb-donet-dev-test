{"__symbolic":"module","version":4,"exports":[{"from":"./lib/proxy/models"},{"from":"./lib/proxy/identity-claim-value-type.enum"},{"from":"./lib/proxy/identity-role.service"},{"from":"./lib/proxy/identity-security-log.service"},{"from":"./lib/proxy/identity-settings.service"},{"from":"./lib/proxy/identity-user-lookup.service"},{"from":"./lib/proxy/identity-user.service"},{"from":"./lib/proxy/organization-unit.service"},{"from":"./lib/proxy/profile.service"}],"metadata":{"IdentityModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":33,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵbd"},{"__symbolic":"reference","name":"ɵbe"},{"__symbolic":"reference","name":"ɵbf"},{"__symbolic":"reference","name":"ɵbg"},{"__symbolic":"reference","name":"ɵbh"},{"__symbolic":"reference","name":"ɵbk"},{"__symbolic":"reference","name":"ɵbl"},{"__symbolic":"reference","name":"ɵbm"},{"__symbolic":"reference","name":"ɵbj"},{"__symbolic":"reference","name":"ɵbn"}],"exports":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵbd"},{"__symbolic":"reference","name":"ɵbe"},{"__symbolic":"reference","name":"ɵbf"},{"__symbolic":"reference","name":"ɵbg"},{"__symbolic":"reference","name":"ɵbh"},{"__symbolic":"reference","name":"ɵbk"},{"__symbolic":"reference","name":"ɵbl"},{"__symbolic":"reference","name":"ɵbm"},{"__symbolic":"reference","name":"ɵbj"},{"__symbolic":"reference","name":"ɵbn"}],"imports":[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"NgxsModule","line":61,"character":4},"member":"forFeature"},"arguments":[[{"__symbolic":"reference","name":"ɵc"}]]},{"__symbolic":"reference","module":"@abp/ng.core","name":"CoreModule","line":62,"character":4},{"__symbolic":"reference","module":"@volo/abp.commercial.ng.ui","name":"CommercialUiModule","line":63,"character":4},{"__symbolic":"reference","name":"ɵbp"},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbNavModule","line":65,"character":4},{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"ThemeSharedModule","line":66,"character":4},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbDropdownModule","line":67,"character":4},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbDatepickerModule","line":68,"character":4},{"__symbolic":"reference","module":"@abp/ng.permission-management","name":"PermissionManagementModule","line":69,"character":4},{"__symbolic":"reference","module":"@ngx-validate/core","name":"NgxValidateCoreModule","line":70,"character":4},{"__symbolic":"reference","module":"@abp/ng.components/tree","name":"TreeModule","line":71,"character":4}],"entryComponents":[]}]}],"members":{},"statics":{"forChild":{"__symbolic":"function","parameters":["options"],"defaults":[{}],"value":{"ngModule":{"__symbolic":"reference","name":"IdentityModule"},"providers":[{"provide":{"__symbolic":"reference","name":"ɵbr"},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"options"},"member":"entityActionContributors"}},{"provide":{"__symbolic":"reference","name":"ɵbs"},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"options"},"member":"toolbarActionContributors"}},{"provide":{"__symbolic":"reference","name":"ɵbt"},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"options"},"member":"entityPropContributors"}},{"provide":{"__symbolic":"reference","name":"ɵbu"},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"options"},"member":"createFormPropContributors"}},{"provide":{"__symbolic":"reference","name":"ɵbv"},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"options"},"member":"editFormPropContributors"}},{"__symbolic":"reference","name":"ɵbq"}]}},"forLazy":{"__symbolic":"function","parameters":["options"],"defaults":[{}],"value":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@abp/ng.core","name":"LazyModuleFactory","line":106,"character":15},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"IdentityModule"},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"options"}]}]}}}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"abp-roles","providers":[{"__symbolic":"reference","module":"@abp/ng.core","name":"ListService","line":22,"character":4},{"provide":{"__symbolic":"reference","module":"@abp/ng.theme.shared/extensions","name":"EXTENSIONS_IDENTIFIER","line":24,"character":15},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"Roles"}}],"template":"<ng-container *ngIf=\"data$ | async as data\">\r\n  <div class=\"row entry-row\">\r\n    <div class=\"col-auto\">\r\n      <h1 class=\"content-header-title\">{{ 'AbpIdentity::Roles' | abpLocalization }}</h1>\r\n    </div>\r\n    <div class=\"col-lg-auto pl-lg-0\">\r\n      <abp-breadcrumb></abp-breadcrumb>\r\n    </div>\r\n    <div class=\"col\">\r\n      <abp-page-toolbar [record]=\"data\"></abp-page-toolbar>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"identity-roles-wrapper\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"search\"\r\n                class=\"form-control\"\r\n                [placeholder]=\"'AbpUi::PagerSearch' | abpLocalization\"\r\n                [(ngModel)]=\"list.filter\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-primary\" (click)=\"list.get()\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n      <abp-extensible-table\r\n        [data]=\"data\"\r\n        [recordsTotal]=\"totalCount$ | async\"\r\n        [list]=\"list\"\r\n      ></abp-extensible-table>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<abp-modal size=\"md\" [(visible)]=\"isModalVisible\" [busy]=\"modalBusy\">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ (selected?.id ? 'AbpIdentity::Edit' : 'AbpIdentity::NewRole') | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"save()\" validateOnSubmit>\r\n      <abp-extensible-form [selectedRecord]=\"selected\"></abp-extensible-form>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>\r\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass=\"fa fa-check\" [disabled]=\"form?.invalid\" (click)=\"save()\">{{\r\n      'AbpIdentity::Save' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n\r\n<abp-permission-management\r\n  *abpReplaceableTemplate=\"{\r\n    inputs: {\r\n      providerName: { value: 'R' },\r\n      providerKey: { value: providerKey },\r\n      hideBadges: { value: true },\r\n      visible: { value: visiblePermissions, twoWay: true }\r\n    },\r\n    outputs: { visibleChange: onVisiblePermissionChange },\r\n    componentKey: 'PermissionManagement.PermissionManagementComponent'\r\n  }\"\r\n  [(visible)]=\"visiblePermissions\"\r\n  [providerKey]=\"providerKey\"\r\n  providerName=\"R\"\r\n  [hideBadges]=\"true\"\r\n>\r\n</abp-permission-management>\r\n\r\n<abp-claim-modal [(visible)]=\"visibleClaims\" [subject]=\"claimSubject\"></abp-claim-modal>\r\n"}]}],"members":{"data$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Select","line":30,"character":3},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵc"},"member":"getRoles"}]}]}],"totalCount$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Select","line":33,"character":3},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵc"},"member":"getRolesTotalCount"}]}]}],"modalContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":52,"character":3},"arguments":["modalContent"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ListService","module":"@abp/ng.core","arguments":[{"__symbolic":"reference","name":"ɵz"}]},{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"ConfirmationService","line":61,"character":35},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","module":"@ngxs/store","name":"Store","line":63,"character":21},{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":64,"character":24}]}],"createForm":[{"__symbolic":"method"}],"hookToQuery":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"openModal":[{"__symbolic":"method"}],"onAdd":[{"__symbolic":"method"}],"onEdit":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"onManageClaims":[{"__symbolic":"method"}],"openPermissionsModal":[{"__symbolic":"method"}]}},"ɵb":{"Claims":"Identity.ClaimsComponent","Roles":"Identity.RolesComponent","Users":"Identity.UsersComponent","OrganizationUnits":"Identity.OrganizationUnitsComponent","OrganizationMembers":"Identity.OrganizationMembersComponent","OrganizationRoles":"Identity.OrganizationRolesComponent","SecurityLogs":"Identity.SecurityLogs"},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"State","line":30,"character":1},"arguments":[{"name":"IdentityState","defaults":{"roles":{},"users":{},"claims":{},"selectedClaim":{},"selectedUserRoles":[],"organizationUnits":{}}}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":41,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"}]}],"getRoles":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":80,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵh"}]}]}],"deleteRole":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":91,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵi"}]}]}],"addRole":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":96,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵj"}]}]}],"updateRole":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":101,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵk"}]}]}],"getUsers":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":106,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵq"}]}]}],"deleteUser":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":117,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵr"}]}]}],"createUser":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":122,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵs"}]}]}],"updateUser":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":127,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵt"}]}]}],"unlockUser":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":132,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵv"}]}]}],"getUserRoles":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":137,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵu"}]}]}],"getClaimTypes":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":149,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵl"}]}]}],"getClaimType":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":160,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵm"}]}]}],"deleteClaimType":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":171,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵn"}]}]}],"createClaimType":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":176,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵo"}]}]}],"updateClaimType":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":181,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵp"}]}]}],"getOrganizationUnits":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Action","line":186,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵw"}]}]}]},"statics":{"getRoles":{"__symbolic":"function","parameters":["roles"],"value":{"__symbolic":"binop","operator":"||","left":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"roles"},"member":"items"},"right":[]}},"getRolesTotalCount":{"__symbolic":"function","parameters":["roles"],"value":{"__symbolic":"binop","operator":"||","left":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"roles"},"member":"totalCount"},"right":0}},"getUsers":{"__symbolic":"function","parameters":["users"],"value":{"__symbolic":"binop","operator":"||","left":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"users"},"member":"items"},"right":[]}},"getUsersTotalCount":{"__symbolic":"function","parameters":["users"],"value":{"__symbolic":"binop","operator":"||","left":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"users"},"member":"totalCount"},"right":0}},"getClaimTypes":{"__symbolic":"function","parameters":["claims"],"value":{"__symbolic":"binop","operator":"||","left":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"claims"},"member":"items"},"right":[]}},"getClaimTypesTotalCount":{"__symbolic":"function","parameters":["claims"],"value":{"__symbolic":"binop","operator":"||","left":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"claims"},"member":"totalCount"},"right":0}}}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"RestService","line":108,"character":35}]}]},"statics":{"ɵprov":{}}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":17,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"RestService","line":214,"character":35}]}]},"statics":{"ɵprov":{}}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"RestService","line":49,"character":35}]}]},"statics":{"ɵprov":{}}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":18,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"RestService","line":196,"character":35}]}]},"statics":{"ɵprov":{}}},"ɵh":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}]},"statics":{"type":"[Identity] Get Roles"}},"ɵi":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}]},"statics":{"type":"[Identity] Delete Role"}},"ɵj":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵbb"}]}]},"statics":{"type":"[Identity] Create Role"}},"ɵk":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":37,"character":30,"module":"./lib/actions/identity.actions"}]}]},"statics":{"type":"[Identity] Update Role"}},"ɵl":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}]},"statics":{"type":"[Identity] Get ClaimTypes"}},"ɵm":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}]},"statics":{"type":"[Identity] Get ClaimType By Id"}},"ɵn":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}]},"statics":{"type":"[Identity] Delete ClaimType"}},"ɵo":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵx"}]}]},"statics":{"type":"[Identity] Create ClaimType"}},"ɵp":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":62,"character":30,"module":"./lib/actions/identity.actions"}]}]},"statics":{"type":"[Identity] Update ClaimType"}},"ɵq":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}]},"statics":{"type":"[Identity] Get Users"}},"ɵr":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}]},"statics":{"type":"[Identity] Delete User"}},"ɵs":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵbc"}]}]},"statics":{"type":"[Identity] Create User"}},"ɵt":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":87,"character":30,"module":"./lib/actions/identity.actions"}]}]},"statics":{"type":"[Identity] Update User"}},"ɵu":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}]},"statics":{"type":"[Identity] Get User Roles"}},"ɵv":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"}]}]},"statics":{"type":"[Identity] Unlock User"}},"ɵw":{"__symbolic":"class","members":{},"statics":{"type":"[Identity] Get Organization Units"}},"ɵx":{"__symbolic":"interface"},"ɵy":{"__symbolic":"interface"},"ɵz":{"__symbolic":"interface"},"ɵba":{"__symbolic":"interface"},"ɵbb":{"__symbolic":"interface"},"ɵbc":{"__symbolic":"interface"},"ɵbd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":61,"character":1},"arguments":[{"selector":"abp-users","providers":[{"__symbolic":"reference","module":"@abp/ng.core","name":"ListService","line":65,"character":4},{"provide":{"__symbolic":"reference","module":"@abp/ng.theme.shared/extensions","name":"EXTENSIONS_IDENTIFIER","line":67,"character":15},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"Users"}}],"styles":["\n      .mh-35 {\n        max-height: 35px;\n      }\n    "],"template":"<ng-container *ngIf=\"data$ | async as data\">\r\n  <div class=\"row entry-row\">\r\n    <div class=\"col-auto\">\r\n      <h1 class=\"content-header-title\">{{ 'AbpIdentity::Users' | abpLocalization }}</h1>\r\n    </div>\r\n    <div class=\"col-lg-auto pl-lg-0\">\r\n      <abp-breadcrumb></abp-breadcrumb>\r\n    </div>\r\n    <div class=\"col\">\r\n      <abp-page-toolbar [record]=\"data\"></abp-page-toolbar>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"identity-users-wrapper\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"search\"\r\n                class=\"form-control\"\r\n                [placeholder]=\"'AbpUi::PagerSearch' | abpLocalization\"\r\n                [(ngModel)]=\"list.filter\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-primary\" (click)=\"list.get()\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card\">\r\n      <abp-extensible-table\r\n        [data]=\"data\"\r\n        [recordsTotal]=\"totalCount$ | async\"\r\n        [list]=\"list\"\r\n      ></abp-extensible-table>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<abp-modal [(visible)]=\"isModalVisible\" [busy]=\"modalBusy\" (disappear)=\"form = null\">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ (selected?.id ? 'AbpIdentity::Edit' : 'AbpIdentity::NewUser') | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <form *ngIf=\"form\" [formGroup]=\"form\" (ngSubmit)=\"save()\" validateOnSubmit>\r\n      <ul id=\"user-nav-tabs\" ngbNav #nav=\"ngbNav\" class=\"nav-tabs\">\r\n        <li id=\"user-informations\" ngbNavItem>\r\n          <a ngbNavLink>{{ 'AbpIdentity::UserInformations' | abpLocalization }}</a>\r\n          <ng-template ngbNavContent\r\n            ><abp-extensible-form [selectedRecord]=\"selected\"></abp-extensible-form\r\n          ></ng-template>\r\n        </li>\r\n        <li id=\"user-roles\" ngbNavItem>\r\n          <a ngbNavLink>{{ 'AbpIdentity::Roles' | abpLocalization }}</a>\r\n          <ng-template ngbNavContent>\r\n            <div\r\n              *ngFor=\"let roleGroup of roleGroups; let i = index; trackBy: trackByFn\"\r\n              class=\"custom-checkbox custom-control mb-2\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-control-input\"\r\n                [attr.id]=\"'roles-' + i\"\r\n                [formControl]=\"roleGroup.controls[roles[i].name]\"\r\n              />\r\n              <label class=\"custom-control-label\" [attr.for]=\"'roles-' + i\">{{\r\n                roles[i].name\r\n              }}</label>\r\n            </div></ng-template\r\n          >\r\n        </li>\r\n        <li id=\"user-organization-units\" ngbNavItem>\r\n          <a ngbNavLink>{{ 'AbpIdentity::OrganizationUnits' | abpLocalization }}</a>\r\n          <ng-template ngbNavContent>\r\n            <abp-tree\r\n              *ngIf=\"organization.nodes?.length; else noDataMessage\"\r\n              [checkStrictly]=\"true\"\r\n              [checkable]=\"true\"\r\n              [nodes]=\"organization.nodes\"\r\n              [isNodeSelected]=\"organization.selectFn\"\r\n              [(checkedKeys)]=\"organization.checkedKeys\"\r\n              [(expandedKeys)]=\"organization.expandedKeys\"\r\n            ></abp-tree>\r\n\r\n            <ng-template #noDataMessage>\r\n              <p class=\"text-muted\">\r\n                {{ 'AbpIdentity::NoOrganizationUnits' | abpLocalization }}\r\n              </p>\r\n            </ng-template>\r\n          </ng-template>\r\n        </li>\r\n      </ul>\r\n      <div [ngbNavOutlet]=\"nav\" class=\"mt-2 fade-in-top\"></div>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>\r\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass=\"fa fa-check\" (click)=\"save()\" [disabled]=\"form?.invalid\">{{\r\n      'AbpIdentity::Save' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n\r\n<abp-permission-management\r\n  *abpReplaceableTemplate=\"{\r\n    inputs: {\r\n      providerName: { value: 'U' },\r\n      providerKey: { value: providerKey },\r\n      hideBadges: { value: true },\r\n      visible: { value: visiblePermissions, twoWay: true }\r\n    },\r\n    outputs: { visibleChange: onVisiblePermissionChange },\r\n    componentKey: 'PermissionManagement.PermissionManagementComponent'\r\n  }\"\r\n  [(visible)]=\"visiblePermissions\"\r\n  [providerKey]=\"providerKey\"\r\n  [hideBadges]=\"true\"\r\n  providerName=\"U\"\r\n>\r\n</abp-permission-management>\r\n\r\n<abp-claim-modal [(visible)]=\"visibleClaims\" [subject]=\"claimSubject\"></abp-claim-modal>\r\n\r\n<abp-modal [(visible)]=\"isSetPasswordModalVisible\" [busy]=\"modalBusy\" size=\"md\">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ 'AbpIdentity::SetPassword' | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <form [formGroup]=\"setPasswordForm\" (ngSubmit)=\"setPassword()\" validateOnSubmit>\r\n      <div class=\"mt-2 fade-in-top\">\r\n        <div class=\"form-group\">\r\n          <label for=\"new-password\">{{ 'AbpIdentity::Password' | abpLocalization }}</label>\r\n          <div class=\"input-group\">\r\n            <div class=\"col-10 p-0\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"new-password\"\r\n                class=\"form-control\"\r\n                formControlName=\"newPassword\"\r\n                autofocus\r\n              />\r\n            </div>\r\n            <div class=\"input-group-append col-2 p-0\">\r\n              <button\r\n                class=\"btn btn-secondary mh-35\"\r\n                id=\"generate-random-password-button\"\r\n                type=\"button\"\r\n                (click)=\"generatePassword()\"\r\n              >\r\n                <i class=\"fa fa-refresh\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>\r\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button\r\n      iconClass=\"fa fa-check\"\r\n      (click)=\"setPassword()\"\r\n      [disabled]=\"setPasswordForm?.invalid\"\r\n      >{{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\r\n    >\r\n  </ng-template>\r\n</abp-modal>\r\n\r\n<abp-modal [(visible)]=\"isLockModalVisible\" [busy]=\"modalBusy\" size=\"md\">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ 'AbpIdentity::Lock' | abpLocalization }} - {{ selected.userName }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <form [formGroup]=\"lockForm\" (ngSubmit)=\"lock()\" validateOnSubmit>\r\n      <div class=\"mt-2 fade-in-top\">\r\n        <div class=\"form-group\" [formGroup]=\"lockForm\">\r\n          <label>{{ 'AbpIdentity::DisplayName:LockoutDuration' | abpLocalization }}</label>\r\n          <input type=\"number\" class=\"form-control\" formControlName=\"lockoutDuration\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"httpMethod\">{{\r\n            'AbpIdentity::DisplayName:LockDurationType' | abpLocalization\r\n          }}</label\r\n          ><select class=\"custom-select form-control\" formControlName=\"lockDurationType\">\r\n            <option *ngFor=\"let option of lockDurationTypeOptions\" [ngValue]=\"option.value\">\r\n              {{ 'AbpIdentity::Enum:LockDurationType.' + option.key | abpLocalization }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>\r\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button\r\n      iconClass=\"fa fa-check\"\r\n      (click)=\"lock()\"\r\n      [disabled]=\"lockForm?.invalid || modalBusy\"\r\n      >{{ 'AbpIdentity::Save' | abpLocalization }}</abp-button\r\n    >\r\n  </ng-template>\r\n</abp-modal>\r\n\r\n<abp-modal [(visible)]=\"twoFactor.isModalVisible\" [busy]=\"modalBusy\" size=\"md\">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ 'AbpIdentity::TwoFactor' | abpLocalization }} - {{ selected.userName }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <div class=\"mt-2 fade-in-top\">\r\n      <div class=\"custom-checkbox custom-control mb-2\">\r\n        <input\r\n          type=\"checkbox\"\r\n          class=\"custom-control-input\"\r\n          id=\"two-factor-enabled\"\r\n          [(ngModel)]=\"twoFactor.checkboxValue\"\r\n        />\r\n        <label class=\"custom-control-label\" for=\"two-factor-enabled\">{{\r\n          'AbpIdentity::DisplayName:TwoFactorEnabled' | abpLocalization\r\n        }}</label>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>\r\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass=\"fa fa-check\" (click)=\"setTwoFactor()\" [disabled]=\"modalBusy\">{{\r\n      'AbpIdentity::Save' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n"}]}],"members":{"data$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Select","line":80,"character":3},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵc"},"member":"getUsers"}]}]}],"totalCount$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Select","line":83,"character":3},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵc"},"member":"getUsersTotalCount"}]}]}],"modalContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":86,"character":3},"arguments":["modalContent"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ListService","module":"@abp/ng.core","arguments":[{"__symbolic":"reference","name":"ɵba"}]},{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"ConfirmationService","line":152,"character":32},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":154,"character":15},{"__symbolic":"reference","module":"@ngxs/store","name":"Store","line":155,"character":18},{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"ToasterService","line":156,"character":27},{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":157,"character":21},{"__symbolic":"reference","module":"@abp/ng.core","name":"ConfigStateService","line":158,"character":24}]}],"ngOnInit":[{"__symbolic":"method"}],"hookToQuery":[{"__symbolic":"method"}],"buildForm":[{"__symbolic":"method"}],"openModal":[{"__symbolic":"method"}],"onAdd":[{"__symbolic":"method"}],"onEdit":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"onManageClaims":[{"__symbolic":"method"}],"unlock":[{"__symbolic":"method"}],"openPermissionsModal":[{"__symbolic":"method"}],"setPassword":[{"__symbolic":"method"}],"generatePassword":[{"__symbolic":"method"}],"lock":[{"__symbolic":"method"}],"setTwoFactor":[{"__symbolic":"method"}]}},"ɵbe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"abp-claim-modal","template":"<abp-modal size=\"md\" [(visible)]=\"visible\" [busy]=\"modalBusy\">\r\n  <ng-template #abpHeader>\r\n    <h5 class=\"modal-title\">{{ 'AbpIdentity::Claims' | abpLocalization }}</h5>\r\n  </ng-template>\r\n  <ng-template #abpBody>\r\n    <form (ngSubmit)=\"addClaim()\">\r\n      <div class=\"form-row\">\r\n        <div class=\"col col-sm-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"claimTypeSelect\">{{ 'AbpIdentity::Type' | abpLocalization }}</label\r\n            ><select\r\n              autofocus\r\n              id=\"claimTypeSelect\"\r\n              class=\"custom-select form-control\"\r\n              [(ngModel)]=\"newClaimType\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n            >\r\n              <option *ngFor=\"let type of claimTypes\" [ngValue]=\"type.name\">{{ type.name }}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col col-sm-6\">\r\n          <div class=\"form-group\">\r\n            <label for=\"newClaimValue\">Value</label>\r\n            <input\r\n              required\r\n              id=\"newClaimValue\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"newClaimValue\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col col-sm-12 align-self-center\">\r\n          <button class=\"btn btn-success btn-block\" type=\"button\" (click)=\"addClaim()\">\r\n            <i class=\"fa fa-plus\"></i>\r\n            {{ 'AbpIdentity::AddClaim' | abpLocalization }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <hr class=\"my-4\" />\r\n    <div class=\"willBeHidden\" *ngIf=\"subjectClaims && subjectClaims.length\">\r\n      <div class=\"input-group mb-3\" *ngFor=\"let claim of subjectClaims; let i = index\">\r\n        <div class=\"input-group-prepend\">\r\n          <label class=\"input-group-text mw-100 fs-9\">{{ claim.claimType }}</label>\r\n        </div>\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"subjectClaims[i].claimValue\" required />\r\n        <div class=\"input-group-append\">\r\n          <button class=\"btn btn-danger deleteClaim\" (click)=\"removeClaim(i)\"><i class=\"fa fa-trash\"></i></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>{{ 'AbpIdentity::Cancel' | abpLocalization }}</button>\r\n    <abp-button iconClass=\"fa fa-check\" (click)=\"save()\">{{ 'AbpIdentity::Save' | abpLocalization }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n"}]}],"members":{"subject":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"visible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"visibleChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","module":"@ngxs/store","name":"Store","line":58,"character":19}]}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"initModal":[{"__symbolic":"method"}],"getClaimTypeNames":[{"__symbolic":"method"}],"getSubjectClaims":[{"__symbolic":"method"}],"addClaim":[{"__symbolic":"method"}],"removeClaim":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}]}},"ɵbf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":30,"character":1},"arguments":[{"selector":"abp-claims","providers":[{"__symbolic":"reference","module":"@abp/ng.core","name":"ListService","line":34,"character":4},{"provide":{"__symbolic":"reference","module":"@abp/ng.theme.shared/extensions","name":"EXTENSIONS_IDENTIFIER","line":36,"character":15},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"Claims"}}],"template":"<ng-container *ngIf=\"data$ | async as data\">\r\n  <div class=\"row entry-row\">\r\n    <div class=\"col-auto\">\r\n      <h1 class=\"content-header-title\">{{ 'AbpIdentity::ClaimTypes' | abpLocalization }}</h1>\r\n    </div>\r\n    <div class=\"col-lg-auto pl-lg-0\">\r\n      <abp-breadcrumb></abp-breadcrumb>\r\n    </div>\r\n    <div class=\"col\">\r\n      <abp-page-toolbar [record]=\"data\"></abp-page-toolbar>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"identity-claim-types-wrapper\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                type=\"search\"\r\n                class=\"form-control\"\r\n                [placeholder]=\"'AbpUi::PagerSearch' | abpLocalization\"\r\n                [(ngModel)]=\"list.filter\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-primary\" (click)=\"list.get()\">\r\n                  <i class=\"fas fa-search\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n      <abp-extensible-table\r\n        [data]=\"data\"\r\n        [recordsTotal]=\"totalCount$ | async\"\r\n        [list]=\"list\"\r\n      ></abp-extensible-table>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<abp-modal size=\"md\" [(visible)]=\"isModalVisible\" [busy]=\"modalBusy\">\r\n  <ng-template #abpHeader>\r\n    <h3>\r\n      {{ (selected?.id ? 'AbpIdentity::Edit' : 'AbpIdentity::NewClaimType') | abpLocalization }}\r\n    </h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"save()\" validateOnSubmit>\r\n      <div class=\"mt-2 fade-in-top\">\r\n        <abp-extensible-form [selectedRecord]=\"selected\"></abp-extensible-form>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>\r\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass=\"fa fa-check\" (click)=\"save()\" [disabled]=\"form?.invalid\">{{\r\n      'AbpIdentity::Save' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n"}]}],"members":{"data$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Select","line":42,"character":3},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵc"},"member":"getClaimTypes"}]}]}],"totalCount$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngxs/store","name":"Select","line":44,"character":3},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵc"},"member":"getClaimTypesTotalCount"}]}]}],"modalContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":46,"character":3},"arguments":["modalContent"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ListService","module":"@abp/ng.core","arguments":[{"__symbolic":"reference","name":"ɵy"}]},{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"ConfirmationService","line":60,"character":35},{"__symbolic":"reference","module":"@ngxs/store","name":"Store","line":61,"character":21},{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":62,"character":24}]}],"ngOnInit":[{"__symbolic":"method"}],"hookToQuery":[{"__symbolic":"method"}],"buildForm":[{"__symbolic":"method"}],"getTypeName":[{"__symbolic":"method"}],"openModal":[{"__symbolic":"method"}],"onAdd":[{"__symbolic":"method"}],"onEdit":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}]}},"ɵbg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"selector":"abp-organization-units","providers":[{"provide":{"__symbolic":"reference","module":"@abp/ng.theme.shared/extensions","name":"EXTENSIONS_IDENTIFIER","line":24,"character":15},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"OrganizationUnits"}}],"styles":["\n      .fs-15px {\n        font-size: 15px;\n      }\n    "],"template":"<div class=\"row entry-row\">\r\n  <div class=\"col-auto\">\r\n    <h1 class=\"content-header-title\">{{ 'AbpIdentity::OrganizationUnits' | abpLocalization }}</h1>\r\n  </div>\r\n  <div class=\"col-lg-auto pl-lg-0\">\r\n    <abp-breadcrumb></abp-breadcrumb>\r\n  </div>\r\n  <div class=\"col\">\r\n    <abp-page-toolbar [record]=\"organizationUnits\"></abp-page-toolbar>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div *abpPermission=\"'AbpIdentity.OrganizationUnits.ManageOU'\" class=\"col-12 col-lg-6 col-xl-5\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header d-flex justify-content-between\">\r\n        <h5>\r\n          {{ 'AbpIdentity::OrganizationTree' | abpLocalization }}\r\n        </h5>\r\n        <button class=\"btn btn-sm btn-primary\" (click)=\"add()\">\r\n          <i class=\"fas fa-plus mr-1\"></i> {{ 'AbpIdentity::AddRootUnit' | abpLocalization }}\r\n        </button>\r\n      </div>\r\n      <div class=\"card-body\" [abpLoading]=\"loading\">\r\n        <abp-tree\r\n          [nodes]=\"nodes\"\r\n          [(expandedKeys)]=\"expandedKeys\"\r\n          [(selectedNode)]=\"selectedUnit\"\r\n          [draggable]=\"true\"\r\n          (dropOver)=\"onDrop($event)\"\r\n        >\r\n          <ng-template abpTreeNodeTemplate let-node>\r\n            <i class=\"fas fa-folder fs-15px text-primary mr-1\"></i>\r\n            {{ node.title }}\r\n          </ng-template>\r\n\r\n          <ng-template #menu let-node>\r\n            <li class=\"pointer\" ngbDropdownItem (click)=\"edit(node.origin.entity)\">\r\n              {{ 'AbpIdentity::Edit' | abpLocalization }}\r\n            </li>\r\n            <li class=\"pointer\" ngbDropdownItem (click)=\"addSubUnit(node.origin.entity)\">\r\n              {{ 'AbpIdentity::AddSubUnit' | abpLocalization }}\r\n            </li>\r\n            <li class=\"pointer\" ngbDropdownItem (click)=\"delete(node.origin.entity)\">\r\n              {{ 'AbpIdentity::Delete' | abpLocalization }}\r\n            </li>\r\n          </ng-template>\r\n        </abp-tree>\r\n        <p *ngIf=\"!loading && !nodes?.length\" class=\"text-muted\">\r\n          {{ 'AbpIdentity::NoOrganizationUnits' | abpLocalization }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    *abpPermission=\"\r\n      'AbpIdentity.OrganizationUnits.ManageMembers || AbpIdentity.OrganizationUnits.ManageRoles'\r\n    \"\r\n    class=\"col-12 col-lg-6 col-xl-7\"\r\n  >\r\n    <div class=\"card\">\r\n      <ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs\">\r\n        <li ngbNavItem *abpPermission=\"'AbpIdentity.OrganizationUnits.ManageMembers'\">\r\n          <a ngbNavLink>{{ 'AbpIdentity::Members' | abpLocalization }}</a>\r\n          <ng-template ngbNavContent>\r\n            <ng-container *ngIf=\"selectedUnit; else selectUnitMsg\">\r\n              <abp-organization-members\r\n                *abpReplaceableTemplate=\"{\r\n                  inputs: {\r\n                    selectedOrganizationUnit: { value: selectedUnit }\r\n                  },\r\n                  componentKey: organizationMembersKey\r\n                }\"\r\n                [selectedOrganizationUnit]=\"selectedUnit\"\r\n              ></abp-organization-members>\r\n            </ng-container>\r\n            <ng-template #selectUnitMsg>\r\n              <p class=\"text-muted\">\r\n                {{ 'AbpIdentity::SelectAnOrganizationUnitToSeeMembers' | abpLocalization }}\r\n              </p>\r\n            </ng-template>\r\n          </ng-template>\r\n        </li>\r\n        <li ngbNavItem *abpPermission=\"'AbpIdentity.OrganizationUnits.ManageRoles'\">\r\n          <a ngbNavLink>{{ 'AbpIdentity::Roles' | abpLocalization }}</a>\r\n          <ng-template ngbNavContent>\r\n            <ng-container *ngIf=\"selectedUnit; else selectUnitMsg\">\r\n              <abp-organization-roles\r\n                *abpReplaceableTemplate=\"{\r\n                  inputs: {\r\n                    selectedOrganizationUnit: { value: selectedUnit }\r\n                  },\r\n                  componentKey: organizationRolesKey\r\n                }\"\r\n                [selectedOrganizationUnit]=\"selectedUnit\"\r\n              ></abp-organization-roles>\r\n            </ng-container>\r\n            <ng-template #selectUnitMsg>\r\n              <p class=\"text-muted\">\r\n                {{ 'AbpIdentity::SelectAnOrganizationUnitToSeeRoles' | abpLocalization }}\r\n              </p>\r\n            </ng-template>\r\n          </ng-template>\r\n        </li>\r\n      </ul>\r\n      <div [ngbNavOutlet]=\"nav\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<abp-modal [(visible)]=\"isNodeModalVisible\" [busy]=\"isModalBusy\" size=\"md\">\r\n  <ng-template #abpHeader>\r\n    <h3>\r\n      {{\r\n        (nodeForm.get('id').value\r\n          ? 'AbpIdentity::EditOrganizationUnit'\r\n          : 'AbpIdentity::NewOrganizationUnit'\r\n        ) | abpLocalization\r\n      }}\r\n    </h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <div class=\"mb-3\" *ngIf=\"nodeForm.get('parentId').value as parentId\">\r\n      <strong>{{\r\n        'AbpIdentity::OrganizationUnit:Parent{0}' | abpLocalization: getParentName(parentId)\r\n      }}</strong>\r\n    </div>\r\n    <form [formGroup]=\"nodeForm\" (ngSubmit)=\"save()\" validateOnSubmit>\r\n      <abp-extensible-form [selectedRecord]=\"selectedUnit\"></abp-extensible-form>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>\r\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass=\"fa fa-check\" (click)=\"save()\" [disabled]=\"nodeForm?.invalid\">{{\r\n      'AbpIdentity::Save' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":51,"character":24},{"__symbolic":"reference","module":"@ngxs/store","name":"Store","line":52,"character":21},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":54,"character":18},{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"ConfirmationService","line":55,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"buildForm":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}],"addSubUnit":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"getParentName":[{"__symbolic":"method"}],"onDrop":[{"__symbolic":"method"}],"move":[{"__symbolic":"method"}]}},"ɵbh":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵbj"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"abp-organization-members","providers":[{"__symbolic":"reference","module":"@abp/ng.core","name":"ListService","line":15,"character":4},{"provide":{"__symbolic":"reference","module":"@abp/ng.theme.shared/extensions","name":"EXTENSIONS_IDENTIFIER","line":17,"character":15},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"OrganizationMembers"}},{"provide":{"__symbolic":"reference","name":"ɵbi"},"useValue":{"getCurrentUnitsMethodName":"getMembers","addUnitsMethodName":"addMembers","addUnitsBodyPropName":"userIds","deleteMethodName":"removeMember","deletionLocalizationKey":"AbpIdentity::RemoveUserFromOuWarningMessage"}}],"template":"<div class=\"text-right\">\r\n  <button class=\"btn btn-sm btn-primary mb-2\" (click)=\"openModal()\">\r\n    <i class=\"fas fa-plus mr-1\"></i> {{ 'AbpIdentity::AddMember' | abpLocalization }}\r\n  </button>\r\n</div>\r\n\r\n<abp-extensible-table\r\n  [data]=\"currentOrganizationUnits.items\"\r\n  [recordsTotal]=\"currentOrganizationUnits.totalCount\"\r\n  [list]=\"list\"\r\n></abp-extensible-table>\r\n\r\n<abp-modal [(visible)]=\"isModalVisible\" [busy]=\"isModalBusy\">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ 'AbpIdentity::SelectUsers' | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <abp-organization-members-modal-body\r\n      [checkedUnits]=\"checkedUnits\"\r\n      [isCheckboxDisabled]=\"isCheckboxDisabled\"\r\n    ></abp-organization-members-modal-body>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>\r\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass=\"fa fa-check\" (click)=\"addUnits()\">{{\r\n      'AbpIdentity::Save' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n"}]}],"members":{}},"ɵbi":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":26,"character":44},"arguments":["ORGANIZATION_UNIT_CONFIG"]},"ɵbj":{"__symbolic":"class","arity":1,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"template":""}]}],"members":{"selectedOrganizationUnit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":49,"character":34}]}],"ngOnChanges":[{"__symbolic":"method"}],"hookToQuery":[{"__symbolic":"method"}],"addUnits":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"openModal":[{"__symbolic":"method"}]}},"ɵbk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"abp-organization-members-modal-body","template":"\n    <div id=\"data-tables-table-filter\" class=\"data-tables-filter\">\n      <div class=\"input-group\">\n        <input\n          type=\"search\"\n          class=\"form-control\"\n          [placeholder]=\"'AbpUi::PagerSearch' | abpLocalization\"\n          [(ngModel)]=\"list.filter\"\n        />\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-primary\" (click)=\"list.get()\">\n            <i class=\"fas fa-search\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <abp-extensible-table\n        actionsText=\"\"\n        [data]=\"allUnits.items\"\n        [recordsTotal]=\"allUnits.totalCount\"\n        [actionsColumnWidth]=\"38\"\n        [actionsTemplate]=\"customAction\"\n        [list]=\"list\"\n      ></abp-extensible-table>\n    </div>\n\n    <ng-template #customAction let-row>\n      <input\n        type=\"checkbox\"\n        [(ngModel)]=\"checkedUnits[row.id]\"\n        [disabled]=\"isCheckboxDisabled(row.id)\"\n      />\n    </ng-template>\n  ","providers":[{"__symbolic":"reference","module":"@abp/ng.core","name":"ListService","line":43,"character":14}]}]}],"members":{"checkedUnits":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":3}}]}],"isCheckboxDisabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ListService","module":"@abp/ng.core","arguments":[{"__symbolic":"reference","name":"ɵba"}]},{"__symbolic":"reference","name":"ɵe"}]}],"ngOnInit":[{"__symbolic":"method"}],"hookToQuery":[{"__symbolic":"method"}]}},"ɵbl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵbj"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"abp-organization-roles","providers":[{"__symbolic":"reference","module":"@abp/ng.core","name":"ListService","line":15,"character":4},{"provide":{"__symbolic":"reference","module":"@abp/ng.theme.shared/extensions","name":"EXTENSIONS_IDENTIFIER","line":17,"character":15},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"OrganizationRoles"}},{"provide":{"__symbolic":"reference","name":"ɵbi"},"useValue":{"getCurrentUnitsMethodName":"getRoles","addUnitsMethodName":"addRoles","addUnitsBodyPropName":"roleIds","deleteMethodName":"removeRole","deletionLocalizationKey":"AbpIdentity::RemoveRoleFromOuWarningMessage"}}],"template":"<div class=\"text-right\">\r\n  <button class=\"btn btn-sm btn-primary mb-2\" (click)=\"openModal()\">\r\n    <i class=\"fas fa-plus mr-1\"></i> {{ 'AbpIdentity::AddRole' | abpLocalization }}\r\n  </button>\r\n</div>\r\n\r\n<abp-extensible-table\r\n  [data]=\"currentOrganizationUnits.items\"\r\n  [recordsTotal]=\"currentOrganizationUnits.totalCount\"\r\n  [list]=\"list\"\r\n></abp-extensible-table>\r\n\r\n<abp-modal [(visible)]=\"isModalVisible\" [busy]=\"isModalBusy\">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ 'AbpIdentity::SelectRoles' | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <abp-organization-roles-modal-body\r\n      [checkedUnits]=\"checkedUnits\"\r\n      [isCheckboxDisabled]=\"isCheckboxDisabled\"\r\n    ></abp-organization-roles-modal-body>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" #abpClose>\r\n      {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass=\"fa fa-check\" (click)=\"addUnits()\">{{\r\n      'AbpIdentity::Save' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n"}]}],"members":{}},"ɵbm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"abp-organization-roles-modal-body","template":"\n    <div class=\"card\">\n      <abp-extensible-table\n        actionsText=\"\"\n        [data]=\"allUnits.items\"\n        [recordsTotal]=\"allUnits.totalCount\"\n        [actionsColumnWidth]=\"38\"\n        [actionsTemplate]=\"customAction\"\n        [list]=\"list\"\n      ></abp-extensible-table>\n    </div>\n\n    <ng-template #customAction let-row>\n      <input\n        type=\"checkbox\"\n        [(ngModel)]=\"checkedUnits[row.id]\"\n        [disabled]=\"isCheckboxDisabled(row.id)\"\n      />\n    </ng-template>\n  ","providers":[{"__symbolic":"reference","module":"@abp/ng.core","name":"ListService","line":27,"character":14}]}]}],"members":{"checkedUnits":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"isCheckboxDisabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ListService","module":"@abp/ng.core","arguments":[{"__symbolic":"reference","name":"ɵz"}]},{"__symbolic":"reference","name":"ɵd"}]}],"ngOnInit":[{"__symbolic":"method"}],"hookToQuery":[{"__symbolic":"method"}]}},"ɵbn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"abp-security-logs","providers":[{"__symbolic":"reference","module":"@abp/ng.core","name":"ListService","line":15,"character":4},{"provide":{"__symbolic":"reference","module":"@abp/ng.theme.shared/extensions","name":"EXTENSIONS_IDENTIFIER","line":17,"character":15},"useValue":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"SecurityLogs"}},{"provide":{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbDateAdapter","line":20,"character":15},"useClass":{"__symbolic":"reference","module":"@abp/ng.theme.shared/extensions","name":"DateAdapter","line":20,"character":41}}],"template":"<div id=\"wrapper\">\r\n  <div class=\"row entry-row\">\r\n    <div class=\"col-auto\">\r\n      <h1 class=\"content-header-title\">{{ 'AbpIdentity::SecurityLogs' | abpLocalization }}</h1>\r\n    </div>\r\n    <div class=\"col-lg-auto pl-lg-0\">\r\n      <abp-breadcrumb></abp-breadcrumb>\r\n    </div>\r\n    <div class=\"col\">\r\n      <abp-page-toolbar [record]=\"data.items\"></abp-page-toolbar>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-body pb-lg-3\">\r\n      <div class=\"row\" (keyup.enter)=\"list.get()\">\r\n        <div class=\"col-md-6 col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label>{{ 'AbpIdentity::SecurityLogs:StartTime' | abpLocalization }}</label>\r\n            <input\r\n              #startDate=\"ngbDatepicker\"\r\n              class=\"form-control\"\r\n              name=\"start-date\"\r\n              readonly\r\n              [(ngModel)]=\"filter.startTime\"\r\n              [dayTemplate]=\"startDateTemplate\"\r\n              ngbDatepicker\r\n              (click)=\"startDate.toggle()\"\r\n            />\r\n            <ng-template\r\n              #startDateTemplate\r\n              let-date\r\n              let-focused=\"focused\"\r\n              let-selected=\"selected\"\r\n              let-currentMonth=\"currentMonth\"\r\n            >\r\n              <div\r\n                class=\"btn-light custom-day\"\r\n                [class.bg-primary]=\"selected\"\r\n                [class.text-white]=\"selected\"\r\n                [class.text-muted]=\"currentMonth !== date.month\"\r\n                [class.ng-range]=\"date.after(filter.startTime) && date.before(filter.endTime)\"\r\n                [class.ng-range-end]=\"date.equals(filter.endTime)\"\r\n              >\r\n                {{ date.day }}\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label>{{ 'AbpIdentity::SecurityLogs:EndTime' | abpLocalization }}</label>\r\n            <input\r\n              #endDate=\"ngbDatepicker\"\r\n              class=\"form-control\"\r\n              name=\"end-date\"\r\n              readonly\r\n              [(ngModel)]=\"filter.endTime\"\r\n              [dayTemplate]=\"endDateTemplate\"\r\n              ngbDatepicker\r\n              (click)=\"endDate.toggle()\"\r\n            />\r\n            <ng-template\r\n              #endDateTemplate\r\n              let-date\r\n              let-focused=\"focused\"\r\n              let-selected=\"selected\"\r\n              let-currentMonth=\"currentMonth\"\r\n            >\r\n              <div\r\n                class=\"btn-light custom-day\"\r\n                [class.bg-primary]=\"selected\"\r\n                [class.text-white]=\"selected\"\r\n                [class.text-muted]=\"currentMonth !== date.month\"\r\n                [class.ng-range]=\"date.after(filter.startTime) && date.before(filter.endTime)\"\r\n                [class.ng-range-end]=\"date.equals(filter.startTime)\"\r\n              >\r\n                {{ date.day }}\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label>{{ 'AbpIdentity::SecurityLogs:Application' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filter.applicationName\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label>{{ 'AbpIdentity::SecurityLogs:Identity' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filter.identity\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label>{{ 'AbpIdentity::SecurityLogs:UserName' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filter.userName\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label>{{ 'AbpIdentity::SecurityLogs:Action' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filter.action\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label>{{ 'AbpIdentity::SecurityLogs:Client' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filter.clientId\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6 col-lg-3\">\r\n          <div class=\"form-group\">\r\n            <label>{{ 'AbpIdentity::SecurityLogs:CorrelationId' | abpLocalization }}</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filter.correlationId\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 col-lg-3\">\r\n          <button (click)=\"list.get()\" class=\"mt-md-2 mb-md-2 btn btn-primary btn-block\">\r\n            <i class=\"fas fa-search\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-body p-0\">\r\n      <abp-extensible-table\r\n        [data]=\"data.items\"\r\n        [recordsTotal]=\"data.totalCount\"\r\n        [list]=\"list\"\r\n      ></abp-extensible-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"ListService","line":28,"character":36},{"__symbolic":"reference","name":"ɵbo"}]}],"ngOnInit":[{"__symbolic":"method"}],"hookToQuery":[{"__symbolic":"method"}]}},"ɵbo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"RestService","line":73,"character":35}]}]},"statics":{"ɵprov":{}}},"ɵbp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":83,"character":1},"arguments":[{"imports":[{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":84,"character":12},"member":"forChild"},"arguments":[[{"path":"","redirectTo":"roles","pathMatch":"full"},{"path":"","component":{"__symbolic":"reference","module":"@abp/ng.core","name":"DynamicLayoutComponent","line":21,"character":15},"canActivate":[{"__symbolic":"reference","module":"@abp/ng.core","name":"AuthGuard","line":22,"character":18},{"__symbolic":"reference","module":"@abp/ng.core","name":"PermissionGuard","line":22,"character":29},{"__symbolic":"reference","name":"ɵbq"}],"children":[{"path":"roles","component":{"__symbolic":"reference","module":"@abp/ng.core","name":"ReplaceableRouteContainerComponent","line":26,"character":19},"data":{"requiredPolicy":"AbpIdentity.Roles","replaceableComponent":{"key":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"Roles"},"defaultComponent":{"__symbolic":"reference","name":"ɵa"}}}},{"path":"users","component":{"__symbolic":"reference","module":"@abp/ng.core","name":"ReplaceableRouteContainerComponent","line":37,"character":19},"data":{"requiredPolicy":"AbpIdentity.Users","replaceableComponent":{"key":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"Users"},"defaultComponent":{"__symbolic":"reference","name":"ɵbd"}}}},{"path":"claim-types","component":{"__symbolic":"reference","module":"@abp/ng.core","name":"ReplaceableRouteContainerComponent","line":48,"character":19},"data":{"requiredPolicy":"AbpIdentity.ClaimTypes","replaceableComponent":{"key":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"Claims"},"defaultComponent":{"__symbolic":"reference","name":"ɵbf"}}}},{"path":"organization-units","component":{"__symbolic":"reference","module":"@abp/ng.core","name":"ReplaceableRouteContainerComponent","line":59,"character":19},"data":{"requiredPolicy":"AbpIdentity.OrganizationUnits","replaceableComponent":{"key":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"OrganizationUnits"},"defaultComponent":{"__symbolic":"reference","name":"ɵbg"}}}},{"path":"security-logs","component":{"__symbolic":"reference","module":"@abp/ng.core","name":"ReplaceableRouteContainerComponent","line":70,"character":19},"data":{"requiredPolicy":"AbpIdentity.SecurityLogs","replaceableComponent":{"key":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵb"},"member":"SecurityLogs"},"defaultComponent":{"__symbolic":"reference","name":"ɵbn"}}}}]}]]}],"exports":[{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":85,"character":12}]}]}],"members":{}},"ɵbq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":33,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":35,"character":32}]}],"canActivate":[{"__symbolic":"method"}]}},"ɵbr":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":90,"character":55},"arguments":["IDENTITY_ENTITY_ACTION_CONTRIBUTORS"]},"ɵbs":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":94,"character":56},"arguments":["IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS"]},"ɵbt":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":98,"character":53},"arguments":["IDENTITY_ENTITY_PROP_CONTRIBUTORS"]},"ɵbu":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":102,"character":58},"arguments":["IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS"]},"ɵbv":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":106,"character":56},"arguments":["IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS"]}},"origins":{"IdentityModule":"./lib/identity.module","ɵa":"./lib/components/roles/roles.component","ɵb":"./lib/enums/components","ɵc":"./lib/states/identity.state","ɵd":"./lib/proxy/identity/identity-role.service","ɵe":"./lib/proxy/identity/identity-user.service","ɵf":"./lib/proxy/identity/identity-claim-type.service","ɵg":"./lib/proxy/identity/organization-unit.service","ɵh":"./lib/actions/identity.actions","ɵi":"./lib/actions/identity.actions","ɵj":"./lib/actions/identity.actions","ɵk":"./lib/actions/identity.actions","ɵl":"./lib/actions/identity.actions","ɵm":"./lib/actions/identity.actions","ɵn":"./lib/actions/identity.actions","ɵo":"./lib/actions/identity.actions","ɵp":"./lib/actions/identity.actions","ɵq":"./lib/actions/identity.actions","ɵr":"./lib/actions/identity.actions","ɵs":"./lib/actions/identity.actions","ɵt":"./lib/actions/identity.actions","ɵu":"./lib/actions/identity.actions","ɵv":"./lib/actions/identity.actions","ɵw":"./lib/actions/identity.actions","ɵx":"./lib/proxy/identity/models","ɵy":"./lib/proxy/identity/models","ɵz":"./lib/proxy/identity/models","ɵba":"./lib/proxy/identity/models","ɵbb":"./lib/proxy/identity/models","ɵbc":"./lib/proxy/identity/models","ɵbd":"./lib/components/users/users.component","ɵbe":"./lib/components/claim-modal/claim-modal.component","ɵbf":"./lib/components/claims/claims.component","ɵbg":"./lib/components/organization-units/organization-units.component","ɵbh":"./lib/components/organization-units/organization-members/organization-members.component","ɵbi":"./lib/components/organization-units/abstract-organization-unit/abstract-organization-unit.component","ɵbj":"./lib/components/organization-units/abstract-organization-unit/abstract-organization-unit.component","ɵbk":"./lib/components/organization-units/organization-members/organization-members-modal-body.component","ɵbl":"./lib/components/organization-units/organization-roles/organization-roles.component","ɵbm":"./lib/components/organization-units/organization-roles/organization-roles-modal-body.component","ɵbn":"./lib/components/security-logs/security-logs.component","ɵbo":"./lib/proxy/identity/identity-security-log.service","ɵbp":"./lib/identity-routing.module","ɵbq":"./lib/guards/extensions.guard","ɵbr":"./lib/tokens/extensions.token","ɵbs":"./lib/tokens/extensions.token","ɵbt":"./lib/tokens/extensions.token","ɵbu":"./lib/tokens/extensions.token","ɵbv":"./lib/tokens/extensions.token"},"importAs":"@volo/abp.ng.identity"}