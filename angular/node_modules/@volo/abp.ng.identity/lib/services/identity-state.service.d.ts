import { Store } from '@ngxs/store';
import { GetRoles, GetRoleById, DeleteRole, UpdateRole, GetClaimTypes, GetClaimTypeById, DeleteClaimType, CreateClaimType, GetUsers, GetUserById, DeleteUser, CreateRole, CreateUser, UpdateUser, GetUserRoles, UpdateClaimType } from '../actions/identity.actions';
export declare class IdentityStateService {
    private store;
    constructor(store: Store);
    getRoles(): import("../proxy/identity").IdentityRoleDto[];
    getRolesTotalCount(): number;
    getUsers(): import("../proxy/identity").IdentityUserDto[];
    getUsersTotalCount(): number;
    getClaimTypes(): import("../proxy/identity").ClaimTypeDto[];
    getClaimTypesTotalCount(): number;
    dispatchGetRoles(...args: ConstructorParameters<typeof GetRoles>): import("rxjs").Observable<any>;
    dispatchGetRoleById(...args: ConstructorParameters<typeof GetRoleById>): import("rxjs").Observable<any>;
    dispatchDeleteRole(...args: ConstructorParameters<typeof DeleteRole>): import("rxjs").Observable<any>;
    dispatchCreateRole(...args: ConstructorParameters<typeof CreateRole>): import("rxjs").Observable<any>;
    dispatchUpdateRole(...args: ConstructorParameters<typeof UpdateRole>): import("rxjs").Observable<any>;
    dispatchGetClaimTypes(...args: ConstructorParameters<typeof GetClaimTypes>): import("rxjs").Observable<any>;
    dispatchGetClaimTypeById(...args: ConstructorParameters<typeof GetClaimTypeById>): import("rxjs").Observable<any>;
    dispatchDeleteClaimType(...args: ConstructorParameters<typeof DeleteClaimType>): import("rxjs").Observable<any>;
    dispatchCreateClaimType(...args: ConstructorParameters<typeof CreateClaimType>): import("rxjs").Observable<any>;
    dispatchUpdateClaimType(...args: ConstructorParameters<typeof UpdateClaimType>): import("rxjs").Observable<any>;
    dispatchGetUsers(...args: ConstructorParameters<typeof GetUsers>): import("rxjs").Observable<any>;
    dispatchGetUserById(...args: ConstructorParameters<typeof GetUserById>): import("rxjs").Observable<any>;
    dispatchDeleteUser(...args: ConstructorParameters<typeof DeleteUser>): import("rxjs").Observable<any>;
    dispatchCreateUser(...args: ConstructorParameters<typeof CreateUser>): import("rxjs").Observable<any>;
    dispatchUpdateUser(...args: ConstructorParameters<typeof UpdateUser>): import("rxjs").Observable<any>;
    dispatchGetUserRoles(...args: ConstructorParameters<typeof GetUserRoles>): import("rxjs").Observable<any>;
}
