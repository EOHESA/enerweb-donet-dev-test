import { ConfigStateService, ListService, PagedResultDto } from '@abp/ng.core';
import { ConfirmationService, ToasterService } from '@abp/ng.theme.shared';
import { Injector, OnInit, TemplateRef, TrackByFunction } from '@angular/core';
import { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';
import { Store } from '@ngxs/store';
import { Observable } from 'rxjs';
import { IdentityUserService } from '../../proxy/identity/identity-user.service';
import { GetIdentityUsersInput, IdentityRoleDto, IdentityUserDto, OrganizationUnitDto, OrganizationUnitWithDetailsDto } from '../../proxy/identity/models';
declare enum UserLockDurationType {
    Second = 1,
    Minute = 60,
    Hour = 3600,
    Day = 86400,
    Month = 2592000,
    Year = 31536000
}
export declare class UsersComponent implements OnInit {
    readonly list: ListService<GetIdentityUsersInput>;
    confirmationService: ConfirmationService;
    userService: IdentityUserService;
    fb: FormBuilder;
    store: Store;
    toasterService: ToasterService;
    injector: Injector;
    configState: ConfigStateService;
    data$: Observable<IdentityUserDto[]>;
    totalCount$: Observable<number>;
    modalContent: TemplateRef<any>;
    form: FormGroup;
    setPasswordForm: FormGroup;
    selected: IdentityUserDto;
    selectedUserRoles: IdentityRoleDto[];
    roles: IdentityRoleDto[];
    selectedOrganizationUnits: OrganizationUnitDto[];
    visiblePermissions: boolean;
    providerKey: string;
    isModalVisible: boolean;
    isSetPasswordModalVisible: boolean;
    modalBusy: boolean;
    visibleClaims: boolean;
    claimSubject: {
        id: string;
        type: 'roles' | 'users';
    };
    organization: {
        response: PagedResultDto<OrganizationUnitWithDetailsDto>;
        nodes: any[];
        checkedKeys: any[];
        expandedKeys: any[];
        selectFn: () => boolean;
    };
    isLockModalVisible: boolean;
    twoFactor: {
        isModalVisible: boolean;
        checkboxValue: boolean;
        isOptional: boolean;
    };
    lockForm: FormGroup;
    lockDurationTypeOptions: import("@abp/ng.core").Éµj.Option<typeof UserLockDurationType>[];
    trackByFn: TrackByFunction<AbstractControl>;
    get roleGroups(): FormGroup[];
    onVisiblePermissionChange: (value: boolean) => void;
    constructor(list: ListService<GetIdentityUsersInput>, confirmationService: ConfirmationService, userService: IdentityUserService, fb: FormBuilder, store: Store, toasterService: ToasterService, injector: Injector, configState: ConfigStateService);
    ngOnInit(): void;
    private hookToQuery;
    buildForm(): void;
    openModal(): void;
    onAdd(): void;
    onEdit(id: string): void;
    save(): void;
    delete(id: string, userName: string): void;
    onManageClaims(id: string): void;
    unlock(id: string): void;
    openPermissionsModal(providerKey: string): void;
    setPassword(): void;
    generatePassword(): void;
    lock(): void;
    setTwoFactor(): void;
}
export {};
