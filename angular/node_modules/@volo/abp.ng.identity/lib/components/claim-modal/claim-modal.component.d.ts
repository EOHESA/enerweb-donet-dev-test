import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { Store } from '@ngxs/store';
import { IdentityRoleService } from '../../proxy/identity/identity-role.service';
import { IdentityUserService } from '../../proxy/identity/identity-user.service';
import { IdentityRoleClaimDto, IdentityUserClaimDto } from '../../proxy/identity/models';
declare type Claim = IdentityUserClaimDto | IdentityRoleClaimDto;
export declare class ClaimModalComponent implements OnChanges, OnInit {
    private roleService;
    private userService;
    private store;
    protected _visible: any;
    subject: {
        id: string;
        type: 'roles' | 'users';
    };
    get visible(): boolean;
    set visible(value: boolean);
    visibleChange: EventEmitter<boolean>;
    modalBusy: boolean;
    claimTypes: {
        name: string;
    }[];
    subjectClaims: Claim[];
    newClaimType: string;
    newClaimValue: string;
    service: IdentityRoleService | IdentityUserService;
    constructor(roleService: IdentityRoleService, userService: IdentityUserService, store: Store);
    ngOnChanges({ visible, subject }: SimpleChanges): void;
    ngOnInit(): void;
    initModal(): void;
    private getClaimTypeNames;
    private getSubjectClaims;
    addClaim(): void;
    removeClaim(index: any): void;
    save(): void;
}
export {};
