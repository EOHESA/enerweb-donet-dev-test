import type { GetAvailableRolesInput, GetAvailableUsersInput, GetIdentityUsersInput, GetOrganizationUnitInput, IdentityRoleDto, IdentityUserDto, OrganizationUnitCreateDto, OrganizationUnitMoveInput, OrganizationUnitRoleInput, OrganizationUnitUpdateDto, OrganizationUnitUserInput, OrganizationUnitWithDetailsDto } from './models';
import { RestService } from '@abp/ng.core';
import type { ListResultDto, PagedAndSortedResultRequestDto, PagedResultDto } from '@abp/ng.core';
export declare class OrganizationUnitService {
    private restService;
    apiName: string;
    addMembers: (id: string, input: OrganizationUnitUserInput) => import("rxjs").Observable<void>;
    addRoles: (id: string, input: OrganizationUnitRoleInput) => import("rxjs").Observable<void>;
    create: (input: OrganizationUnitCreateDto) => import("rxjs").Observable<OrganizationUnitWithDetailsDto>;
    delete: (id: string) => import("rxjs").Observable<void>;
    get: (id: string) => import("rxjs").Observable<OrganizationUnitWithDetailsDto>;
    getAvailableRoles: (input: GetAvailableRolesInput) => import("rxjs").Observable<PagedResultDto<IdentityRoleDto>>;
    getAvailableUsers: (input: GetAvailableUsersInput) => import("rxjs").Observable<PagedResultDto<IdentityUserDto>>;
    getList: (input: GetOrganizationUnitInput) => import("rxjs").Observable<PagedResultDto<OrganizationUnitWithDetailsDto>>;
    getListAll: () => import("rxjs").Observable<ListResultDto<OrganizationUnitWithDetailsDto>>;
    getMembers: (id: string, input: GetIdentityUsersInput) => import("rxjs").Observable<PagedResultDto<IdentityUserDto>>;
    getRoles: (id: string, input: PagedAndSortedResultRequestDto) => import("rxjs").Observable<PagedResultDto<IdentityRoleDto>>;
    move: (id: string, input: OrganizationUnitMoveInput) => import("rxjs").Observable<void>;
    removeMember: (id: string, memberId: string) => import("rxjs").Observable<void>;
    removeRole: (id: string, roleId: string) => import("rxjs").Observable<void>;
    update: (id: string, input: OrganizationUnitUpdateDto) => import("rxjs").Observable<OrganizationUnitWithDetailsDto>;
    constructor(restService: RestService);
}
