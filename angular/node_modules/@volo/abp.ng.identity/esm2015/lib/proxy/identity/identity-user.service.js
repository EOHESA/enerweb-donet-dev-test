import{RestService}from"@abp/ng.core";import{Injectable}from"@angular/core";import*as i0 from"@angular/core";import*as i1 from"@abp/ng.core";export class IdentityUserService{constructor(e){this.restService=e,this.apiName="AbpIdentity",this.create=e=>this.restService.request({method:"POST",url:"/api/identity/users",body:e},{apiName:this.apiName}),this.delete=e=>this.restService.request({method:"DELETE",url:`/api/identity/users/${e}`},{apiName:this.apiName}),this.findByEmail=e=>this.restService.request({method:"GET",url:`/api/identity/users/by-email/${e}`},{apiName:this.apiName}),this.findByUsername=e=>this.restService.request({method:"GET",url:`/api/identity/users/by-username/${e}`},{apiName:this.apiName}),this.get=e=>this.restService.request({method:"GET",url:`/api/identity/users/${e}`},{apiName:this.apiName}),this.getAllClaimTypes=()=>this.restService.request({method:"GET",url:"/api/identity/users/all-claim-types"},{apiName:this.apiName}),this.getAssignableRoles=()=>this.restService.request({method:"GET",url:"/api/identity/users/assignable-roles"},{apiName:this.apiName}),this.getAvailableOrganizationUnits=()=>this.restService.request({method:"GET",url:"/api/identity/users/available-organization-units"},{apiName:this.apiName}),this.getClaims=e=>this.restService.request({method:"GET",url:`/api/identity/users/${e}/claims`},{apiName:this.apiName}),this.getList=e=>this.restService.request({method:"GET",url:"/api/identity/users",params:{filter:e.filter,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName}),this.getOrganizationUnits=e=>this.restService.request({method:"GET",url:`/api/identity/users/${e}/organization-units`},{apiName:this.apiName}),this.getRoles=e=>this.restService.request({method:"GET",url:`/api/identity/users/${e}/roles`},{apiName:this.apiName}),this.getTwoFactorEnabled=e=>this.restService.request({method:"GET",url:`/api/identity/users/${e}/two-factor-enabled`},{apiName:this.apiName}),this.lock=(e,i)=>this.restService.request({method:"PUT",url:`/api/identity/users/${e}/lock/${i}`},{apiName:this.apiName}),this.setTwoFactorEnabled=(e,i)=>this.restService.request({method:"PUT",url:`/api/identity/users/${e}/two-factor/${i}`},{apiName:this.apiName}),this.unlock=e=>this.restService.request({method:"PUT",url:`/api/identity/users/${e}/unlock`},{apiName:this.apiName}),this.update=(e,i)=>this.restService.request({method:"PUT",url:`/api/identity/users/${e}`,body:i},{apiName:this.apiName}),this.updateClaims=(e,i)=>this.restService.request({method:"PUT",url:`/api/identity/users/${e}/claims`,body:i},{apiName:this.apiName}),this.updatePassword=(e,i)=>this.restService.request({method:"PUT",url:`/api/identity/users/${e}/change-password`,body:i},{apiName:this.apiName}),this.updateRoles=(e,i)=>this.restService.request({method:"PUT",url:`/api/identity/users/${e}/roles`,body:i},{apiName:this.apiName})}}IdentityUserService.ɵprov=i0.ɵɵdefineInjectable({factory:function(){return new IdentityUserService(i0.ɵɵinject(i1.RestService))},token:IdentityUserService,providedIn:"root"}),IdentityUserService.decorators=[{type:Injectable,args:[{providedIn:"root"}]}],IdentityUserService.ctorParameters=()=>[{type:RestService}];