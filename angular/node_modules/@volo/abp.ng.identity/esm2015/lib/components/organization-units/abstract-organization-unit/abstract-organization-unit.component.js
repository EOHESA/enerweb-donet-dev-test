import{ListService}from"@abp/ng.core";import{Confirmation,ConfirmationService}from"@abp/ng.theme.shared";import{Component,InjectionToken,Injector,Input}from"@angular/core";import{finalize}from"rxjs/operators";import{OrganizationUnitService}from"../../../proxy/identity/organization-unit.service";export const ORGANIZATION_UNIT_CONFIG=new InjectionToken("ORGANIZATION_UNIT_CONFIG");export class AbstractOrganizationUnitComponent{constructor(i){this.injector=i,this.currentOrganizationUnits={items:[]},this.checkedUnits={},this.isCheckboxDisabled=i=>this.currentOrganizationUnits.items.findIndex(t=>t.id===i)>-1,this.list=i.get(ListService),this.list.maxResultCount=1e3,this.organizationUnitService=i.get(OrganizationUnitService),this.confirmation=i.get(ConfirmationService),this.config=i.get(ORGANIZATION_UNIT_CONFIG,{})}ngOnChanges({selectedOrganizationUnit:i}){(null==i?void 0:i.firstChange)?this.hookToQuery():(null==i?void 0:i.currentValue)&&this.list.get()}hookToQuery(){this.list.hookToQuery(i=>this.organizationUnitService[this.config.getCurrentUnitsMethodName](this.selectedOrganizationUnit.id,i)).subscribe(i=>{this.currentOrganizationUnits=i,this.checkedUnits={},i.items.forEach(i=>{this.checkedUnits[i.id]=!0})})}addUnits(){this.isModalBusy=!0,this.organizationUnitService[this.config.addUnitsMethodName](this.selectedOrganizationUnit.id,{[this.config.addUnitsBodyPropName]:Object.keys(this.checkedUnits)}).pipe(finalize(()=>this.isModalBusy=!1)).subscribe(()=>{this.isModalVisible=!1,this.list.get()})}delete(i,t){this.confirmation.warn(this.config.deletionLocalizationKey,"AbpIdentity::AreYouSure",{messageLocalizationParams:[t,this.selectedOrganizationUnit.displayName]}).subscribe(t=>{t===Confirmation.Status.confirm&&this.organizationUnitService[this.config.deleteMethodName](this.selectedOrganizationUnit.id,i).subscribe(()=>this.list.get())})}openModal(){this.isModalVisible=!0}}AbstractOrganizationUnitComponent.decorators=[{type:Component,args:[{template:""}]}],AbstractOrganizationUnitComponent.ctorParameters=()=>[{type:Injector}],AbstractOrganizationUnitComponent.propDecorators={selectedOrganizationUnit:[{type:Input}]};