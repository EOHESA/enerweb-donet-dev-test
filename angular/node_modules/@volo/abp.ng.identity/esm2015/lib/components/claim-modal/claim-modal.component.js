import{Component,EventEmitter,Input,Output}from"@angular/core";import{Store}from"@ngxs/store";import{finalize,take}from"rxjs/operators";import{IdentityRoleService}from"../../proxy/identity/identity-role.service";import{IdentityUserService}from"../../proxy/identity/identity-user.service";export class ClaimModalComponent{constructor(e,t,i){this.roleService=e,this.userService=t,this.store=i,this.visibleChange=new EventEmitter,this.modalBusy=!1}get visible(){return this._visible}set visible(e){this._visible!==e&&(this._visible=e,this.visibleChange.emit(e))}ngOnChanges({visible:e,subject:t}){t&&t.currentValue&&(this.service="roles"===t.currentValue.type?this.roleService:this.userService),e&&(e.currentValue?this.initModal():(this.newClaimType=null,this.newClaimValue=null,this.subjectClaims=null))}ngOnInit(){}initModal(){this.getClaimTypeNames(),this.getSubjectClaims(this.subject)}getClaimTypeNames(){this.service.getAllClaimTypes().subscribe(e=>this.claimTypes=e)}getSubjectClaims(e){this.service.getClaims(e.id).pipe(take(1)).subscribe(e=>this.subjectClaims=e)}addClaim(){if(!this.newClaimType||!this.newClaimValue)return;let e={claimType:this.newClaimType,claimValue:this.newClaimValue};const t="roles"===this.subject.type?"roleId":"userId";e=Object.assign({[t]:this.subject.id},e),this.subjectClaims.push(e),this.newClaimType="",this.newClaimValue=""}removeClaim(e){this.subjectClaims[e]&&(this.subjectClaims=this.subjectClaims.filter((t,i)=>i!==e))}save(){this.modalBusy||(this.modalBusy=!0,this.service.updateClaims(this.subject.id,this.subjectClaims).pipe(take(1),finalize(()=>this.modalBusy=!1)).subscribe(()=>this.visible=!1))}}ClaimModalComponent.decorators=[{type:Component,args:[{selector:"abp-claim-modal",template:'<abp-modal size="md" [(visible)]="visible" [busy]="modalBusy">\r\n  <ng-template #abpHeader>\r\n    <h5 class="modal-title">{{ \'AbpIdentity::Claims\' | abpLocalization }}</h5>\r\n  </ng-template>\r\n  <ng-template #abpBody>\r\n    <form (ngSubmit)="addClaim()">\r\n      <div class="form-row">\r\n        <div class="col col-sm-6">\r\n          <div class="form-group">\r\n            <label for="claimTypeSelect">{{ \'AbpIdentity::Type\' | abpLocalization }}</label\r\n            ><select\r\n              autofocus\r\n              id="claimTypeSelect"\r\n              class="custom-select form-control"\r\n              [(ngModel)]="newClaimType"\r\n              [ngModelOptions]="{ standalone: true }"\r\n            >\r\n              <option *ngFor="let type of claimTypes" [ngValue]="type.name">{{ type.name }}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class="col col-sm-6">\r\n          <div class="form-group">\r\n            <label for="newClaimValue">Value</label>\r\n            <input\r\n              required\r\n              id="newClaimValue"\r\n              type="text"\r\n              class="form-control"\r\n              [(ngModel)]="newClaimValue"\r\n              [ngModelOptions]="{ standalone: true }"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class="col col-sm-12 align-self-center">\r\n          <button class="btn btn-success btn-block" type="button" (click)="addClaim()">\r\n            <i class="fa fa-plus"></i>\r\n            {{ \'AbpIdentity::AddClaim\' | abpLocalization }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <hr class="my-4" />\r\n    <div class="willBeHidden" *ngIf="subjectClaims && subjectClaims.length">\r\n      <div class="input-group mb-3" *ngFor="let claim of subjectClaims; let i = index">\r\n        <div class="input-group-prepend">\r\n          <label class="input-group-text mw-100 fs-9">{{ claim.claimType }}</label>\r\n        </div>\r\n        <input type="text" class="form-control" [(ngModel)]="subjectClaims[i].claimValue" required />\r\n        <div class="input-group-append">\r\n          <button class="btn btn-danger deleteClaim" (click)="removeClaim(i)"><i class="fa fa-trash"></i></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template #abpFooter>\r\n    <button type="button" class="btn btn-secondary" #abpClose>{{ \'AbpIdentity::Cancel\' | abpLocalization }}</button>\r\n    <abp-button iconClass="fa fa-check" (click)="save()">{{ \'AbpIdentity::Save\' | abpLocalization }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n'}]}],ClaimModalComponent.ctorParameters=()=>[{type:IdentityRoleService},{type:IdentityUserService},{type:Store}],ClaimModalComponent.propDecorators={subject:[{type:Input}],visible:[{type:Input}],visibleChange:[{type:Output}]};