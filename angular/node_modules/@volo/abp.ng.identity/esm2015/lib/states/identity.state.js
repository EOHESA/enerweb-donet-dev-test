import{__decorate,__rest}from"tslib";import{Injectable}from"@angular/core";import{Action,Selector,State}from"@ngxs/store";import{pluck,tap}from"rxjs/operators";import{CreateClaimType,CreateRole,CreateUser,DeleteClaimType,DeleteRole,DeleteUser,GetClaimTypeById,GetClaimTypes,GetOrganizationUnits,GetRoles,GetUserRoles,GetUsers,UnlockUser,UpdateClaimType,UpdateRole,UpdateUser}from"../actions/identity.actions";import{IdentityClaimTypeService}from"../proxy/identity/identity-claim-type.service";import{IdentityRoleService}from"../proxy/identity/identity-role.service";import{IdentityUserService}from"../proxy/identity/identity-user.service";import{OrganizationUnitService}from"../proxy/identity/organization-unit.service";let IdentityState=class{constructor(e,t,r,i){this.roleService=e,this.userService=t,this.claimTypeService=r,this.organizationUnitService=i}static getRoles({roles:e}){return e.items||[]}static getRolesTotalCount({roles:e}){return e.totalCount||0}static getUsers({users:e}){return e.items||[]}static getUsersTotalCount({users:e}){return e.totalCount||0}static getClaimTypes({claims:e}){return e.items||[]}static getClaimTypesTotalCount({claims:e}){return e.totalCount||0}getRoles({patchState:e},{payload:t}){return this.roleService.getList(t).pipe(tap(t=>e({roles:t})))}deleteRole(e,{payload:t}){return this.roleService.delete(t)}addRole(e,{payload:t}){return this.roleService.create(t)}updateRole(e,t){var r=t.payload,{id:i}=r,a=__rest(r,["id"]);return this.roleService.update(i,a)}getUsers({patchState:e},{payload:t}){return this.userService.getList(t).pipe(tap(t=>e({users:t})))}deleteUser(e,{payload:t}){return this.userService.delete(t)}createUser(e,{payload:t}){return this.userService.create(t)}updateUser(e,t){var r=t.payload,{id:i}=r,a=__rest(r,["id"]);return this.userService.update(i,a)}unlockUser(e,{id:t}){return this.userService.unlock(t)}getUserRoles({patchState:e},{payload:t}){return this.userService.getRoles(t).pipe(pluck("items"),tap(t=>e({selectedUserRoles:t})))}getClaimTypes({patchState:e},{payload:t}){return this.claimTypeService.getList(t).pipe(tap(t=>e({claims:t})))}getClaimType({patchState:e},{payload:t}){return this.claimTypeService.get(t).pipe(tap(t=>e({selectedClaim:t})))}deleteClaimType(e,{payload:t}){return this.claimTypeService.delete(t)}createClaimType(e,{payload:t}){return this.claimTypeService.create(t)}updateClaimType(e,t){var r=t.payload,{id:i}=r,a=__rest(r,["id"]);return this.claimTypeService.update(i,a)}getOrganizationUnits({patchState:e}){return this.organizationUnitService.getListAll().pipe(tap(t=>e({organizationUnits:t})))}};IdentityState.decorators=[{type:Injectable}],IdentityState.ctorParameters=()=>[{type:IdentityRoleService},{type:IdentityUserService},{type:IdentityClaimTypeService},{type:OrganizationUnitService}],__decorate([Action(GetRoles)],IdentityState.prototype,"getRoles",null),__decorate([Action(DeleteRole)],IdentityState.prototype,"deleteRole",null),__decorate([Action(CreateRole)],IdentityState.prototype,"addRole",null),__decorate([Action(UpdateRole)],IdentityState.prototype,"updateRole",null),__decorate([Action(GetUsers)],IdentityState.prototype,"getUsers",null),__decorate([Action(DeleteUser)],IdentityState.prototype,"deleteUser",null),__decorate([Action(CreateUser)],IdentityState.prototype,"createUser",null),__decorate([Action(UpdateUser)],IdentityState.prototype,"updateUser",null),__decorate([Action(UnlockUser)],IdentityState.prototype,"unlockUser",null),__decorate([Action(GetUserRoles)],IdentityState.prototype,"getUserRoles",null),__decorate([Action(GetClaimTypes)],IdentityState.prototype,"getClaimTypes",null),__decorate([Action(GetClaimTypeById)],IdentityState.prototype,"getClaimType",null),__decorate([Action(DeleteClaimType)],IdentityState.prototype,"deleteClaimType",null),__decorate([Action(CreateClaimType)],IdentityState.prototype,"createClaimType",null),__decorate([Action(UpdateClaimType)],IdentityState.prototype,"updateClaimType",null),__decorate([Action(GetOrganizationUnits)],IdentityState.prototype,"getOrganizationUnits",null),__decorate([Selector()],IdentityState,"getRoles",null),__decorate([Selector()],IdentityState,"getRolesTotalCount",null),__decorate([Selector()],IdentityState,"getUsers",null),__decorate([Selector()],IdentityState,"getUsersTotalCount",null),__decorate([Selector()],IdentityState,"getClaimTypes",null),__decorate([Selector()],IdentityState,"getClaimTypesTotalCount",null),IdentityState=__decorate([State({name:"IdentityState",defaults:{roles:{},users:{},claims:{},selectedClaim:{},selectedUserRoles:[],organizationUnits:{}}})],IdentityState);export{IdentityState};