import { StateContext } from '@ngxs/store';
import { GetAuditLogs, GetAverageExecutionDurationPerDay, GetErrorRate } from '../actions/audit-logging.actions';
import { AuditLogging } from '../models/audit-logging';
import { AuditLogsService } from '../proxy/audit-logging/audit-logs.service';
import { AuditLogDto } from '../proxy/audit-logging/models';
export declare class AuditLoggingState {
    private service;
    static get({ result }: AuditLogging.State): AuditLogDto[];
    static getTotalCount({ result }: AuditLogging.State): number;
    static getAverageExecutionStatistics({ averageExecutionStatistics }: AuditLogging.State): Record<string, number>;
    static getErrorRateStatistics({ errorRateStatistics }: AuditLogging.State): Record<string, number>;
    constructor(service: AuditLogsService);
    get({ patchState }: StateContext<AuditLogging.State>, { payload }: GetAuditLogs): import("rxjs").Observable<import("@abp/ng.core").PagedResultDto<AuditLogDto>>;
    getAverageExecutionData({ patchState }: StateContext<AuditLogging.State>, { payload }: GetAverageExecutionDurationPerDay): import("rxjs").Observable<import("../proxy/audit-logging/models").GetAverageExecutionDurationPerDayOutput>;
    getErrorRate({ patchState }: StateContext<AuditLogging.State>, { payload }: GetErrorRate): import("rxjs").Observable<import("../proxy/audit-logging/models").GetErrorRateOutput>;
}
