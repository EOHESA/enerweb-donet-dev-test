!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@volo/abp.ng.audit-logging"),require("@volo/abp.commercial.ng.ui")):"function"==typeof define&&define.amd?define("@volo/abp.ng.audit-logging/config",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@volo/abp.ng.audit-logging","@volo/abp.commercial.ng.ui"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).volo=e.volo||{},e.volo.abp=e.volo.abp||{},e.volo.abp.ng=e.volo.abp.ng||{},e.volo.abp.ng["audit-logging"]=e.volo.abp.ng["audit-logging"]||{},e.volo.abp.ng["audit-logging"].config={}),e.i2,e.ng_theme_shared,e.ng.core,e.volo.abp.ng["audit-logging"],e.abp_commercial_ng_ui)}(this,(function(e,t,n,o,i,a){"use strict";var r=function(){function e(e){var n;this.track=e,this.isCollapsed=!1,this.colors=((n={})[i.EntityChangeType.Created]="success",n[i.EntityChangeType.Updated]="info",n[i.EntityChangeType.Deleted]="danger",n),this.uuid=t.uuid()}return Object.defineProperty(e.prototype,"itemWithUserName",{set:function(e){this.changeType=i.EntityChangeType[e.entityChange.changeType],this.color=this.colors[e.entityChange.changeType],this.userName=e.userName,this.entityChange=e.entityChange},enumerable:!1,configurable:!0}),e.prototype.getPropColor=function(e){return this.entityChange.changeType===i.EntityChangeType.Updated&&e.newValue!==e.originalValue?"red":void 0},e.prototype.getInterpolationParams=function(e){return[this.changeType,e,this.userName]},e}();r.decorators=[{type:o.Component,args:[{selector:"abp-entity-change-details",template:'<div\r\n  class="mb-3 border border-dark rounded"\r\n  *ngIf="getInterpolationParams(entityChange.changeTime | date: \'medium\') as params"\r\n>\r\n  <button\r\n    type="button"\r\n    class="btn btn-{{ color }} btn-block"\r\n    (click)="isCollapsed = !isCollapsed"\r\n    [attr.aria-expanded]="!isCollapsed"\r\n    [attr.aria-controls]="uuid"\r\n  >\r\n    {{ \'AbpAuditLogging::DaysAgoWithUserTitle\' | abpLocalization: params }}\r\n  </button>\r\n  <div [id]="uuid" [@collapse]="isCollapsed ? \'collapsed\' : \'expanded\'">\r\n    <div class="m-3">\r\n      <table class="table table-striped">\r\n        <thead>\r\n          <tr>\r\n            <th>{{ \'AbpAuditLogging::PropertyName\' | abpLocalization }}</th>\r\n            <th>{{ \'AbpAuditLogging::OriginalValue\' | abpLocalization }}</th>\r\n            <th>{{ \'AbpAuditLogging::NewValue\' | abpLocalization }}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor="let prop of entityChange.propertyChanges; trackBy: track.by(\'id\')">\r\n            <td>{{ prop.propertyName }}</td>\r\n            <td>{{ prop.originalValue }}</td>\r\n            <td [style.color]="getPropColor(prop)">{{ prop.newValue }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n',animations:[n.collapse]}]}],r.ctorParameters=function(){return[{type:t.TrackByService}]},r.propDecorators={itemWithUserName:[{type:o.Input}],isCollapsed:[{type:o.Input}]};var s=function(e,t){this.cdRef=e,this.track=t,this.history=[],this.visible=!1};s.decorators=[{type:o.Component,args:[{selector:"abp-entity-change-modal",template:'<abp-modal [(visible)]="visible">\r\n  <ng-template #abpHeader>\r\n    <h5 class="modal-title">\r\n      {{ entityTypeFullName }}\r\n      <br />\r\n      <span style="font-size:small">({{ entityId }})</span>\r\n    </h5>\r\n  </ng-template>\r\n  <ng-template #abpBody>\r\n    <ng-container *ngIf="history.length; else noChanges">\r\n      <abp-entity-change-details\r\n        *ngFor="let change of history; first as f; trackBy: track.byDeep(\'entityChange\', \'id\')"\r\n        [itemWithUserName]="change"\r\n        [isCollapsed]="!f"\r\n      ></abp-entity-change-details>\r\n    </ng-container>\r\n\r\n    <ng-template #noChanges\r\n      ><div class="text-center">\r\n        {{ \'AbpAuditLogging::NoChanges\' | abpLocalization }}\r\n      </div></ng-template\r\n    >\r\n  </ng-template>\r\n  <ng-template #abpFooter>\r\n    <button class="btn btn-secondary" #abpClose>\r\n      {{ \'AbpAuditLogging::Close\' | abpLocalization }}\r\n    </button>\r\n  </ng-template>\r\n</abp-modal>\r\n',changeDetection:o.ChangeDetectionStrategy.OnPush}]}],s.ctorParameters=function(){return[{type:o.ChangeDetectorRef},{type:t.TrackByService}]};var l=function(){function e(e,t){this.auditLogsService=e,this.contentProjectionService=t,this.projectModal()}return e.prototype.projectModal=function(){this.modalRef=this.contentProjectionService.projectContent(t.PROJECTION_STRATEGY.AppendComponentToBody(s)),this.modalRef.changeDetectorRef.detectChanges()},e.prototype.detectChanges=function(){this.modalRef.changeDetectorRef.detectChanges(),this.modalRef.instance.cdRef.detectChanges()},e.prototype.showDetails=function(e){var t=this;this.auditLogsService.getEntityChangeWithUsername(e).subscribe((function(e){t.modalRef.instance.entityId=e.entityChange.entityId,t.modalRef.instance.entityTypeFullName=e.entityChange.entityTypeFullName,t.modalRef.instance.history=[e].filter(Boolean),t.modalRef.instance.visible=!0,t.detectChanges()}))},e.prototype.showHistory=function(e,t){var n=this;this.auditLogsService.getEntityChangesWithUsername({entityId:e,entityTypeFullName:t}).subscribe((function(o){n.modalRef.instance.entityId=e,n.modalRef.instance.entityTypeFullName=t,n.modalRef.instance.history=o,n.modalRef.instance.visible=!0,n.detectChanges()}))},e}();l.ɵprov=o.ɵɵdefineInjectable({factory:function(){return new l(o.ɵɵinject(i.AuditLogsService),o.ɵɵinject(t.ContentProjectionService))},token:l,providedIn:"root"}),l.decorators=[{type:o.Injectable,args:[{providedIn:"root"}]}],l.ctorParameters=function(){return[{type:i.AuditLogsService},{type:t.ContentProjectionService}]};var p=[{provide:i.SHOW_ENTITY_DETAILS,useFactory:c,deps:[l]}];function c(e){return e.showDetails.bind(e)}var d=[{provide:a.SHOW_ENTITY_HISTORY,useFactory:g,deps:[l]}];function g(e){return e.showHistory.bind(e)}var u=[{provide:o.APP_INITIALIZER,useFactory:h,deps:[t.RoutesService],multi:!0}];function h(e){return function(){e.add([{name:"AbpAuditLogging::Menu:AuditLogging",path:"/audit-logs",parentName:"AbpUiNavigation::Menu:Administration",layout:"application",iconClass:"fa fa-file-text",order:6,requiredPolicy:"AuditLogging.AuditLogs"}])}}var y=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[u,p,d]}},e}();y.decorators=[{type:o.NgModule,args:[{entryComponents:[s],declarations:[r,s],exports:[r,s],imports:[t.CoreModule,n.ThemeSharedModule]}]}],e.AUDIT_LOGGING_ROUTE_PROVIDERS=u,e.AuditLoggingConfigModule=y,e.ENTITY_DETAILS_PROVIDERS=p,e.ENTITY_HISTORY_PROVIDERS=d,e.EntityChangeDetailsComponent=r,e.EntityChangeModalComponent=s,e.EntityChangeModalService=l,e.bindShowDetails=c,e.bindShowHistory=g,e.configureRoutes=h,e.ɵa=s,e.ɵb=r,e.ɵc=u,e.ɵd=h,e.ɵe=p,e.ɵf=d,Object.defineProperty(e,"__esModule",{value:!0})}));