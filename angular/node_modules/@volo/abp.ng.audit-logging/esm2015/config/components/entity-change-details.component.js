import{TrackByService,uuid}from"@abp/ng.core";import{collapse}from"@abp/ng.theme.shared";import{Component,Input}from"@angular/core";import{EntityChangeType}from"@volo/abp.ng.audit-logging";export class EntityChangeDetailsComponent{constructor(t){this.track=t,this.isCollapsed=!1,this.colors={[EntityChangeType.Created]:"success",[EntityChangeType.Updated]:"info",[EntityChangeType.Deleted]:"danger"},this.uuid=uuid()}set itemWithUserName(t){this.changeType=EntityChangeType[t.entityChange.changeType],this.color=this.colors[t.entityChange.changeType],this.userName=t.userName,this.entityChange=t.entityChange}getPropColor(t){return this.entityChange.changeType===EntityChangeType.Updated&&t.newValue!==t.originalValue?"red":void 0}getInterpolationParams(t){return[this.changeType,t,this.userName]}}EntityChangeDetailsComponent.decorators=[{type:Component,args:[{selector:"abp-entity-change-details",template:'<div\r\n  class="mb-3 border border-dark rounded"\r\n  *ngIf="getInterpolationParams(entityChange.changeTime | date: \'medium\') as params"\r\n>\r\n  <button\r\n    type="button"\r\n    class="btn btn-{{ color }} btn-block"\r\n    (click)="isCollapsed = !isCollapsed"\r\n    [attr.aria-expanded]="!isCollapsed"\r\n    [attr.aria-controls]="uuid"\r\n  >\r\n    {{ \'AbpAuditLogging::DaysAgoWithUserTitle\' | abpLocalization: params }}\r\n  </button>\r\n  <div [id]="uuid" [@collapse]="isCollapsed ? \'collapsed\' : \'expanded\'">\r\n    <div class="m-3">\r\n      <table class="table table-striped">\r\n        <thead>\r\n          <tr>\r\n            <th>{{ \'AbpAuditLogging::PropertyName\' | abpLocalization }}</th>\r\n            <th>{{ \'AbpAuditLogging::OriginalValue\' | abpLocalization }}</th>\r\n            <th>{{ \'AbpAuditLogging::NewValue\' | abpLocalization }}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor="let prop of entityChange.propertyChanges; trackBy: track.by(\'id\')">\r\n            <td>{{ prop.propertyName }}</td>\r\n            <td>{{ prop.originalValue }}</td>\r\n            <td [style.color]="getPropColor(prop)">{{ prop.newValue }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n',animations:[collapse]}]}],EntityChangeDetailsComponent.ctorParameters=()=>[{type:TrackByService}],EntityChangeDetailsComponent.propDecorators={itemWithUserName:[{type:Input}],isCollapsed:[{type:Input}]};