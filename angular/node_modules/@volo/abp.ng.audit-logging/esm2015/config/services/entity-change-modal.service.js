import{ContentProjectionService,PROJECTION_STRATEGY}from"@abp/ng.core";import{Injectable}from"@angular/core";import{AuditLogsService}from"@volo/abp.ng.audit-logging";import{EntityChangeModalComponent}from"../components/entity-change-modal.component";import*as i0 from"@angular/core";import*as i1 from"@volo/abp.ng.audit-logging";import*as i2 from"@abp/ng.core";export class EntityChangeModalService{constructor(e,t){this.auditLogsService=e,this.contentProjectionService=t,this.projectModal()}projectModal(){this.modalRef=this.contentProjectionService.projectContent(PROJECTION_STRATEGY.AppendComponentToBody(EntityChangeModalComponent)),this.modalRef.changeDetectorRef.detectChanges()}detectChanges(){this.modalRef.changeDetectorRef.detectChanges(),this.modalRef.instance.cdRef.detectChanges()}showDetails(e){this.auditLogsService.getEntityChangeWithUsername(e).subscribe(e=>{this.modalRef.instance.entityId=e.entityChange.entityId,this.modalRef.instance.entityTypeFullName=e.entityChange.entityTypeFullName,this.modalRef.instance.history=[e].filter(Boolean),this.modalRef.instance.visible=!0,this.detectChanges()})}showHistory(e,t){this.auditLogsService.getEntityChangesWithUsername({entityId:e,entityTypeFullName:t}).subscribe(i=>{this.modalRef.instance.entityId=e,this.modalRef.instance.entityTypeFullName=t,this.modalRef.instance.history=i,this.modalRef.instance.visible=!0,this.detectChanges()})}}EntityChangeModalService.ɵprov=i0.ɵɵdefineInjectable({factory:function(){return new EntityChangeModalService(i0.ɵɵinject(i1.AuditLogsService),i0.ɵɵinject(i2.ContentProjectionService))},token:EntityChangeModalService,providedIn:"root"}),EntityChangeModalService.decorators=[{type:Injectable,args:[{providedIn:"root"}]}],EntityChangeModalService.ctorParameters=()=>[{type:AuditLogsService},{type:ContentProjectionService}];