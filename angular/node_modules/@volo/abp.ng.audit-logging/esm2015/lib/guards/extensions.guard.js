import{ConfigStateService}from"@abp/ng.core";import{ExtensionsService,getObjectExtensionEntitiesFromStore,mapEntitiesToContributors,mergeWithDefaultActions,mergeWithDefaultProps}from"@abp/ng.theme.shared/extensions";import{Injectable,Injector}from"@angular/core";import{map,mapTo,tap}from"rxjs/operators";import{AUDIT_LOGGING_ENTITY_ACTION_CONTRIBUTORS,AUDIT_LOGGING_ENTITY_PROP_CONTRIBUTORS,AUDIT_LOGGING_TOOLBAR_ACTION_CONTRIBUTORS,DEFAULT_AUDIT_LOGGING_ENTITY_ACTIONS,DEFAULT_AUDIT_LOGGING_ENTITY_PROPS,DEFAULT_AUDIT_LOGGING_TOOLBAR_ACTIONS}from"../tokens/extensions.token";export class AuditLoggingExtensionsGuard{constructor(t){this.injector=t}canActivate(){const t=this.injector.get(ExtensionsService),e=this.injector.get(AUDIT_LOGGING_ENTITY_ACTION_CONTRIBUTORS,null)||{},o=this.injector.get(AUDIT_LOGGING_TOOLBAR_ACTION_CONTRIBUTORS,null)||{},i=this.injector.get(AUDIT_LOGGING_ENTITY_PROP_CONTRIBUTORS,null)||{},n=this.injector.get(ConfigStateService);return getObjectExtensionEntitiesFromStore(n,"AuditLogging").pipe(map(t=>({"AuditLogging.AuditLogsComponent":t.AuditLog})),mapEntitiesToContributors(n,"AuditLogging"),tap(n=>{mergeWithDefaultActions(t.entityActions,DEFAULT_AUDIT_LOGGING_ENTITY_ACTIONS,e),mergeWithDefaultActions(t.toolbarActions,DEFAULT_AUDIT_LOGGING_TOOLBAR_ACTIONS,o),mergeWithDefaultProps(t.entityProps,DEFAULT_AUDIT_LOGGING_ENTITY_PROPS,n.prop,i)}),mapTo(!0))}}AuditLoggingExtensionsGuard.decorators=[{type:Injectable}],AuditLoggingExtensionsGuard.ctorParameters=()=>[{type:Injector}];