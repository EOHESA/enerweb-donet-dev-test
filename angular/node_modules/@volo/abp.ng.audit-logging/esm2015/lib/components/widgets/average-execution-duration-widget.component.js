import{__decorate}from"tslib";import{LocalizationService,PermissionService,SubscriptionService}from"@abp/ng.core";import{Component,Input,Output}from"@angular/core";import{Select,Store}from"@ngxs/store";import{BehaviorSubject}from"rxjs";import{GetAverageExecutionDurationPerDay}from"../../actions/audit-logging.actions";import{AuditLoggingState}from"../../states/audit-logging.state";export class AverageExecutionDurationWidgetComponent{constructor(t,i,e,a){this.store=t,this.localizationService=i,this.subscription=e,this.permissionService=a,this.initialized=new BehaviorSubject(this),this.width=273,this.height=136,this.chartData={},this.draw=t=>{this.permissionService.getGrantedPolicy("AuditLogging.AuditLogs")&&this.store.dispatch(new GetAverageExecutionDurationPerDay({startDate:t.startDate,endDate:t.endDate}))},this.listenToData()}initialize(t){this.chart=t}listenToData(){this.subscription.addOne(this.data$,t=>{if(!t||"{}"===JSON.stringify(t))return void(this.chartData={});const i=Object.keys(t);setTimeout(()=>{this.chartData={labels:i,datasets:[{label:this.localizationService.instant("AbpAuditLogging::AverageExecutionDurationInMilliseconds"),backgroundColor:"#fa6e6e",data:i.map(i=>t[i])}]},this.chart.refresh()},0)})}}AverageExecutionDurationWidgetComponent.decorators=[{type:Component,args:[{selector:"abp-average-execution-duration-widget",template:'\n    <div [abpPermission]="\'AuditLogging.AuditLogs\'" class="abp-widget-wrapper">\n      <div class="card">\n        <div class="card-header">\n          <h5 class="card-title">\n            {{ \'AbpAuditLogging::AverageExecutionDurationInLogsPerDay\' | abpLocalization }}\n          </h5>\n        </div>\n        <div class="card-body">\n          <div class="row">\n            <abp-chart\n              #chart\n              (initialized)="initialize($event)"\n              class="w-100"\n              type="bar"\n              [data]="chartData"\n              [width]="width"\n              [height]="height"\n            ></abp-chart>\n          </div>\n        </div>\n      </div>\n    </div>\n  ',providers:[SubscriptionService]}]}],AverageExecutionDurationWidgetComponent.ctorParameters=()=>[{type:Store},{type:LocalizationService},{type:SubscriptionService},{type:PermissionService}],AverageExecutionDurationWidgetComponent.propDecorators={initialized:[{type:Output}],width:[{type:Input}],height:[{type:Input}]},__decorate([Select(AuditLoggingState.getAverageExecutionStatistics)],AverageExecutionDurationWidgetComponent.prototype,"data$",void 0);