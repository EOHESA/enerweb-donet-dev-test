import{__decorate}from"tslib";import{PermissionService,SubscriptionService}from"@abp/ng.core";import{Component,Input,Output}from"@angular/core";import{Select,Store}from"@ngxs/store";import{BehaviorSubject}from"rxjs";import{GetErrorRate}from"../../actions/audit-logging.actions";import{AuditLoggingState}from"../../states/audit-logging.state";export class ErrorRateWidgetComponent{constructor(t,i,e){this.store=t,this.subscription=i,this.permissionService=e,this.initialized=new BehaviorSubject(this),this.width=273,this.height=136,this.chartData={},this.draw=t=>{this.permissionService.getGrantedPolicy("AuditLogging.AuditLogs")&&this.store.dispatch(new GetErrorRate({startDate:t.startDate,endDate:t.endDate}))},this.listenToData()}initialize(t){this.chart=t}listenToData(){this.subscription.addOne(this.data$,t=>{if(!t||"{}"===JSON.stringify(t))return void(this.chartData={});const i=Object.keys(t);setTimeout(()=>{this.chartData={labels:i,datasets:[{data:i.map(i=>t[i]),backgroundColor:["#d76e6e","#63ac44"]}]},this.chart.refresh()},0)})}}ErrorRateWidgetComponent.decorators=[{type:Component,args:[{selector:"abp-error-rate-widget",template:'\n    <div [abpPermission]="\'AuditLogging.AuditLogs\'" class="abp-widget-wrapper">\n      <div class="card">\n        <div class="card-header">\n          <h5 class="card-title">{{ \'AbpAuditLogging::ErrorRateInLogs\' | abpLocalization }}</h5>\n        </div>\n        <div class="card-body">\n          <div class="row">\n            <abp-chart\n              #chart\n              (initialized)="initialize($event)"\n              class="w-100"\n              type="pie"\n              [data]="chartData"\n              [width]="width"\n              [height]="height"\n            ></abp-chart>\n          </div>\n        </div>\n      </div>\n    </div>\n  ',providers:[SubscriptionService]}]}],ErrorRateWidgetComponent.ctorParameters=()=>[{type:Store},{type:SubscriptionService},{type:PermissionService}],ErrorRateWidgetComponent.propDecorators={initialized:[{type:Output}],width:[{type:Input}],height:[{type:Input}]},__decorate([Select(AuditLoggingState.getErrorRateStatistics)],ErrorRateWidgetComponent.prototype,"data$",void 0);