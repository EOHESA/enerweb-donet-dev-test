import{RestService}from"@abp/ng.core";import{Injectable}from"@angular/core";import*as i0 from"@angular/core";import*as i1 from"@abp/ng.core";export class AuditLogsService{constructor(t){this.restService=t,this.apiName="AbpAuditLogging",this.get=t=>this.restService.request({method:"GET",url:`/api/audit-logging/audit-logs/${t}`},{apiName:this.apiName}),this.getAverageExecutionDurationPerDay=t=>this.restService.request({method:"GET",url:"/api/audit-logging/audit-logs/statistics/average-execution-duration-per-day",params:{startDate:t.startDate,endDate:t.endDate}},{apiName:this.apiName}),this.getEntityChange=t=>this.restService.request({method:"GET",url:`/api/audit-logging/audit-logs/entity-changes/${t}`},{apiName:this.apiName}),this.getEntityChangeWithUsername=t=>this.restService.request({method:"GET",url:`/api/audit-logging/audit-logs/entity-change-with-username/${t}`},{apiName:this.apiName}),this.getEntityChanges=t=>this.restService.request({method:"GET",url:"/api/audit-logging/audit-logs/entity-changes",params:{auditLogId:t.auditLogId,entityChangeType:t.entityChangeType,entityId:t.entityId,entityTypeFullName:t.entityTypeFullName,startDate:t.startDate,endDate:t.endDate,sorting:t.sorting,skipCount:t.skipCount,maxResultCount:t.maxResultCount}},{apiName:this.apiName}),this.getEntityChangesWithUsername=t=>this.restService.request({method:"GET",url:"/api/audit-logging/audit-logs/entity-changes-with-username",params:{entityId:t.entityId,entityTypeFullName:t.entityTypeFullName}},{apiName:this.apiName}),this.getErrorRate=t=>this.restService.request({method:"GET",url:"/api/audit-logging/audit-logs/statistics/error-rate",params:{startDate:t.startDate,endDate:t.endDate}},{apiName:this.apiName}),this.getList=t=>this.restService.request({method:"GET",url:"/api/audit-logging/audit-logs",params:{url:t.url,userName:t.userName,applicationName:t.applicationName,correlationId:t.correlationId,httpMethod:t.httpMethod,httpStatusCode:t.httpStatusCode,maxExecutionDuration:t.maxExecutionDuration,minExecutionDuration:t.minExecutionDuration,hasException:t.hasException,sorting:t.sorting,skipCount:t.skipCount,maxResultCount:t.maxResultCount}},{apiName:this.apiName})}}AuditLogsService.ɵprov=i0.ɵɵdefineInjectable({factory:function(){return new AuditLogsService(i0.ɵɵinject(i1.RestService))},token:AuditLogsService,providedIn:"root"}),AuditLogsService.decorators=[{type:Injectable,args:[{providedIn:"root"}]}],AuditLogsService.ctorParameters=()=>[{type:RestService}];