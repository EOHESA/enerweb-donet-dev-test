import{__decorate}from"tslib";import{Injectable}from"@angular/core";import{Action,Selector,State}from"@ngxs/store";import{tap}from"rxjs/operators";import{GetAuditLogs,GetAverageExecutionDurationPerDay,GetErrorRate}from"../actions/audit-logging.actions";import{AuditLogsService}from"../proxy/audit-logging/audit-logs.service";let AuditLoggingState=class{constructor(t){this.service=t}static get({result:t}){return t.items||[]}static getTotalCount({result:t}){return t.totalCount||0}static getAverageExecutionStatistics({averageExecutionStatistics:t}){return t}static getErrorRateStatistics({errorRateStatistics:t}){return t}get({patchState:t},{payload:e}){return this.service.getList(e).pipe(tap(e=>t({result:e})))}getAverageExecutionData({patchState:t},{payload:e}){return this.service.getAverageExecutionDurationPerDay(e).pipe(tap(e=>{t({averageExecutionStatistics:e.data})}))}getErrorRate({patchState:t},{payload:e}){return this.service.getErrorRate(e).pipe(tap(e=>{t({errorRateStatistics:e.data})}))}};AuditLoggingState.decorators=[{type:Injectable}],AuditLoggingState.ctorParameters=()=>[{type:AuditLogsService}],__decorate([Action(GetAuditLogs)],AuditLoggingState.prototype,"get",null),__decorate([Action(GetAverageExecutionDurationPerDay)],AuditLoggingState.prototype,"getAverageExecutionData",null),__decorate([Action(GetErrorRate)],AuditLoggingState.prototype,"getErrorRate",null),__decorate([Selector()],AuditLoggingState,"get",null),__decorate([Selector()],AuditLoggingState,"getTotalCount",null),__decorate([Selector()],AuditLoggingState,"getAverageExecutionStatistics",null),__decorate([Selector()],AuditLoggingState,"getErrorRateStatistics",null),AuditLoggingState=__decorate([State({name:"AuditLoggingState",defaults:{result:{},averageExecutionStatistics:{},errorRateStatistics:{}}})],AuditLoggingState);export{AuditLoggingState};