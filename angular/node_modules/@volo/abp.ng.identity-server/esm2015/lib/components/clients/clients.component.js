import{ListService}from"@abp/ng.core";import{Confirmation,ConfirmationService}from"@abp/ng.theme.shared";import{EXTENSIONS_IDENTIFIER,FormPropData,generateFormFromProps}from"@abp/ng.theme.shared/extensions";import{Component,Injector}from"@angular/core";import{FormBuilder,Validators}from"@angular/forms";import{filter,map,switchMap}from"rxjs/operators";import{ApiResourcesService}from"../../proxy/api-resources.service";import{ClientsService}from"../../proxy/clients.service";import{IdentityResourcesService}from"../../proxy/identity-resources.service";const ɵ0="IdentityServer.ClientsComponent";export class ClientsComponent{constructor(e,r,t,i,s,n,a){this.list=e,this.service=r,this.apiResourceService=t,this.identityResourceService=i,this.confirmationService=s,this.fb=n,this.injector=a,this.createModalVisible=!1,this.editModalVisible=!1,this.identityResourcesPicklistValue=[],this.apiResourcesPicklistValue=[],this.visiblePermissions=!1,this.onVisiblePermissionChange=e=>{this.visiblePermissions=e}}setEditApiResources(e){const r=createAllowedResourceFinder(e);this.editApiResources=this.apiResourcesPicklistValue.map(e=>Object.assign(Object.assign({},e),{left:r(e)}))}setEditIdentityResources(e){const r=createAllowedResourceFinder(e);this.editIdentityResources=this.identityResourcesPicklistValue.map(e=>Object.assign(Object.assign({},e),{left:r(e)}))}setEditGrantTypes(e){this.editGrantTypes=e.allowedGrantTypes.map(e=>e.grantType)}ngOnInit(){this.apiResourceService.getAllList().pipe(mapToResources()).subscribe(e=>this.apiResourcesPicklistValue=e),this.identityResourceService.getAllList().pipe(mapToResources()).subscribe(e=>this.identityResourcesPicklistValue=e)}openPermissionsModal(e){this.providerKey=e,setTimeout(()=>{this.visiblePermissions=!0},0)}onAdd(){this.newScopeForm=this.fb.group({clientId:["",[Validators.required]],clientName:["",[Validators.required]],description:[""],clientUri:[""],logoUri:[""],requireConsent:[!1]}),this.createModalVisible=!0}create(e){this.service.create(Object.assign(Object.assign({},e),{scopes:[...e.identityResources,...e.apiResources].map(e=>e.name)})).subscribe(e=>{this.createModalVisible=!1,this.list.get()})}onEdit(e){this.service.get(e).subscribe(e=>{this.editSelectedRecord=e;const r=new FormPropData(this.injector,e);this.editScopeForm=generateFormFromProps(r),this.editModalVisible=!0,this.setEditApiResources(e),this.setEditIdentityResources(e),this.setEditGrantTypes(e)})}delete({id:e,clientId:r}){this.confirmationService.warn("AbpIdentityServer::ClientsDeletionWarningMessage","AbpIdentityServer::AreYouSure",{messageLocalizationParams:[r]}).pipe(filter(e=>e===Confirmation.Status.confirm),switchMap(r=>this.service.delete(e))).subscribe(e=>{this.list.get()})}edit(e){this.service.update(this.editSelectedRecord.id,this.mapEditForm(e)).subscribe(e=>{this.editModalVisible=!1,this.list.get()})}mapEditForm(e){const r=e.postLogoutRedirectUris.map(e=>e.postLogoutRedirectUri),t=e.redirectUris.map(e=>e.redirectUri),i=e.allowedCorsOrigins.map(e=>e.origin),s=e.identityProviderRestrictions.map(e=>e.provider),n=e.apiResources.concat(e.identityResources).map(e=>e.name);return Object.assign(Object.assign({},e),{postLogoutRedirectUris:r,redirectUris:t,allowedCorsOrigins:i,identityProviderRestrictions:s,scopes:n})}}function createAllowedResourceFinder(e){return({name:r})=>e.allowedScopes.findIndex(e=>e.scope===r)>-1}function mapToResources(){return map(e=>e.map(e=>({displayName:e.displayName||e.name,name:e.name,left:!1})))}ClientsComponent.decorators=[{type:Component,args:[{selector:"abp-clients",template:'<abp-identity-server-entity-base\r\n  [list]="list"\r\n  [service]="service"\r\n  entityName="Clients"\r\n></abp-identity-server-entity-base>\r\n\r\n<abp-identity-server-modal\r\n  *ngIf="createModalVisible"\r\n  [(visible)]="createModalVisible"\r\n  (save)="create($event)"\r\n>\r\n  <abp-identity-server-modal-info-tab\r\n    [form]="newScopeForm"\r\n    title="Basic"\r\n  ></abp-identity-server-modal-info-tab>\r\n  <abp-clients-modal-uris-tab></abp-clients-modal-uris-tab>\r\n  <abp-identity-server-modal-secrets-tab></abp-identity-server-modal-secrets-tab>\r\n\r\n  <abp-identity-server-modal-tab-group title="Resources">\r\n    <abp-clients-modal-resources-tab\r\n      title="IdentityResources"\r\n      [resources]="identityResourcesPicklistValue"\r\n      fieldName="identityResources"\r\n    >\r\n    </abp-clients-modal-resources-tab>\r\n    <abp-clients-modal-resources-tab\r\n      title="ApiResources"\r\n      [resources]="apiResourcesPicklistValue"\r\n      fieldName="apiResources"\r\n    >\r\n    </abp-clients-modal-resources-tab>\r\n  </abp-identity-server-modal-tab-group>\r\n</abp-identity-server-modal>\r\n\r\n<abp-identity-server-modal\r\n  *ngIf="editModalVisible"\r\n  [(visible)]="editModalVisible"\r\n  (save)="edit($event)"\r\n  type="Edit"\r\n>\r\n  <abp-identity-server-modal-info-tab\r\n    title="Details"\r\n    [form]="editScopeForm"\r\n    [selectedRecord]="editSelectedRecord"\r\n  ></abp-identity-server-modal-info-tab>\r\n\r\n  <abp-identity-server-modal-tab-group title="ApplicationUrls">\r\n    <abp-identity-server-modal-free-text-values-tab\r\n      title="Callback"\r\n      formTitle="CallbackUrl"\r\n      [fields]="[{ name: \'redirectUri\', title: \'Uri\' }]"\r\n      fieldName="redirectUris"\r\n      [selected]="editSelectedRecord?.redirectUris"\r\n    ></abp-identity-server-modal-free-text-values-tab>\r\n    <abp-identity-server-modal-free-text-values-tab\r\n      title="Signout"\r\n      formTitle="SignoutUrl"\r\n      [fields]="[{ name: \'postLogoutRedirectUri\', title: \'Uri\' }]"\r\n      fieldName="postLogoutRedirectUris"\r\n      [selected]="editSelectedRecord?.postLogoutRedirectUris"\r\n    ></abp-identity-server-modal-free-text-values-tab>\r\n    <abp-identity-server-modal-free-text-values-tab\r\n      title="CORS"\r\n      formTitle="AllowedCorsOrigins"\r\n      [fields]="[{ name: \'origin\', title: \'Uri\' }]"\r\n      fieldName="allowedCorsOrigins"\r\n      [selected]="editSelectedRecord?.allowedCorsOrigins"\r\n    ></abp-identity-server-modal-free-text-values-tab>\r\n  </abp-identity-server-modal-tab-group>\r\n  <abp-identity-server-modal-secrets-tab\r\n    [selectedSecrets]="editSelectedRecord?.clientSecrets"\r\n    fieldName="clientSecrets"\r\n  ></abp-identity-server-modal-secrets-tab>\r\n  <abp-identity-server-modal-tab-group title="Resources">\r\n    <abp-clients-modal-resources-tab\r\n      title="IdentityResources"\r\n      [resources]="editIdentityResources"\r\n      fieldName="identityResources"\r\n    >\r\n    </abp-clients-modal-resources-tab>\r\n    <abp-clients-modal-resources-tab\r\n      title="ApiResources"\r\n      [resources]="editApiResources"\r\n      fieldName="apiResources"\r\n    >\r\n    </abp-clients-modal-resources-tab>\r\n  </abp-identity-server-modal-tab-group>\r\n\r\n  <abp-identity-server-modal-tab-group title="Advanced">\r\n    <abp-clients-modal-tokens-tab [selected]="editSelectedRecord"></abp-clients-modal-tokens-tab>\r\n    <abp-identity-server-modal-free-text-values-tab\r\n      title="Claims"\r\n      [fields]="[\r\n        { name: \'type\', title: \'Type\' },\r\n        { name: \'value\', title: \'Value\' }\r\n      ]"\r\n      fieldName="claims"\r\n      [selected]="editSelectedRecord?.claims"\r\n      [checkboxValue]="editSelectedRecord?.alwaysSendClientClaims"\r\n      checkboxFieldName="alwaysSendClientClaims"\r\n      checkboxLabel="AlwaysSendClientClaims"\r\n    ></abp-identity-server-modal-free-text-values-tab>\r\n    <abp-clients-modal-grant-types-tab\r\n      [selected]="editGrantTypes"\r\n    ></abp-clients-modal-grant-types-tab>\r\n    <abp-identity-server-modal-free-text-values-tab\r\n      title="Restrictions"\r\n      [fields]="[{ name: \'provider\', title: \'Name\' }]"\r\n      fieldName="identityProviderRestrictions"\r\n      [selected]="editSelectedRecord?.identityProviderRestrictions"\r\n      [checkboxValue]="editSelectedRecord?.enableLocalLogin"\r\n      checkboxFieldName="enableLocalLogin"\r\n      checkboxLabel="EnableLocalLogin"\r\n    ></abp-identity-server-modal-free-text-values-tab>\r\n    <abp-identity-server-modal-properties-tab\r\n      [selectedProperties]="editSelectedRecord.properties"\r\n    ></abp-identity-server-modal-properties-tab>\r\n  </abp-identity-server-modal-tab-group>\r\n</abp-identity-server-modal>\r\n\r\n<abp-permission-management\r\n  *abpReplaceableTemplate="{\r\n    inputs: {\r\n      providerName: { value: \'C\' },\r\n      providerKey: { value: providerKey },\r\n      visible: { value: visiblePermissions, twoWay: true }\r\n    },\r\n    outputs: { visibleChange: onVisiblePermissionChange },\r\n    componentKey: \'PermissionManagement.PermissionManagementComponent\'\r\n  }"\r\n  [(visible)]="visiblePermissions"\r\n  providerName="C"\r\n  [providerKey]="providerKey"\r\n>\r\n</abp-permission-management>\r\n',providers:[ListService,{provide:EXTENSIONS_IDENTIFIER,useValue:ɵ0}]}]}],ClientsComponent.ctorParameters=()=>[{type:ListService},{type:ClientsService},{type:ApiResourcesService},{type:IdentityResourcesService},{type:ConfirmationService},{type:FormBuilder},{type:Injector}];export{ɵ0};