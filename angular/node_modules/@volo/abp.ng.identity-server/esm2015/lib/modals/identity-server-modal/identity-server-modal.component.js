import{Component,Input,Output,EventEmitter,ContentChildren,ChangeDetectionStrategy}from"@angular/core";import{IdentityServerModalTabComponent}from"./tabs/identity-server-modal-tab.component";export class IdentityServerModalComponent{constructor(){this.type="Create",this.visibleChange=new EventEmitter,this.save=new EventEmitter,this.shouldBeDisabled=()=>!!this.tabs.some(n=>!n.isValid())}ngOnInit(){}onVisibleChange(n){this.visible=n,this.visibleChange.emit(n)}onSave(){if(!this.shouldBeDisabled()){const n=this.tabs.reduce((n,e)=>Object.assign(Object.assign({},n),e.getValue()),{});this.save.emit(n)}}}IdentityServerModalComponent.decorators=[{type:Component,args:[{selector:"abp-identity-server-modal",template:'<abp-modal [visible]="visible" (visibleChange)="onVisibleChange($event)">\r\n  <ng-template #abpHeader>\r\n    <h5 class="modal-title" id="modal-basic-title">\r\n      {{ \'AbpIdentityServer::\' + type | abpLocalization }}\r\n    </h5>\r\n  </ng-template>\r\n  <ng-template #abpBody>\r\n    <ul ngbNav #nav="ngbNav" [(activeId)]="activeTab" class="nav-tabs">\r\n      <ng-container *ngFor="let tab of tabs; let outerIndex = index">\r\n        <ng-container *ngIf="tab.innerTabs; else singleTab">\r\n          <li ngbDropdown class="nav-item">\r\n            <a\r\n              class="nav-link pointer"\r\n              [class.active]="activeTab?.startsWith(outerIndex + \'-\')"\r\n              ngbDropdownToggle\r\n              >{{ \'AbpIdentityServer::\' + tab.title | abpLocalization }}</a\r\n            >\r\n            <div ngbDropdownMenu>\r\n              <div ngbDropdownItem *ngFor="let innerTab of tab.innerTabs; let innerIndex = index">\r\n                <ng-container\r\n                  *ngTemplateOutlet="\r\n                    tabTemplateWithoutLink;\r\n                    context: { $implicit: innerTab, index: outerIndex + \'-\' + innerIndex }\r\n                  "\r\n                ></ng-container>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ng-container>\r\n\r\n        <ng-template #singleTab>\r\n          <ng-container\r\n            *ngTemplateOutlet="tabTemplate; context: { $implicit: tab, index: outerIndex + \'\' }"\r\n          ></ng-container>\r\n        </ng-template>\r\n      </ng-container>\r\n\r\n      <ng-template #tabTemplate let-tab let-index="index">\r\n        <li [ngbNavItem]="index">\r\n          <a ngbNavLink>{{ \'AbpIdentityServer::\' + tab.title | abpLocalization }}</a>\r\n          <ng-template ngbNavContent>\r\n            <ng-container *ngTemplateOutlet="tab.template"></ng-container>\r\n          </ng-template>\r\n        </li>\r\n      </ng-template>\r\n\r\n      <ng-template #tabTemplateWithoutLink let-tab let-index="index">\r\n        <div\r\n          class="pointer"\r\n          [class.nav-item]="false"\r\n          [ngbNavItem]="index"\r\n          #item="ngbNavItem"\r\n          (click)="nav.click(item)"\r\n        >\r\n          {{ \'AbpIdentityServer::\' + tab.title | abpLocalization }}\r\n          <ng-template ngbNavContent>\r\n            <ng-container *ngTemplateOutlet="tab.template"></ng-container>\r\n          </ng-template>\r\n        </div>\r\n      </ng-template>\r\n    </ul>\r\n    <div [ngbNavOutlet]="nav" class="mt-2 fade-in-top"></div>\r\n  </ng-template>\r\n  <ng-template #abpFooter>\r\n    <button type="button" class="btn btn-secondary" #abpClose>\r\n      {{ \'AbpIdentityServer::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass="fa fa-check" (click)="onSave()" [disabled]="shouldBeDisabled()">{{\r\n      \'AbpIdentityServer::Save\' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n',changeDetection:ChangeDetectionStrategy.OnPush}]}],IdentityServerModalComponent.ctorParameters=()=>[],IdentityServerModalComponent.propDecorators={type:[{type:Input}],visible:[{type:Input}],visibleChange:[{type:Output}],save:[{type:Output}],tabs:[{type:ContentChildren,args:[IdentityServerModalTabComponent]}]};