import{ChangeDetectionStrategy,Component,Input}from"@angular/core";import{FormBuilder,Validators}from"@angular/forms";import{NgbDateAdapter,NgbDateNativeAdapter}from"@ng-bootstrap/ng-bootstrap";import{IdentityServerModalTabComponent}from"../identity-server-modal-tab.component";export class IdentityServerModalSecretsTabComponent extends IdentityServerModalTabComponent{constructor(e){super(),this.fb=e,this.title="Secrets",this.fieldName="secrets",this.form=this.fb.group({type:["SharedSecret",Validators.required],value:[null,Validators.required],description:[null],expiration:[null]}),this._selectedSecrets=[],this.trackByFn=(e,t)=>t.type}set selectedSecrets(e){this._selectedSecrets=e||[]}get selectedSecrets(){return this._selectedSecrets}ngOnInit(){}add(){this.form.valid&&(this._selectedSecrets.push(this.form.value),this.form.reset(),this.form.patchValue({type:"SharedSecret"}))}getValue(){return{[this.fieldName]:this.selectedSecrets}}delete(e){this._selectedSecrets.splice(e,1)}}IdentityServerModalSecretsTabComponent.decorators=[{type:Component,args:[{selector:"abp-identity-server-modal-secrets-tab",template:'<ng-template>\r\n  <div class="bg-light shadow-none mb-3 card">\r\n    <div class="card-body">\r\n      <form [formGroup]="form" (ngSubmit)="add()" validateOnSubmit>\r\n        <div class="row">\r\n          <div class="col col-6">\r\n            <div class="form-group">\r\n              <label for="secret-type">{{ \'AbpIdentityServer::Type\' | abpLocalization }}</label>\r\n              <select\r\n                class="custom-select form-control"\r\n                id="secret-type"\r\n                name="secret-type"\r\n                formControlName="type"\r\n              >\r\n                <option ngValue="SharedSecret">Shared Secret</option>\r\n                <option ngValue="X509Thumbprint">X509 Thumbprint</option>\r\n              </select>\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="secret-value">{{ \'AbpIdentityServer::Value\' | abpLocalization }}</label\r\n              ><input\r\n                type="text"\r\n                id="secret-value"\r\n                name="secret-value"\r\n                class="form-control"\r\n                formControlName="value"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class="col col-6">\r\n            <div class="form-group">\r\n              <label for="secret-description">{{\r\n                \'AbpIdentityServer::Description\' | abpLocalization\r\n              }}</label\r\n              ><input\r\n                type="text"\r\n                id="secret-description"\r\n                name="secret-description"\r\n                formControlName="description"\r\n                class="form-control"\r\n              />\r\n            </div>\r\n            <div class="form-group">\r\n              <label for="secret-expiration">{{\r\n                \'AbpIdentityServer::Expiration\' | abpLocalization\r\n              }}</label>\r\n              <div class="input-group" validationTarget>\r\n                <input\r\n                  id="secret-expiration"\r\n                  ngbDatepicker\r\n                  #expirationInput\r\n                  #datepicker="ngbDatepicker"\r\n                  class="form-control"\r\n                  name="secret-expiration"\r\n                  formControlName="expiration"\r\n                  readonly\r\n                  (click)="datepicker.toggle()"\r\n                />\r\n                <div *ngIf="expirationInput.value" class="input-group-append">\r\n                  <button\r\n                    class="btn btn-link px-2"\r\n                    type="button"\r\n                    [title]="\'AbpUi::Clear\' | abpLocalization"\r\n                    (click)="datepicker.writeValue(null); datepicker.manualDateChange(null, true)"\r\n                  >\r\n                    <i class="fa fa-times" aria-hidden="true"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <abp-button\r\n          buttonId="AddNewSecretButton"\r\n          iconClass="fa fa-plus"\r\n          buttonClass="float-right btn btn-primary btn-sm"\r\n          buttonType="submit"\r\n        >\r\n          {{ \'AbpIdentityServer::AddNew\' | abpLocalization }}\r\n        </abp-button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div *ngIf="selectedSecrets.length" class="table-responsive-sm">\r\n    <table id="secret-table-id" class="table table-hover">\r\n      <thead>\r\n        <tr>\r\n          <th scope="col">{{ \'AbpIdentityServer::Type\' | abpLocalization }}</th>\r\n          <th scope="col">{{ \'AbpIdentityServer::Value\' | abpLocalization }}</th>\r\n          <th scope="col">{{ \'AbpIdentityServer::Description\' | abpLocalization }}</th>\r\n          <th scope="col">{{ \'AbpIdentityServer::Expiration\' | abpLocalization }}</th>\r\n          <th scope="col"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody id="SecretTableBodyId">\r\n        <tr *ngFor="let group of selectedSecrets; trackBy: trackByFn; let i = index">\r\n          <td>\r\n            {{ group.type }}\r\n          </td>\r\n          <td style="max-width: 120px" class="abp-ellipsis-inline" [title]="group.value">\r\n            {{ group.value }}\r\n          </td>\r\n          <td style="max-width: 120px" class="abp-ellipsis-inline" [title]="group.description">\r\n            {{ group.description }}\r\n          </td>\r\n          <td>\r\n            {{ group.expiration | date }}\r\n          </td>\r\n          <td>\r\n            <button\r\n              type="button"\r\n              class="btn btn-outline-danger float-right deleteSecretButton"\r\n              (click)="delete(i)"\r\n            >\r\n              {{ \'AbpIdentityServer::Delete\' | abpLocalization }}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</ng-template>\r\n',providers:[{provide:IdentityServerModalTabComponent,useExisting:IdentityServerModalSecretsTabComponent},{provide:NgbDateAdapter,useClass:NgbDateNativeAdapter}],changeDetection:ChangeDetectionStrategy.OnPush}]}],IdentityServerModalSecretsTabComponent.ctorParameters=()=>[{type:FormBuilder}],IdentityServerModalSecretsTabComponent.propDecorators={fieldName:[{type:Input}],selectedSecrets:[{type:Input}]};