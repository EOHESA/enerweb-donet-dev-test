import { ListService } from '@abp/ng.core';
import { ConfirmationService } from '@abp/ng.theme.shared';
import { Injector, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { ApiResourcesService } from '../../proxy/api-resources.service';
import { ClientWithDetailsDto, GetClientListInput } from '../../proxy/client/dtos/models';
import { ClientsService } from '../../proxy/clients.service';
import { IdentityResourcesService } from '../../proxy/identity-resources.service';
import { PicklistDataType } from '../picklist/picklist.component';
export declare type ResourceType = PicklistDataType<{
    name: string;
    displayName: string;
}>;
export declare class ClientsComponent implements OnInit {
    readonly list: ListService<GetClientListInput>;
    readonly service: ClientsService;
    private apiResourceService;
    private identityResourceService;
    private confirmationService;
    private fb;
    private injector;
    createModalVisible: boolean;
    newScopeForm: FormGroup;
    editModalVisible: boolean;
    editSelectedRecord: ClientWithDetailsDto;
    editScopeForm: FormGroup;
    editApiResources: ResourceType;
    editIdentityResources: ResourceType;
    editGrantTypes: string[];
    identityResourcesPicklistValue: ResourceType;
    apiResourcesPicklistValue: ResourceType;
    providerKey: string;
    visiblePermissions: boolean;
    onVisiblePermissionChange: (value: boolean) => void;
    constructor(list: ListService<GetClientListInput>, service: ClientsService, apiResourceService: ApiResourcesService, identityResourceService: IdentityResourcesService, confirmationService: ConfirmationService, fb: FormBuilder, injector: Injector);
    private setEditApiResources;
    private setEditIdentityResources;
    private setEditGrantTypes;
    ngOnInit(): void;
    openPermissionsModal(providerKey: string): void;
    onAdd(): void;
    create(formValue: any): void;
    onEdit(id: string): void;
    delete({ id, clientId }: ClientWithDetailsDto): void;
    edit(formValue: any): void;
    mapEditForm(formValue: any): any;
}
