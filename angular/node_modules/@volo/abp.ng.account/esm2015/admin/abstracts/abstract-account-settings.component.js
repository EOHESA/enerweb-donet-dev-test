import{ApplicationConfigurationService,ConfigStateService}from"@abp/ng.core";import{ToasterService}from"@abp/ng.theme.shared";import{ChangeDetectorRef,Component,Input}from"@angular/core";import{Store}from"@ngxs/store";import{finalize}from"rxjs/operators";import{AbstractAccountSettingsService}from"./abstract-account-config.service";export class AbstractAccountSettingsComponent{constructor(t,e,i,n,o,r){this.service=t,this.toaster=e,this.cdr=i,this.store=n,this.configState=o,this.appConfigService=r}set loading(t){this._loading=t,this.cdr.markForCheck()}get loading(){return this._loading}ngOnInit(){this.settings$=this.service.getSettings()}submit(t){this.loading=!0,this.service.updateSettings(this.isTenant?this.mapTenantSettingsForSubmit(t):t).pipe(finalize(()=>this.loading=!1)).subscribe(()=>{this.toaster.success("AbpSettingManagement::SuccessfullySaved",null),this.appConfigService.getConfiguration().subscribe(t=>this.configState.setState(t))})}mapTenantSettingsForSubmit(t){return t}}AbstractAccountSettingsComponent.decorators=[{type:Component,args:[{template:""}]}],AbstractAccountSettingsComponent.ctorParameters=()=>[{type:AbstractAccountSettingsService},{type:ToasterService},{type:ChangeDetectorRef},{type:Store},{type:ConfigStateService},{type:ApplicationConfigurationService}],AbstractAccountSettingsComponent.propDecorators={isTenant:[{type:Input}]};