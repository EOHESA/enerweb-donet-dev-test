import { ApplicationConfigurationService, ConfigStateService } from '@abp/ng.core';
import { ToasterService } from '@abp/ng.theme.shared';
import { ChangeDetectorRef, OnInit } from '@angular/core';
import { Store } from '@ngxs/store';
import { Observable } from 'rxjs';
import { AbstractAccountSettingsService } from './abstract-account-config.service';
export declare class AbstractAccountSettingsComponent<Type, SubmitType = Type> implements OnInit {
    protected service: AbstractAccountSettingsService<Type, SubmitType>;
    protected toaster: ToasterService;
    protected cdr: ChangeDetectorRef;
    protected store: Store;
    private configState;
    private appConfigService;
    isTenant: boolean;
    settings$: Observable<Type>;
    private _loading;
    set loading(value: boolean);
    get loading(): boolean;
    constructor(service: AbstractAccountSettingsService<Type, SubmitType>, toaster: ToasterService, cdr: ChangeDetectorRef, store: Store, configState: ConfigStateService, appConfigService: ApplicationConfigurationService);
    ngOnInit(): void;
    submit(newSettings: Partial<SubmitType>): void;
    /**
     * should be overriden by children components
     * if it is not overridden,
     * it means that there is no difference between host and tenant for the particular child
     */
    mapTenantSettingsForSubmit(newSettings: Partial<SubmitType>): Partial<SubmitType>;
}
