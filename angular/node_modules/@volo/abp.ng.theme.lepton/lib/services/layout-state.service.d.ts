import { Observable } from 'rxjs';
import { Layout } from '../models';
export declare class LayoutStateService {
    private store;
    getPrimaryLogoColor(): Layout.LogoColor;
    getPrimaryLogoColor$(): Observable<Layout.LogoColor>;
    getSecondaryLogoColor(): Layout.LogoColor;
    getSecondaryLogoColor$(): Observable<Layout.LogoColor>;
    get<T extends Layout.StateKeys>(key: T): Layout.State[T];
    get$<T extends Layout.StateKeys>(key: T): Observable<Layout.State[T]>;
    update$<T extends Layout.StateKeys>(key: T): Observable<{
        isMenuExpanded?: boolean;
        isNavbarExpanded?: boolean;
        smallScreen?: boolean;
        isSidebarCollapsed?: boolean;
        isMenuPlacementTop?: boolean;
        mouseOnSidebar?: boolean;
        isMenuSwitched?: boolean;
        style?: number;
        styleElement?: HTMLStyleElement;
        menuPlacement?: Layout.MenuPlacement;
        boxedLayout?: boolean;
        menuStatus?: Layout.MenuStatus;
        themeSettings?: {
            boxedLayout?: boolean;
            menuPlacement?: Layout.MenuPlacement;
            menuStatus?: Layout.MenuStatus;
            style?: number;
            publicLayoutStyle?: number;
        };
    }[T]>;
    patch(state: Partial<Layout.State>): void;
    private getLogoColor;
    private getLogoColor$;
}
