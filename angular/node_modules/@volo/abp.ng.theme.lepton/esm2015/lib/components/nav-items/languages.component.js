import{Component}from"@angular/core";import{ConfigStateService,SessionStateService}from"@abp/ng.core";import{map}from"rxjs/operators";import snq from"snq";export class LanguagesComponent{constructor(n,a){this.configState=n,this.sessionState=a,this.languages$=this.configState.getDeep$("localization.languages")}get smallScreen(){return window.innerWidth<992}get defaultLanguage$(){return this.languages$.pipe(map(n=>{const a=snq(()=>n.find(n=>n.cultureName===this.selectedLangCulture),{});return{displayName:a.displayName||"",flagIcon:a.flagIcon}}))}get dropdownLanguages$(){return this.languages$.pipe(map(n=>snq(()=>n.filter(n=>n.cultureName!==this.selectedLangCulture)),[]))}get selectedLangCulture(){return this.sessionState.getLanguage()}ngOnInit(){}changeLang(n){this.sessionState.setLanguage(n)}}LanguagesComponent.decorators=[{type:Component,args:[{selector:"abp-languages",template:'\n    <div class="dropdown" ngbDropdown>\n      <a\n        *ngIf="defaultLanguage$ | async as defaultLang"\n        class="btn"\n        role="button"\n        id="dropdownMenuLink"\n        ngbDropdownToggle\n      >\n        <span\n          class="flag-icon flag-icon-squared flag-icon-{{ defaultLang.flagIcon }}"\n          [title]="defaultLang.displayName"\n        ></span>\n        <span class="current-language-name ml-1">{{ defaultLang.displayName }}</span>\n      </a>\n      <div\n        ngbDropdownMenu\n        class="dropdown-menu dropdown-menu-right"\n        *ngIf="(dropdownLanguages$ | async)?.length > 0"\n      >\n        <a\n          *ngFor="let lang of (dropdownLanguages$ | async) || []"\n          class="dropdown-item pointer"\n          (click)="changeLang(lang.cultureName)"\n        >\n          <span class="flag-icon flag-icon-{{ lang.flagIcon }} flag-icon-squared mr-2"></span>\n          {{ lang?.displayName }}</a\n        >\n      </div>\n    </div>\n  '}]}],LanguagesComponent.ctorParameters=()=>[{type:ConfigStateService},{type:SessionStateService}];