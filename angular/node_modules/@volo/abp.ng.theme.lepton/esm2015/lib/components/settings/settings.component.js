import{__awaiter}from"tslib";import{noop,SubscriptionService}from"@abp/ng.core";import{collapse,ToasterService}from"@abp/ng.theme.shared";import{Component}from"@angular/core";import{Router}from"@angular/router";import{filter}from"rxjs/operators";import{Layout}from"../../models/layout";import{LayoutStateService}from"../../services/layout-state.service";import{FormBuilder}from"@angular/forms";import{throwError}from"rxjs";import{LayoutService}from"../../services/layout.service";export class SettingsComponent{constructor(e,t,n,o,r,a){this.toaster=e,this.router=t,this.subscription=n,this.layoutStateService=o,this.layout=r,this.fb=a,this.placements={Left:Layout.MenuPlacement.Left,Top:Layout.MenuPlacement.Top},this.statuses={AlwaysOpened:Layout.MenuStatus.AlwaysOpened,OpenOnHover:Layout.MenuStatus.OpenOnHover},this.boxedLayout=!1,this.viewInitialized=!1,this.form=this.fb.group({style:[],publicLayoutStyle:[],menuPlacement:[],menuStatus:[],boxedLayout:[]})}get isSmallScreen(){return window.innerWidth<992}ngOnInit(){this.layout.fetchThemeSettings(),this.subscription.addOne(this.layoutStateService.get$("themeSettings").pipe(filter(Boolean)),({boxedLayout:e,menuPlacement:t,menuStatus:n,style:o,publicLayoutStyle:r})=>{this.form.patchValue({menuPlacement:t,boxedLayout:e,style:o||0,publicLayoutStyle:r||0,menuStatus:n||0===n?n:Layout.MenuStatus.AlwaysOpened})})}ngAfterViewInit(){setTimeout(()=>this.viewInitialized=!0,0)}save(){this.loading=!0;this.layout.updateThemeSettings(this.form.value,()=>__awaiter(this,void 0,void 0,(function*(){const{shouldReuseRoute:e}=this.router.routeReuseStrategy;this.router.routeReuseStrategy.shouldReuseRoute=()=>!1,this.router.navigated=!1,yield this.router.navigateByUrl(this.router.url).catch(noop),this.router.routeReuseStrategy.shouldReuseRoute=e,this.loading=!1,setTimeout(()=>{this.toaster.success("LeptonThemeManagement::SuccessfullySaved",null)},0)})),e=>(this.loading=!1,throwError(e)))}}SettingsComponent.decorators=[{type:Component,args:[{selector:"abp-lepton-settings",template:'<h2>{{ \'LeptonThemeManagement::Menu:LeptonThemeSettings\' | abpLocalization }}</h2>\r\n<hr class="my-4" />\r\n<form id="LeptonThemeSettingsForm" novalidate="novalidate" [formGroup]="form">\r\n  <div class="row">\r\n    <div class="col col-md-12">\r\n      <div>\r\n        <div class="form-group">\r\n          <label for="Style">{{\r\n            \'LeptonThemeManagement::DisplayName:Style\' | abpLocalization\r\n          }}</label>\r\n          <select\r\n            class="custom-select form-control valid"\r\n            id="Style"\r\n            name="Style"\r\n            formControlName="style"\r\n          >\r\n            <option [ngValue]="0">Style1</option>\r\n            <option [ngValue]="1">Style2</option>\r\n            <option [ngValue]="2">Style3</option>\r\n            <option [ngValue]="3">Style4</option>\r\n            <option [ngValue]="4">Style5</option>\r\n            <option [ngValue]="5">Style6</option>\r\n          </select>\r\n\r\n          <span\r\n            class="text-danger field-validation-valid"\r\n            data-valmsg-for="Style"\r\n            data-valmsg-replace="true"\r\n          ></span>\r\n        </div>\r\n        <div class="form-group">\r\n          <label for="PublicLayoutStyle">{{\r\n            \'LeptonThemeManagement::DisplayName:PublicLayoutStyle\' | abpLocalization\r\n          }}</label>\r\n          <select\r\n            class="custom-select form-control valid"\r\n            id="PublicLayoutStyle"\r\n            name="PublicLayoutStyle"\r\n            formControlName="publicLayoutStyle"\r\n          >\r\n            <option [ngValue]="0">Style1</option>\r\n            <option [ngValue]="1">Style2</option>\r\n            <option [ngValue]="2">Style3</option>\r\n            <option [ngValue]="3">Style4</option>\r\n            <option [ngValue]="4">Style5</option>\r\n            <option [ngValue]="5">Style6</option>\r\n          </select>\r\n\r\n          <span\r\n            class="text-danger field-validation-valid"\r\n            data-valmsg-for="PublicLayoutStyle"\r\n            data-valmsg-replace="true"\r\n          ></span>\r\n        </div>\r\n        <ng-container *ngIf="!isSmallScreen">\r\n          <div class="form-group">\r\n            <label for="MenuPlacement">{{\r\n              \'LeptonThemeManagement::DisplayName:MenuPlacement\' | abpLocalization\r\n            }}</label>\r\n            <select\r\n              class="custom-select form-control valid"\r\n              id="MenuPlacement"\r\n              name="MenuPlacement"\r\n              formControlName="menuPlacement"\r\n            >\r\n              <option [ngValue]="placements.Left">\r\n                {{ \'LeptonThemeManagement::Left\' | abpLocalization }}\r\n              </option>\r\n              <option [ngValue]="placements.Top">\r\n                {{ \'LeptonThemeManagement::Top\' | abpLocalization }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div\r\n            class="form-group"\r\n            [@collapse]="\r\n              form.value.menuPlacement === placements.Left\r\n                ? viewInitialized\r\n                  ? \'expanded\'\r\n                  : \'\'\r\n                : \'collapsed\'\r\n            "\r\n          >\r\n            <label for="MenuStatus">{{\r\n              \'LeptonThemeManagement::DisplayName:MenuStatus\' | abpLocalization\r\n            }}</label>\r\n            <select\r\n              class="custom-select form-control valid"\r\n              id="MenuStatus"\r\n              name="MenuStatus"\r\n              formControlName="menuStatus"\r\n            >\r\n              <option [ngValue]="statuses.AlwaysOpened">\r\n                {{ \'LeptonThemeManagement::AlwaysOpened\' | abpLocalization }}\r\n              </option>\r\n              <option [ngValue]="statuses.OpenOnHover">\r\n                {{ \'LeptonThemeManagement::OpenOnHover\' | abpLocalization }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class="custom-checkbox custom-control mb-2">\r\n            <input\r\n              type="checkbox"\r\n              id="BoxedLayout"\r\n              name="BoxedLayout"\r\n              value="true"\r\n              class="custom-control-input"\r\n              formControlName="boxedLayout"\r\n            /><label class="custom-control-label" for="BoxedLayout">{{\r\n              \'LeptonThemeManagement::DisplayName:BoxedLayout\' | abpLocalization\r\n            }}</label>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n      <hr class="my-4" />\r\n      <div>\r\n        <abp-button buttonType="button" (click)="save()" [loading]="loading" iconClass="fa fa-save"\r\n          >{{ \'LeptonThemeManagement::Save\' | abpLocalization }}\r\n        </abp-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n',providers:[LayoutService],animations:[collapse]}]}],SettingsComponent.ctorParameters=()=>[{type:ToasterService},{type:Router},{type:SubscriptionService},{type:LayoutStateService},{type:LayoutService},{type:FormBuilder}];