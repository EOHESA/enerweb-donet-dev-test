import{findRoute,getRoutePath,RoutesService}from"@abp/ng.core";import{collapse}from"@abp/ng.theme.shared";import{ChangeDetectionStrategy,Component,EventEmitter,Injector,Input,Output}from"@angular/core";import{NavigationEnd,Router}from"@angular/router";import{filter,map,take}from"rxjs/operators";export class RoutesComponent{constructor(e,n,t){this.router=e,this.routes=n,this.injector=t,this.clickedToLink=new EventEmitter,this.expandedRoutes=new Set,this.initialLevel=1,this.trackByFn=(e,n)=>n.name,this.filterOp=map(e=>e)}get routes$(){return this.routes.visible$.pipe(this.filterOp)}isDropdown(e){return!(null==e?void 0:e.isLeaf)||this.routes.hasChildren(e.name)}ngOnInit(){this.router.events.pipe(filter(e=>e instanceof NavigationEnd),take(1)).subscribe(()=>{let e=findRoute(this.routes,getRoutePath(this.router));e={parent:e};const n=[];for(;e.parent;)e=e.parent,n.push(e.name);let t=n.length+this.initialLevel;n.forEach(e=>this.expandedRoutes.add(e+--t))})}onNavigate({parentName:e},n){let t=n;const r=()=>t?--t:0,o=[(e||"")+r()];let a=this.routes.find(n=>n.name===e);for(;null==a?void 0:a.parent;)a=a.parent,o.push(a.name+r());this.expandedRoutes.forEach(e=>{o.indexOf(e)<0&&this.expandedRoutes.delete(e)})}toggleExpand({name:e},n){const t=this.expandedRoutes.has(e+n);this.expandedRoutes[t?"delete":"add"](e+n),t||this.collapseDropdowns(e,n)}collapseDropdowns(e,n){this.routes.flat.filter(n=>n.name!==e&&!n.invisible).forEach(e=>{this.expandedRoutes.delete(e.name+n)})}}RoutesComponent.decorators=[{type:Component,args:[{selector:"abp-routes",template:'<div class="lp-sidebar-wrapper">\r\n  <nav role="navigation" class="lp-sidebar-navi">\r\n    <ul>\r\n      <ng-container\r\n        *ngFor="let route of routes$ | async; trackBy: trackByFn"\r\n        [ngTemplateOutlet]="isDropdown(route) ? dropdownLink : defaultLink"\r\n        [ngTemplateOutletContext]="{ $implicit: route, level: initialLevel }"\r\n      >\r\n      </ng-container>\r\n\r\n      <ng-template #defaultLink let-route let-level="level">\r\n        <li\r\n          routerLinkActive="active-page current"\r\n          [routerLinkActiveOptions]="{ exact: route.path === \'/\' }"\r\n          *abpPermission="route.requiredPolicy"\r\n          (click)="$event.stopPropagation(); onNavigate(route, level)"\r\n        >\r\n          <a [routerLink]="[route.path]" (click)="clickedToLink.emit()">\r\n            <ng-container\r\n              *ngTemplateOutlet="linkContent; context: { $implicit: route }"\r\n            ></ng-container>\r\n          </a>\r\n        </li>\r\n      </ng-template>\r\n\r\n      <ng-template #linkContent let-route>\r\n        <span *ngIf="route.iconClass" class="lp-icon">\r\n          <i [ngClass]="route.iconClass"></i>\r\n        </span>\r\n        <span class="lp-text">\r\n          {{ route.name | abpLocalization }}\r\n        </span>\r\n      </ng-template>\r\n\r\n      <ng-template #dropdownLink let-route let-level="level">\r\n        <li\r\n          *abpPermission="route.requiredPolicy"\r\n          [abpVisibility]="routeContainer"\r\n          class="has-drop"\r\n          [class.current]="expandedRoutes.has(route.name + level)"\r\n        >\r\n          <a\r\n            attr.data-level="{{ level }}"\r\n            href="javascript:void(0)"\r\n            (click)="\r\n              $event.stopPropagation();\r\n              isMenuPlacementTop && !smallScreen ? null : toggleExpand(route, level)\r\n            "\r\n          >\r\n            <ng-container\r\n              *ngTemplateOutlet="linkContent; context: { $implicit: route }"\r\n            ></ng-container>\r\n\r\n            <span class="lp-arrow-icon" [attr.for]="route.name">\r\n              <i class="fa fa-chevron-down"></i>\r\n            </span>\r\n          </a>\r\n          <ul\r\n            class="dropdown-ul"\r\n            [ngClass]="{\r\n              \'d-block overflow-hidden\': isMenuPlacementTop && !smallScreen ? false : true\r\n            }"\r\n            [id]="route.name"\r\n          >\r\n            <div\r\n              #routeContainer\r\n              [@collapse]="\r\n                !isMenuPlacementTop\r\n                  ? expandedRoutes.has(route.name + level)\r\n                    ? \'expanded\'\r\n                    : \'collapsed\'\r\n                  : \'\'\r\n              "\r\n            >\r\n              <ng-container\r\n                *ngFor="let child of route.children; trackBy: trackByFn"\r\n                [ngTemplateOutlet]="dropdownMenu"\r\n                [ngTemplateOutletContext]="{ $implicit: child, level: level + 1 }"\r\n              ></ng-container>\r\n            </div>\r\n          </ul>\r\n        </li>\r\n      </ng-template>\r\n\r\n      <ng-template #dropdownMenu let-route let-level="level">\r\n        <ng-container\r\n          *ngTemplateOutlet="\r\n            isDropdown(route) ? dropdownLink : defaultLink;\r\n            context: { $implicit: route, level: level }\r\n          "\r\n        ></ng-container>\r\n      </ng-template>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n',changeDetection:ChangeDetectionStrategy.OnPush,animations:[collapse]}]}],RoutesComponent.ctorParameters=()=>[{type:Router},{type:RoutesService},{type:Injector}],RoutesComponent.propDecorators={clickedToLink:[{type:Output}],isMenuPlacementTop:[{type:Input}],smallScreen:[{type:Input}]};