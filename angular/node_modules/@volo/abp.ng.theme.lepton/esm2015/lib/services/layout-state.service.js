import{Injectable}from"@angular/core";import{InternalStore}from"@abp/ng.core";import{distinctUntilChanged,map}from"rxjs/operators";import*as i0 from"@angular/core";export class LayoutStateService{constructor(){this.store=new InternalStore({})}getPrimaryLogoColor(){return this.getLogoColor("--logo")}getPrimaryLogoColor$(){return this.getLogoColor$("--logo")}getSecondaryLogoColor(){return this.getLogoColor("--logo-reverse")}getSecondaryLogoColor$(){return this.getLogoColor$("--logo-reverse")}get(t){return this.store.state[t]}get$(t){return this.store.sliceState(o=>o[t])}update$(t){return this.store.sliceUpdate(o=>o[t])}patch(t){this.store.patch(t)}getLogoColor(t){return getComputedStyle(document.documentElement).getPropertyValue(t).indexOf("dark")>-1?"dark":"light"}getLogoColor$(t){return this.store.sliceState(t=>t).pipe(map(()=>this.getLogoColor(t)),distinctUntilChanged())}}LayoutStateService.ɵprov=i0.ɵɵdefineInjectable({factory:function(){return new LayoutStateService},token:LayoutStateService,providedIn:"root"}),LayoutStateService.decorators=[{type:Injectable,args:[{providedIn:"root"}]}];