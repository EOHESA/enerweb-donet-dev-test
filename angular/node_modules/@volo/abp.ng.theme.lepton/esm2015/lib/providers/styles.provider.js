import{ConfigStateService,CONTENT_STRATEGY,CORE_OPTIONS,DomInsertionService,ReplaceableComponentsService}from"@abp/ng.core";import{APP_INITIALIZER,Injector,RendererFactory2}from"@angular/core";import{AccountLayoutComponent}from"../components/account-layout/account-layout.component";import{ApplicationLayoutComponent}from"../components/application-layout/application-layout.component";import{EmptyLayoutComponent}from"../components/empty-layout/empty-layout.component";import styles from"../constants/styles";import{Layout}from"../models/layout";import{setStyle}from"../utils/layout.utils";import{LayoutService}from"../services/layout.service";export const LEPTON_THEME_STYLES_PROVIDERS=[{provide:APP_INITIALIZER,useFactory:configureStyles,deps:[Injector],multi:!0}];export function configureStyles(t){return()=>{const e=t.get(RendererFactory2),o=t.get(DomInsertionService),n=t.get(ReplaceableComponentsService),a=t.get(ConfigStateService),p=t.get(CORE_OPTIONS),c=t.get(LayoutService);e.createRenderer(document.body,null).addClass(document.body,"abp-application-layout"),o.insertContent(CONTENT_STRATEGY.AppendStyleToHead(styles)),listenToLeptonSettings(c,a);const r=createSetStyle(t,a);p.skipGetAppConfiguration&&r(),a.createOnUpdateStream(t=>t).subscribe(()=>{r()}),initLayouts(n)}}function listenToLeptonSettings(t,e){const o=e.getSettings$("Lepton");o.subscribe(e=>{t.setLayoutBoxed("True"===e["Volo.Abp.LeptonTheme.Layout.Boxed"]),t.setMenuStatus(Layout.MenuStatus[e["Volo.Abp.LeptonTheme.Layout.MenuStatus"]]||0),t.setMenuPlacement(Layout.MenuPlacement[e["Volo.Abp.LeptonTheme.Layout.MenuPlacement"]]||0)})}function createSetStyle(t,e){return()=>setStyle(Number((e.getSetting("Volo.Abp.LeptonTheme.Style")||"Style1").replace("Style","")),t)}function initLayouts(t){t.add({key:"Theme.ApplicationLayoutComponent",component:ApplicationLayoutComponent}),t.add({key:"Theme.AccountLayoutComponent",component:AccountLayoutComponent}),t.add({key:"Theme.EmptyLayoutComponent",component:EmptyLayoutComponent})}