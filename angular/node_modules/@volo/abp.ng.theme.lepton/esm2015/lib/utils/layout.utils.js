import{from}from"rxjs";import{map,take}from"rxjs/operators";import{DOM_STRATEGY,DomInsertionService,StyleContentStrategy}from"@abp/ng.core";import{LayoutStateService}from"../services/layout-state.service";export const getLeptonStyle=e=>{let t;switch(e){case 1:t=import("@volo/abp.ng.theme.lepton/dist/global/styles/lepton1");break;case 2:t=import("@volo/abp.ng.theme.lepton/dist/global/styles/lepton2");break;case 3:t=import("@volo/abp.ng.theme.lepton/dist/global/styles/lepton3");break;case 4:t=import("@volo/abp.ng.theme.lepton/dist/global/styles/lepton4");break;case 5:t=import("@volo/abp.ng.theme.lepton/dist/global/styles/lepton5");break;case 6:t=import("@volo/abp.ng.theme.lepton/dist/global/styles/lepton6");break;default:return}return from(t).pipe(map(e=>e.default))};export function setStyle(e,t){const o=t.get(LayoutStateService);o.get("style")!==e&&"number"==typeof e&&loadLeptonStyle(e,t).pipe(take(1)).subscribe(n=>{removeLeptonStyles(o.get("styleElement"),t),o.patch({style:e,styleElement:n})})}function loadLeptonStyle(e,t){const o=t.get(DomInsertionService),n=document.querySelector("link[href*=bootstrap]"),l=n?DOM_STRATEGY.AfterElement(n):DOM_STRATEGY.AppendToHead();return getLeptonStyle(e).pipe(map(e=>{const t=new StyleContentStrategy(e,l);return o.insertContent(t)}))}function removeLeptonStyles(e,t){const o=t.get(DomInsertionService);e&&o.removeContent(e)}