!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@abp/ng.theme.shared/extensions"),require("@angular/core"),require("@ngxs/store"),require("rxjs"),require("rxjs/operators"),require("snq"),require("@angular/forms"),require("@ng-bootstrap/ng-bootstrap"),require("@ngx-validate/core"),require("@volo/abp.commercial.ng.ui"),require("@angular/router")):"function"==typeof define&&define.amd?define("@volo/abp.ng.language-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@abp/ng.theme.shared/extensions","@angular/core","@ngxs/store","rxjs","rxjs/operators","snq","@angular/forms","@ng-bootstrap/ng-bootstrap","@ngx-validate/core","@volo/abp.commercial.ng.ui","@angular/router"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).volo=e.volo||{},e.volo.abp=e.volo.abp||{},e.volo.abp.ng=e.volo.abp.ng||{},e.volo.abp.ng["language-management"]={}),e.i1,e.ng_theme_shared,e.extensions,e.ng.core,e.i1$1,e.rxjs,e.rxjs.operators,e.snq,e.ng.forms,e.ngBootstrap,e.core,e.abp_commercial_ng_ui,e.ng.router)}(this,(function(e,t,a,n,r,o,i,s,u,l,g,c,p,d){"use strict";function m(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var f=m(u),h=function(e){void 0===e&&(e={}),this.payload=e};h.type="[LanguageManagement] Get";var b=function(e){this.payload=e};b.type="[LanguageManagement] Get By Id";var y=function(e,t){this.payload=e,this.id=t};y.type="[LanguageManagement] Create";var v=function(e){this.payload=e};v.type="[LanguageManagement] Delete";var L=function(e){this.payload=e};L.type="[LanguageManagement] Set As Default";var N=function(e){this.payload=e};N.type="[LanguageManagement] Get Texts";var T=function(){};T.type="[LanguageManagement] Get Cultures";var M=function(){};M.type="[LanguageManagement] Get Resources";var C=function(e){this.payload=e};C.type="[LanguageManagement] Update Language Text By Name";var x=function(e){this.payload=e};x.type="[LanguageManagement] Restore Language Text By Name";function S(e,t,a,n){var r,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,a,n);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(o<3?r(i):o>3?r(t,a,i):r(t,a))||i);return o>3&&i&&Object.defineProperty(t,a,i),i}Object.create;function E(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,r,o=a.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)i.push(n.value)}catch(e){r={error:e}}finally{try{n&&!n.done&&(a=o.return)&&a.call(o)}finally{if(r)throw r.error}}return i}function A(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(E(arguments[t]));return e}Object.create;var I=function(e){var t=this;this.restService=e,this.apiName="LanguageManagement",this.get=function(e,a,n,r){return t.restService.request({method:"GET",url:"/api/language-management/language-texts/"+e+"/"+a+"/"+n,params:{baseCultureName:r}},{apiName:t.apiName})},this.getList=function(e){return t.restService.request({method:"GET",url:"/api/language-management/language-texts",params:{filter:e.filter,resourceName:e.resourceName,baseCultureName:e.baseCultureName,targetCultureName:e.targetCultureName,getOnlyEmptyValues:e.getOnlyEmptyValues,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:t.apiName})},this.restoreToDefault=function(e,a,n){return t.restService.request({method:"PUT",url:"/api/language-management/language-texts/"+e+"/"+a+"/"+n+"/restore"},{apiName:t.apiName})},this.update=function(e,a,n,r){return t.restService.request({method:"PUT",url:"/api/language-management/language-texts/"+e+"/"+a+"/"+n,params:{value:r}},{apiName:t.apiName})}};I.ɵprov=r.ɵɵdefineInjectable({factory:function(){return new I(r.ɵɵinject(t.RestService))},token:I,providedIn:"root"}),I.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],I.ctorParameters=function(){return[{type:t.RestService}]};var R=function(e){var t=this;this.restService=e,this.apiName="LanguageManagement",this.create=function(e){return t.restService.request({method:"POST",url:"/api/language-management/languages",body:e},{apiName:t.apiName})},this.delete=function(e){return t.restService.request({method:"DELETE",url:"/api/language-management/languages/"+e},{apiName:t.apiName})},this.get=function(e){return t.restService.request({method:"GET",url:"/api/language-management/languages/"+e},{apiName:t.apiName})},this.getAllList=function(){return t.restService.request({method:"GET",url:"/api/language-management/languages/all"},{apiName:t.apiName})},this.getCulturelist=function(){return t.restService.request({method:"GET",url:"/api/language-management/languages/culture-list"},{apiName:t.apiName})},this.getList=function(e){return t.restService.request({method:"GET",url:"/api/language-management/languages",params:{filter:e.filter,resourceName:e.resourceName,baseCultureName:e.baseCultureName,targetCultureName:e.targetCultureName,getOnlyEmptyValues:e.getOnlyEmptyValues,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:t.apiName})},this.getResources=function(){return t.restService.request({method:"GET",url:"/api/language-management/languages/resources"},{apiName:t.apiName})},this.setAsDefault=function(e){return t.restService.request({method:"PUT",url:"/api/language-management/languages/"+e+"/set-as-default"},{apiName:t.apiName})},this.update=function(e,a){return t.restService.request({method:"PUT",url:"/api/language-management/languages/"+e,body:a},{apiName:t.apiName})}};R.ɵprov=r.ɵɵdefineInjectable({factory:function(){return new R(r.ɵɵinject(t.RestService))},token:R,providedIn:"root"}),R.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],R.ctorParameters=function(){return[{type:t.RestService}]},e.ɵc=function(){function e(e,t){this.languageService=e,this.languageTextService=t}return e.getLanguages=function(e){return e.languageResponse.items||[]},e.getLanguagesTotalCount=function(e){return e.languageResponse.totalCount},e.getLanguageTexts=function(e){return e.languageTextsResponse.items||[]},e.getLanguageTextsTotalCount=function(e){return e.languageTextsResponse.totalCount||0},e.getCultures=function(e){return e.cultures},e.getResources=function(e){return e.resources},e.prototype.get=function(e,t){var a=e.patchState,n=t.payload;return this.languageService.getList(n).pipe(s.tap((function(e){a({languageResponse:e})})))},e.prototype.getById=function(e,t){var a=e.patchState,n=t.payload;return this.languageService.get(n).pipe(s.tap((function(e){return a({selectedItem:e})})))},e.prototype.delete=function(e,t){e.dispatch;var a=t.payload;return this.languageService.delete(a)},e.prototype.setAsDefault=function(e,t){e.dispatch;var a=t.payload;return this.languageService.setAsDefault(a)},e.prototype.create=function(e,t){e.dispatch;var a=t.payload,n=t.id;return n?this.languageService.update(n,a):this.languageService.create(a)},e.prototype.getLanguageTexts=function(e,t){var a=e.patchState,n=t.payload;return this.languageTextService.getList(n).pipe(s.tap((function(e){return a({languageTextsResponse:e})})))},e.prototype.getCultures=function(e){var t=e.patchState;return this.languageService.getCulturelist().pipe(s.tap((function(e){return t({cultures:e})})))},e.prototype.getResources=function(e){var t=e.patchState;return this.languageService.getResources().pipe(s.tap((function(e){return t({resources:e})})))},e.prototype.updateLanguageTextByName=function(e,t){var a=t.payload;return this.languageTextService.update(a.resourceName,a.cultureName,a.name,a.value)},e.prototype.restoreLanguageTextByName=function(e,t){var a=t.payload;return this.languageTextService.restoreToDefault(a.resourceName,a.cultureName,a.name)},e}(),e.ɵc.decorators=[{type:r.Injectable}],e.ɵc.ctorParameters=function(){return[{type:R},{type:I}]},S([o.Action(h)],e.ɵc.prototype,"get",null),S([o.Action(b)],e.ɵc.prototype,"getById",null),S([o.Action(v)],e.ɵc.prototype,"delete",null),S([o.Action(L)],e.ɵc.prototype,"setAsDefault",null),S([o.Action(y)],e.ɵc.prototype,"create",null),S([o.Action(N)],e.ɵc.prototype,"getLanguageTexts",null),S([o.Action(T)],e.ɵc.prototype,"getCultures",null),S([o.Action(M)],e.ɵc.prototype,"getResources",null),S([o.Action(C)],e.ɵc.prototype,"updateLanguageTextByName",null),S([o.Action(x)],e.ɵc.prototype,"restoreLanguageTextByName",null),S([o.Selector()],e.ɵc,"getLanguages",null),S([o.Selector()],e.ɵc,"getLanguagesTotalCount",null),S([o.Selector()],e.ɵc,"getLanguageTexts",null),S([o.Selector()],e.ɵc,"getLanguageTextsTotalCount",null),S([o.Selector()],e.ɵc,"getCultures",null),S([o.Selector()],e.ɵc,"getResources",null),e.ɵc=S([o.State({name:"LanguageManagementState",defaults:{languageResponse:{},selectedItem:{},cultures:[],resources:[]}})],e.ɵc);var _=["ad","ae","af","ag","ai","al","am","ao","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bl","bm","bn","bo","bq","br","bs","bt","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","do","dz","ec","ee","eg","eh","er","es","et","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hn","hr","hr","ht","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mf","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tr","tt","tv","tw","tz","ua","ug","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","xk","ye","yt","za","zm","zw"],w="LanguageManagement.LanguagesComponent",G=function(){function t(e,t,a,n,r,o){this.list=e,this.confirmationService=t,this.store=a,this.injector=n,this.configState=r,this.appConfigService=o,this.isModalVisible=!1,this.modalBusy=!1,this.flagIcons=_}return t.prototype.createForm=function(){var t=this;this.store.select(e.ɵc.getCultures).pipe(s.switchMap((function(e){return e.length?i.of(e):t.store.dispatch(new T)}))).subscribe((function(){var e=new n.FormPropData(t.injector,t.selected);t.form=n.generateFormFromProps(e)}))},t.prototype.hookToQuery=function(){var e=this;this.list.hookToQuery((function(t){return e.store.dispatch(new h(t))})).subscribe()},t.prototype.ngOnInit=function(){this.hookToQuery()},t.prototype.openModal=function(){this.createForm(),this.isModalVisible=!0},t.prototype.add=function(){this.selected={},this.openModal()},t.prototype.edit=function(e){var t=this;this.store.dispatch(new b(e)).pipe(s.pluck("LanguageManagementState","selectedItem")).subscribe((function(e){t.selected=e,t.openModal()}))},t.prototype.save=function(){var e=this;this.form.valid&&(this.modalBusy=!0,this.store.dispatch(new y(this.form.value,this.selected.id)).pipe(s.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1,e.list.get(),e.selected.id||e.appConfigService.getConfiguration().subscribe((function(t){return e.configState.setState(t)}))})))},t.prototype.delete=function(e,t){var n=this;this.confirmationService.warn("LanguageManagement::LanguageDeletionConfirmationMessage","LanguageManagement::AreYouSure",{messageLocalizationParams:[t]}).subscribe((function(t){t===a.Confirmation.Status.confirm&&n.store.dispatch(new v(e)).subscribe((function(){return n.list.get()}))}))},t.prototype.setAsDefault=function(e){var t=this;this.store.dispatch(new L(e)).subscribe((function(){return t.list.get()}))},t}();G.decorators=[{type:r.Component,args:[{selector:"abp-languages",template:'<ng-container *ngIf="datas$ | async as data">\r\n  <div class="row entry-row">\r\n    <div class="col-auto">\r\n      <h1 class="content-header-title">{{ \'LanguageManagement::Languages\' | abpLocalization }}</h1>\r\n    </div>\r\n    <div class="col-lg-auto pl-lg-0">\r\n      <abp-breadcrumb></abp-breadcrumb>\r\n    </div>\r\n    <div class="col">\r\n      <abp-page-toolbar [record]="data"></abp-page-toolbar>\r\n    </div>\r\n  </div>\r\n\r\n  <div id="wrapper">\r\n    <div class="card">\r\n      <div class="card-body">\r\n        <div id="data-tables-table-filter" class="row">\r\n          <div class="col">\r\n            <div class="input-group">\r\n              <input\r\n                type="search"\r\n                class="form-control"\r\n                [placeholder]="\'AbpUi::PagerSearch\' | abpLocalization"\r\n                [(ngModel)]="list.filter"\r\n              />\r\n              <div class="input-group-append">\r\n                <button class="btn btn-primary" (click)="list.get()">\r\n                  <i class="fas fa-search"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="card">\r\n      <abp-extensible-table\r\n        [data]="data"\r\n        [recordsTotal]="totalCount$ | async"\r\n        [list]="list"\r\n      ></abp-extensible-table>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #displayName let-data>{{ data.displayName }}</ng-template>\r\n<ng-template #defaultLanguage let-data\r\n  ><strong\r\n    >{{ data.displayName }} ({{ \'LanguageManagement::DefaultLanguage\' | abpLocalization }})</strong\r\n  ></ng-template\r\n>\r\n\r\n<abp-modal [(visible)]="isModalVisible" [busy]="modalBusy">\r\n  <ng-template #abpHeader>\r\n    <h3>\r\n      {{\r\n        (selected?.id ? \'LanguageManagement::Edit\' : \'LanguageManagement::CreateNewLanguage\')\r\n          | abpLocalization\r\n      }}\r\n    </h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <form *ngIf="form" [formGroup]="form" (ngSubmit)="save()" validateOnSubmit>\r\n      <div class="mt-2">\r\n        <abp-extensible-form [selectedRecord]="selected"></abp-extensible-form>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type="button" class="btn btn-secondary" #abpClose>\r\n      {{ \'AbpIdentity::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass="fa fa-check" (click)="save()" [disabled]="form?.invalid">{{\r\n      \'AbpIdentity::Save\' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n',providers:[t.ListService,{provide:n.EXTENSIONS_IDENTIFIER,useValue:w}]}]}],G.ctorParameters=function(){return[{type:t.ListService},{type:a.ConfirmationService},{type:o.Store},{type:r.Injector},{type:t.ConfigStateService},{type:t.ApplicationConfigurationService}]},S([o.Select(e.ɵc.getLanguages)],G.prototype,"datas$",void 0),S([o.Select(e.ɵc.getLanguagesTotalCount)],G.prototype,"totalCount$",void 0),S([o.Select(e.ɵc.getCultures)],G.prototype,"cultures$",void 0);var O=function(){function t(e,t,a,n){this.list=e,this.store=t,this.renderer=a,this.configState=n,this.pageQuery={},this.isModalVisible=!1,this.modalBusy=!1,this.resources=[]}return t.prototype.ngOnInit=function(){var t=this;this.languages=this.configState.getDeep("localization.languages"),this.store.dispatch(new M).subscribe((function(){t.resources=t.store.selectSnapshot(e.ɵc.getResources)})),this.pageQuery={baseCultureName:this.languages[0].cultureName,targetCultureName:f.default((function(){return t.languages[1].cultureName}),this.languages[0].cultureName),getOnlyEmptyValues:!1},this.hookToQuery(),this.columns=[{field:"name",header:"LanguageManagement::Key"},{field:"baseValue",header:"LanguageManagement::BaseValue"},{field:"value",header:"LanguageManagement::Value"},{field:"resourceName",header:"LanguageManagement::ResourceName"}]},t.prototype.openModal=function(){this.isModalVisible=!0},t.prototype.closeModal=function(){this.isModalVisible=!1,this.selected={},this.selectedIndex=null},t.prototype.hookToQuery=function(){var e=this;this.list.hookToQuery((function(t){return e.store.dispatch(new N(Object.assign(Object.assign({},t),e.pageQuery)))})).pipe(s.withLatestFrom(this.datas$)).subscribe((function(t){var a=E(t,2),n=(a[0],a[1]);if(e.isModalVisible){if(!n[e.selectedIndex])return void e.closeModal();e.selected=n[e.selectedIndex]||{}}}))},t.prototype.edit=function(e,t){this.selectedIndex=t%this.list.maxResultCount,this.selected=e,this.openModal()},t.prototype.save=function(t){var a=this;this.modalBusy||(this.modalBusy=!0,this.store.dispatch(new C({cultureName:this.selected.cultureName,name:this.selected.name,resourceName:this.selected.resourceName,value:this.selected.value||""})).pipe(s.finalize((function(){setTimeout((function(){a.modalBusy=!1}),200),t||a.closeModal()}))).subscribe((function(){t&&a.datas$.pipe(s.take(1)).subscribe((function(t){var n=a.store.selectSnapshot(e.ɵc.getLanguageTextsTotalCount),r=a.list.maxResultCount;a.selectedIndex+1===n%r&&10*a.list.page+r>=n?a.closeModal():(a.selectedIndex+1)%r==0?(a.selectedIndex=0,a.list.page=a.list.page+1,a.renderer.removeClass(document.getElementById("LanguageTextToEdit_TargetCultureValue"),"ng-dirty")):(a.selectedIndex+=1,a.selected=t[a.selectedIndex]||{},a.renderer.removeClass(document.getElementById("LanguageTextToEdit_TargetCultureValue"),"ng-dirty"))})),a.list.get()})))},t.prototype.restore=function(){var e=this;this.store.dispatch(new x({cultureName:this.selected.cultureName,name:this.selected.name,resourceName:this.selected.resourceName})).subscribe((function(){e.closeModal(),e.list.get()}))},t}();O.decorators=[{type:r.Component,args:[{selector:"abp-language-texts",template:'<ng-container *ngIf="datas$ | async as data">\r\n  <div class="row entry-row">\r\n    <div class="col-auto">\r\n      <h1 class="content-header-title">\r\n        {{ \'LanguageManagement::LanguageTexts\' | abpLocalization }}\r\n      </h1>\r\n    </div>\r\n    <div class="col-lg-auto pl-lg-0">\r\n      <abp-breadcrumb></abp-breadcrumb>\r\n    </div>\r\n    <div class="col">\r\n      <abp-page-toolbar [record]="data"></abp-page-toolbar>\r\n    </div>\r\n  </div>\r\n\r\n  <div id="wrapper">\r\n    <div class="card">\r\n      <div class="card-body">\r\n        <form id="FilterFormId" (keyup.enter)="list.get()">\r\n          <div class="row">\r\n            <div class="col-12 col-md-3">\r\n              <div class="form-group">\r\n                <label for="BaseCultureName">{{\r\n                  \'LanguageManagement::BaseCultureName\' | abpLocalization\r\n                }}</label>\r\n                <select\r\n                  class="custom-select form-control"\r\n                  id="BaseCultureName"\r\n                  name="BaseCultureName"\r\n                  [(ngModel)]="pageQuery.baseCultureName"\r\n                  (change)="list.get()"\r\n                >\r\n                  <option *ngFor="let lang of languages" [ngValue]="lang.cultureName">\r\n                    {{ lang.displayName }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class="col-12 col-md-3">\r\n              <div class="form-group">\r\n                <label for="TargetCultureName">{{\r\n                  \'LanguageManagement::TargetCultureName\' | abpLocalization\r\n                }}</label>\r\n                <select\r\n                  class="custom-select form-control"\r\n                  id="TargetCultureName"\r\n                  name="TargetCultureName"\r\n                  [(ngModel)]="pageQuery.targetCultureName"\r\n                  (change)="list.get()"\r\n                >\r\n                  <option *ngFor="let lang of languages" [ngValue]="lang.cultureName">\r\n                    {{ lang.displayName }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class="col-12 col-md-3">\r\n              <div class="form-group">\r\n                <label for="ResourceName">{{\r\n                  \'LanguageManagement::ResourceName\' | abpLocalization\r\n                }}</label>\r\n                <select\r\n                  class="custom-select form-control"\r\n                  id="ResourceName"\r\n                  name="ResourceName"\r\n                  [(ngModel)]="pageQuery.resourceName"\r\n                  (change)="list.get()"\r\n                >\r\n                  <option [ngValue]="undefined"></option>\r\n                  <option *ngFor="let resource of resources" [ngValue]="resource.name">\r\n                    {{ resource.name }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class="col-12 col-md-3">\r\n              <div class="form-group">\r\n                <label for="GetOnlyEmptyValues">{{\r\n                  \'LanguageManagement::TargetValue\' | abpLocalization\r\n                }}</label>\r\n                <select\r\n                  class="custom-select form-control"\r\n                  id="GetOnlyEmptyValues"\r\n                  name="GetOnlyEmptyValues"\r\n                  [(ngModel)]="pageQuery.getOnlyEmptyValues"\r\n                  (change)="list.get()"\r\n                >\r\n                  <option [ngValue]="false">\r\n                    {{ \'LanguageManagement::All\' | abpLocalization }}\r\n                  </option>\r\n                  <option [ngValue]="true">\r\n                    {{ \'LanguageManagement::OnlyEmptyValues\' | abpLocalization }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class="row">\r\n            <div class="col-md-12">\r\n              <div class="input-group mb-3 mb-lg-0">\r\n                <input\r\n                  class="form-control"\r\n                  [placeholder]="\'LanguageManagement::Filter\' | abpLocalization"\r\n                  type="text"\r\n                  id="Filter"\r\n                  name="Filter"\r\n                  [(ngModel)]="list.filter"\r\n                />\r\n                <div class="input-group-append">\r\n                  <button\r\n                    id="FilterFormSubmitButtonId"\r\n                    class="btn btn-primary"\r\n                    type="button"\r\n                    (click)="list.get()"\r\n                  >\r\n                    {{ \'LanguageManagement::Refresh\' | abpLocalization }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="card">\r\n      <ngx-datatable default [rows]="data" [count]="totalCount$ | async" [list]="list">\r\n        <ngx-datatable-column\r\n          [name]="\'LanguageManagement::Actions\' | abpLocalization"\r\n          [maxWidth]="150"\r\n          [width]="150"\r\n          [sortable]="false"\r\n        >\r\n          <ng-template let-row="row" let-i="rowIndex" ngx-datatable-cell-template>\r\n            <abp-grid-actions\r\n              [index]="i"\r\n              [record]="row"\r\n              text="LanguageManagement::Actions"\r\n            ></abp-grid-actions>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column\r\n          *ngFor="let col of columns"\r\n          [name]="col.header | abpLocalization"\r\n          [prop]="col.field"\r\n          [width]="200"\r\n        >\r\n          <ng-template let-row="row" let-i="index" ngx-datatable-cell-template>\r\n            <div abpEllipsis>\r\n              {{ row[col.field] }}\r\n            </div>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n<abp-modal [(visible)]="isModalVisible" [busy]="modalBusy">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ \'LanguageManagement::Edit\' | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <div class="fade" [class.show]="!modalBusy">\r\n      <div class="form-group">\r\n        <label>{{ \'LanguageManagement::Key\' | abpLocalization }}</label>\r\n        <div>\r\n          <strong>{{ selected.name }}</strong>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="form-group">\r\n        <label for="LanguageTextToEdit_BaseCultureValue">{{\r\n          \'LanguageManagement::BaseValue\' | abpLocalization\r\n        }}</label\r\n        ><textarea\r\n          id="LanguageTextToEdit_BaseCultureValue"\r\n          name="LanguageTextToEdit.BaseCultureValue"\r\n          rows="4"\r\n          disabled\r\n          class="form-control"\r\n          [value]="selected.baseValue"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div class="form-group">\r\n        <label for="LanguageTextToEdit_BaseCultureValue">{{\r\n          \'LanguageManagement::TargetValue\' | abpLocalization\r\n        }}</label\r\n        ><textarea\r\n          id="LanguageTextToEdit_TargetCultureValue"\r\n          name="LanguageTextToEdit.TargetCultureValue"\r\n          rows="4"\r\n          class="form-control"\r\n          (keyup.enter)="save(false)"\r\n          [(ngModel)]="selected.value"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button type="button" class="btn btn-sm btn-outline-primary" #abpClose>\r\n      {{ \'LanguageManagement::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <abp-button\r\n      iconClass="fa fa-check"\r\n      buttonClass="btn btn-sm btn-outline-primary"\r\n      (click)="restore()"\r\n      >{{ \'LanguageManagement::RestoreToDefault\' | abpLocalization }}</abp-button\r\n    >\r\n    <abp-button\r\n      iconClass="fa fa-check"\r\n      buttonClass="btn btn-sm btn-primary"\r\n      (click)="save(false)"\r\n      [loading]="modalBusy"\r\n      >{{ \'LanguageManagement::Save\' | abpLocalization }}</abp-button\r\n    >\r\n    <abp-button\r\n      iconClass="fa fa-check"\r\n      buttonClass="btn btn-sm btn-success"\r\n      (click)="save(true)"\r\n      [loading]="modalBusy"\r\n      >{{ \'LanguageManagement::SaveAndNext\' | abpLocalization }}\r\n      <i class="fa fa-arrow-right ml-1"></i\r\n    ></abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n',providers:[t.ListService,{provide:n.EXTENSIONS_IDENTIFIER,useValue:"LanguageManagement.LanguageTextsComponent"}]}]}],O.ctorParameters=function(){return[{type:t.ListService},{type:o.Store},{type:r.Renderer2},{type:t.ConfigStateService}]},S([o.Select(e.ɵc.getLanguageTexts)],O.prototype,"datas$",void 0),S([o.Select(e.ɵc.getLanguageTextsTotalCount)],O.prototype,"totalCount$",void 0);var j,k,B,V,P,D=n.EntityAction.createMany([{text:"LanguageManagement::Edit",action:function(e){e.getInjected(O).edit(e.record,e.index)},permission:"LanguageManagement.Languages.Edit"}]),z=n.ToolbarAction.createMany([]),F=n.EntityAction.createMany([{text:"LanguageManagement::Edit",action:function(e){e.getInjected(G).edit(e.record.id)},permission:"LanguageManagement.Languages.Edit"},{text:"LanguageManagement::Delete",action:function(e){e.getInjected(G).delete(e.record.id,e.record.displayName)},permission:"LanguageManagement.Languages.Delete"},{text:"LanguageManagement::SetAsDefaultLanguage",action:function(e){e.getInjected(G).setAsDefault(e.record.id)},permission:"LanguageManagement.Languages.ChangeDefault"}]),U=n.EntityProp.createMany([{type:"string",name:"displayName",displayName:"LanguageManagement::DisplayName",columnWidth:200,valueResolver:function(e){var a=e.record,n=a.displayName;if(!a.isDefaultLanguage)return i.of(n);var r=e.getInjected(t.LocalizationService),o=r.instant.bind(r);return i.of("<strong>"+n+" ("+o("LanguageManagement::DefaultLanguage")+")</strong>")}},{type:"string",name:"cultureName",displayName:"LanguageManagement::CultureName",columnWidth:200},{type:"string",name:"uiCultureName",displayName:"LanguageManagement::UiCultureName",columnWidth:200},{type:"boolean",name:"isEnabled",displayName:"LanguageManagement::IsEnabled",columnWidth:100},{type:"string",name:"flagIcon",displayName:"LanguageManagement::FlagIcon",columnWidth:100,valueResolver:function(e){var t=e.record,a=t.displayName,n=t.flagIcon;return i.of('<span class="flag-icon flag-icon-squared flag-icon-'+n+'" title="'+a+'"></span>')}}]),q=n.FormProp.createMany([{type:"string",name:"cultureName",displayName:"LanguageManagement::CultureName",id:"culture-name",validators:function(){return[l.Validators.required]},options:function(e){return e.getInjected(G).cultures$.pipe(s.map((function(e){return e.map((function(e){return{key:e.displayName,value:e.name}}))})))}},{type:"string",name:"uiCultureName",displayName:"LanguageManagement::UiCultureName",id:"ui-culture-name",validators:function(){return[l.Validators.required]},options:function(e){return e.getInjected(G).cultures$.pipe(s.map((function(e){return e.map((function(e){return{key:e.displayName,value:e.name}}))})))}},{type:"string",name:"displayName",displayName:"LanguageManagement::DisplayName",id:"name",validators:function(){return[l.Validators.required,l.Validators.maxLength(256)]}},{type:"string",name:"flagIcon",displayName:"LanguageManagement::FlagIcon",id:"flag-icon",validators:function(){return[l.Validators.required]},options:function(e){return i.of(e.getInjected(G).flagIcons.map((function(e){return{key:e,value:e}})))}},{type:"boolean",name:"isEnabled",displayName:"LanguageManagement::IsEnabled",id:"is-enabled",defaultValue:!1}]),$=q.slice(2),Q=n.ToolbarAction.createMany([{text:"LanguageManagement::CreateNewLanguage",action:function(e){e.getInjected(G).add()},permission:"LanguageManagement.Languages.Create",icon:"fa fa-plus"}]),W=((j={})["LanguageManagement.LanguagesComponent"]=F,j["LanguageManagement.LanguageTextsComponent"]=D,j),Y=((k={})["LanguageManagement.LanguagesComponent"]=Q,k["LanguageManagement.LanguageTextsComponent"]=z,k),H=((B={})["LanguageManagement.LanguagesComponent"]=U,B),K=((V={})["LanguageManagement.LanguagesComponent"]=q,V),X=((P={})["LanguageManagement.LanguagesComponent"]=$,P),J=new r.InjectionToken("LANGUAGE_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS"),Z=new r.InjectionToken("LANGUAGE_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS"),ee=new r.InjectionToken("LANGUAGE_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS"),te=new r.InjectionToken("LANGUAGE_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS"),ae=new r.InjectionToken("LANGUAGE_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS"),ne=function(){function e(e){this.injector=e}return e.prototype.canActivate=function(){var e=this.injector.get(n.ExtensionsService),a=this.injector.get(J,null)||{},r=this.injector.get(Z,null)||{},o=this.injector.get(ee,null)||{},i=this.injector.get(te,null)||{},u=this.injector.get(ae,null)||{},l=this.injector.get(t.ConfigStateService);return n.getObjectExtensionEntitiesFromStore(l,"LanguageManagement").pipe(s.map((function(e){var t;return(t={})["LanguageManagement.LanguagesComponent"]=e.Language,t})),n.mapEntitiesToContributors(l,"LanguageManagement"),s.tap((function(t){n.mergeWithDefaultActions(e.entityActions,W,a),n.mergeWithDefaultActions(e.toolbarActions,Y,r),n.mergeWithDefaultProps(e.entityProps,H,t.prop,o),n.mergeWithDefaultProps(e.createFormProps,K,t.createForm,i),n.mergeWithDefaultProps(e.editFormProps,X,t.editForm,u)})),s.mapTo(!0))},e}();ne.decorators=[{type:r.Injectable}],ne.ctorParameters=function(){return[{type:r.Injector}]};var re={requiredPolicy:"LanguageManagement.Languages",replaceableComponent:{key:"LanguageManagement.LanguagesComponent",defaultComponent:G}},oe={requiredPolicy:"LanguageManagement.LanguageTexts",replaceableComponent:{key:"LanguageManagement.LanguageTextsComponent",defaultComponent:O}},ie=[{path:"",redirectTo:"languages",pathMatch:"full"},{path:"",component:t.DynamicLayoutComponent,canActivate:[t.AuthGuard,t.PermissionGuard,ne],children:[{path:"languages",component:t.ReplaceableRouteContainerComponent,data:re},{path:"texts",component:t.ReplaceableRouteContainerComponent,data:oe}]}],se=function(){};se.decorators=[{type:r.NgModule,args:[{imports:[d.RouterModule.forChild(ie)],exports:[d.RouterModule]}]}];var ue=function(){function e(){}return e.forChild=function(t){return void 0===t&&(t={}),{ngModule:e,providers:[{provide:J,useValue:t.entityActionContributors},{provide:Z,useValue:t.toolbarActionContributors},{provide:ee,useValue:t.entityPropContributors},{provide:te,useValue:t.createFormPropContributors},{provide:ae,useValue:t.editFormPropContributors},ne]}},e.forLazy=function(a){return void 0===a&&(a={}),new t.LazyModuleFactory(e.forChild(a))},e}();ue.decorators=[{type:r.NgModule,args:[{declarations:[G,O],exports:[G,O],imports:[se,o.NgxsModule.forFeature([e.ɵc]),t.CoreModule,p.CommercialUiModule,a.ThemeSharedModule,g.NgbDropdownModule,c.NgxValidateCoreModule]}]}];var le=function(){function t(e){this.store=e}return t.prototype.getLanguages=function(){return this.store.selectSnapshot(e.ɵc.getLanguages)},t.prototype.getLanguagesTotalCount=function(){return this.store.selectSnapshot(e.ɵc.getLanguagesTotalCount)},t.prototype.getLanguageTexts=function(){return this.store.selectSnapshot(e.ɵc.getLanguageTexts)},t.prototype.getLanguageTextsTotalCount=function(){return this.store.selectSnapshot(e.ɵc.getLanguageTextsTotalCount)},t.prototype.getCultures=function(){return this.store.selectSnapshot(e.ɵc.getCultures)},t.prototype.getResources=function(){return this.store.selectSnapshot(e.ɵc.getResources)},t.prototype.dispatchGetLanguages=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(h.bind.apply(h,A([void 0],e))))},t.prototype.dispatchGetLanguageById=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(b.bind.apply(b,A([void 0],e))))},t.prototype.dispatchCreateUpdateLanguage=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(y.bind.apply(y,A([void 0],e))))},t.prototype.dispatchDeleteLanguage=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(v.bind.apply(v,A([void 0],e))))},t.prototype.dispatchSetAsDefaultLanguage=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(L.bind.apply(L,A([void 0],e))))},t.prototype.dispatchGetLanguageTexts=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(N.bind.apply(N,A([void 0],e))))},t.prototype.dispatchGetLanguageCultures=function(){return this.store.dispatch(new T)},t.prototype.dispatchGetLanguageResources=function(){return this.store.dispatch(new M)},t.prototype.dispatchUpdateLanguageTextByName=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(C.bind.apply(C,A([void 0],e))))},t.prototype.dispatchRestoreLanguageTextByName=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(x.bind.apply(x,A([void 0],e))))},t}();le.ɵprov=r.ɵɵdefineInjectable({factory:function(){return new le(r.ɵɵinject(o.Store))},token:le,providedIn:"root"}),le.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],le.ctorParameters=function(){return[{type:o.Store}]},e.CreateUpdateLanguage=y,e.DEFAULT_LANGUAGE_MANAGEMENT_CREATE_FORM_PROPS=K,e.DEFAULT_LANGUAGE_MANAGEMENT_EDIT_FORM_PROPS=X,e.DEFAULT_LANGUAGE_MANAGEMENT_ENTITY_ACTIONS=W,e.DEFAULT_LANGUAGE_MANAGEMENT_ENTITY_PROPS=H,e.DEFAULT_LANGUAGE_MANAGEMENT_TOOLBAR_ACTIONS=Y,e.DeleteLanguage=v,e.GetLanguageById=b,e.GetLanguageCultures=T,e.GetLanguageResources=M,e.GetLanguageTexts=N,e.GetLanguages=h,e.LANGUAGE_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS=te,e.LANGUAGE_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS=ae,e.LANGUAGE_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS=J,e.LANGUAGE_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS=ee,e.LANGUAGE_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS=Z,e.LanguageManagementExtensionsGuard=ne,e.LanguageManagementModule=ue,e.LanguageManagementState=e.ɵc,e.LanguageManagementStateService=le,e.LanguageService=R,e.LanguageTextService=I,e.LanguageTextsComponent=O,e.LanguagesComponent=G,e.RestoreLanguageTextByName=x,e.SetAsDefaultLanguage=L,e.UpdateLanguageTextByName=C,e.ɵ0=w,e.ɵa=G,e.ɵd=h,e.ɵe=b,e.ɵf=y,e.ɵg=v,e.ɵh=L,e.ɵi=N,e.ɵj=T,e.ɵk=M,e.ɵl=C,e.ɵm=x,e.ɵp=O,e.ɵq=se,e.ɵr=ne,e.ɵs=J,e.ɵt=Z,e.ɵu=ee,e.ɵv=te,e.ɵw=ae,Object.defineProperty(e,"__esModule",{value:!0})}));