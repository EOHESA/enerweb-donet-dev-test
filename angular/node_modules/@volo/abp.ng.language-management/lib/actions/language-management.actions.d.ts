import { CreateLanguageDto, GetLanguagesTextsInput, UpdateLanguageDto } from '../proxy/dto/models';
export declare class GetLanguages {
    payload: GetLanguagesTextsInput;
    static readonly type = "[LanguageManagement] Get";
    constructor(payload?: GetLanguagesTextsInput);
}
export declare class GetLanguageById {
    payload: string;
    static readonly type = "[LanguageManagement] Get By Id";
    constructor(payload: string);
}
export declare class CreateUpdateLanguage {
    payload: CreateLanguageDto | UpdateLanguageDto;
    id?: string;
    static readonly type = "[LanguageManagement] Create";
    constructor(payload: CreateLanguageDto | UpdateLanguageDto, id?: string);
}
export declare class DeleteLanguage {
    payload: string;
    static readonly type = "[LanguageManagement] Delete";
    constructor(payload: string);
}
export declare class SetAsDefaultLanguage {
    payload: string;
    static readonly type = "[LanguageManagement] Set As Default";
    constructor(payload: string);
}
export declare class GetLanguageTexts {
    payload: GetLanguagesTextsInput;
    static readonly type = "[LanguageManagement] Get Texts";
    constructor(payload: GetLanguagesTextsInput);
}
export declare class GetLanguageCultures {
    static readonly type = "[LanguageManagement] Get Cultures";
}
export declare class GetLanguageResources {
    static readonly type = "[LanguageManagement] Get Resources";
}
export declare class UpdateLanguageTextByName {
    payload: {
        resourceName: string;
        cultureName: string;
        name: string;
        value: string;
    };
    static readonly type = "[LanguageManagement] Update Language Text By Name";
    constructor(payload: {
        resourceName: string;
        cultureName: string;
        name: string;
        value: string;
    });
}
export declare class RestoreLanguageTextByName {
    payload: {
        resourceName: string;
        cultureName: string;
        name: string;
    };
    static readonly type = "[LanguageManagement] Restore Language Text By Name";
    constructor(payload: {
        resourceName: string;
        cultureName: string;
        name: string;
    });
}
