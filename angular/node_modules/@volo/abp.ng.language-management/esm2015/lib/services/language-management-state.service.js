import{Injectable}from"@angular/core";import{Store}from"@ngxs/store";import{LanguageManagementState}from"../states";import{GetLanguages,GetLanguageById,CreateUpdateLanguage,DeleteLanguage,SetAsDefaultLanguage,GetLanguageTexts,GetLanguageCultures,GetLanguageResources,UpdateLanguageTextByName,RestoreLanguageTextByName}from"../actions";import*as i0 from"@angular/core";import*as i1 from"@ngxs/store";export class LanguageManagementStateService{constructor(e){this.store=e}getLanguages(){return this.store.selectSnapshot(LanguageManagementState.getLanguages)}getLanguagesTotalCount(){return this.store.selectSnapshot(LanguageManagementState.getLanguagesTotalCount)}getLanguageTexts(){return this.store.selectSnapshot(LanguageManagementState.getLanguageTexts)}getLanguageTextsTotalCount(){return this.store.selectSnapshot(LanguageManagementState.getLanguageTextsTotalCount)}getCultures(){return this.store.selectSnapshot(LanguageManagementState.getCultures)}getResources(){return this.store.selectSnapshot(LanguageManagementState.getResources)}dispatchGetLanguages(...e){return this.store.dispatch(new GetLanguages(...e))}dispatchGetLanguageById(...e){return this.store.dispatch(new GetLanguageById(...e))}dispatchCreateUpdateLanguage(...e){return this.store.dispatch(new CreateUpdateLanguage(...e))}dispatchDeleteLanguage(...e){return this.store.dispatch(new DeleteLanguage(...e))}dispatchSetAsDefaultLanguage(...e){return this.store.dispatch(new SetAsDefaultLanguage(...e))}dispatchGetLanguageTexts(...e){return this.store.dispatch(new GetLanguageTexts(...e))}dispatchGetLanguageCultures(){return this.store.dispatch(new GetLanguageCultures)}dispatchGetLanguageResources(){return this.store.dispatch(new GetLanguageResources)}dispatchUpdateLanguageTextByName(...e){return this.store.dispatch(new UpdateLanguageTextByName(...e))}dispatchRestoreLanguageTextByName(...e){return this.store.dispatch(new RestoreLanguageTextByName(...e))}}LanguageManagementStateService.ɵprov=i0.ɵɵdefineInjectable({factory:function(){return new LanguageManagementStateService(i0.ɵɵinject(i1.Store))},token:LanguageManagementStateService,providedIn:"root"}),LanguageManagementStateService.decorators=[{type:Injectable,args:[{providedIn:"root"}]}],LanguageManagementStateService.ctorParameters=()=>[{type:Store}];